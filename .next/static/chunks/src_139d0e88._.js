(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/src/lib/data/index.ts [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
// Firestore-based data service - replaces JSON file operations
// Original JSON-based service backed up as index-json-backup.ts
__turbopack_context__.s({});
;
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data/index.ts [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$2f$index$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/src/lib/data/index.ts [app-client] (ecmascript) <locals>");
}}),
"[project]/src/lib/data:115243 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f4eefc53973b8e6fbed50ffa2cc64fe40df104ad3":"addEmployee"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "addEmployee": (()=>addEmployee)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var addEmployee = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f4eefc53973b8e6fbed50ffa2cc64fe40df104ad3", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "addEmployee"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:67caa4 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fa8bc842463b1ec33e139235445fa57278ad38b35":"getEmployees"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "getEmployees": (()=>getEmployees)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getEmployees = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fa8bc842463b1ec33e139235445fa57278ad38b35", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getEmployees"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:e101b0 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fe3bac712c1f2e1723b72df2734d1286a00c8a875":"deleteEmployee"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "deleteEmployee": (()=>deleteEmployee)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var deleteEmployee = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fe3bac712c1f2e1723b72df2734d1286a00c8a875", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "deleteEmployee"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:f70afb [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fc6f659357e4b54787c2a339bdb6e16e7ae761acb":"addLead"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "addLead": (()=>addLead)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var addLead = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fc6f659357e4b54787c2a339bdb6e16e7ae761acb", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "addLead"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:52c587 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f4280ff5e64067f99266109815caf0860a45cc58c":"getLeads"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "getLeads": (()=>getLeads)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getLeads = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f4280ff5e64067f99266109815caf0860a45cc58c", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getLeads"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:8ebebf [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f579d5a450a43d8b74c568f68ca2b3c2566dc4a95":"deleteLead"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "deleteLead": (()=>deleteLead)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var deleteLead = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f579d5a450a43d8b74c568f68ca2b3c2566dc4a95", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "deleteLead"); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vZmlyZXN0b3JlLWRhdGEtc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IFxuICBlbXBsb3llZVNlcnZpY2UsIFxuICBsZWFkU2VydmljZSwgXG4gIHByb2R1Y3RTZXJ2aWNlLCBcbiAgcXVvdGF0aW9uU2VydmljZSxcbiAgZGVwYXJ0bWVudHNTZXJ2aWNlLFxuICBlbXBsb3llZVJvbGVzU2VydmljZSxcbiAgbGVhZFNvdXJjZXNTZXJ2aWNlLFxuICBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlXG59IGZyb20gJy4vYnVzaW5lc3Mtc2VydmljZXMnO1xuaW1wb3J0IHsgXG4gIEVtcGxveWVlLCBcbiAgTGVhZCwgXG4gIFByb2R1Y3QsIFxuICBRdW90YXRpb24sIFxuICBRdW90YXRpb25UZW1wbGF0ZSxcbiAgRGVwYXJ0bWVudCxcbiAgRW1wbG95ZWVSb2xlLFxuICBMZWFkU291cmNlLFxuICBMZWFkQWN0aXZpdHlcbn0gZnJvbSAnLi9idXNpbmVzcy10eXBlcyc7XG5pbXBvcnQgeyBUaW1lc3RhbXAgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgVGltZXN0YW1wcyB0byBwbGFpbiBvYmplY3RzXG5mdW5jdGlvbiBjb252ZXJ0VGltZXN0YW1wVG9QbGFpbihvYmo6IGFueSk6IGFueSB7XG4gIGlmICghb2JqKSByZXR1cm4gb2JqO1xuICBcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFRpbWVzdGFtcCkge1xuICAgIHJldHVybiBvYmoudG9EYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgfVxuICBcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiBvYmoubWFwKGl0ZW0gPT4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oaXRlbSkpO1xuICB9XG4gIFxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBjb252ZXJ0ZWQ6IGFueSA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIGNvbnZlcnRlZFtrZXldID0gY29udmVydFRpbWVzdGFtcFRvUGxhaW4ob2JqW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29udmVydGVkO1xuICB9XG4gIFxuICByZXR1cm4gb2JqO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgZG9jdW1lbnRzIHRvIHBsYWluIG9iamVjdHNcbmZ1bmN0aW9uIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluPFQ+KGRvYzogVCk6IFQge1xuICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oZG9jKTtcbn1cblxuLy8gVHlwZSBkZWZpbml0aW9ucyB0byBtYXRjaCB5b3VyIGV4aXN0aW5nIHR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2aXR5IGV4dGVuZHMgTGVhZEFjdGl2aXR5IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3RW1wbG95ZWUge1xuICBuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG4gIHJvbGU6IHN0cmluZztcbiAgZGVwYXJ0bWVudDogc3RyaW5nO1xuICBhZGRyZXNzOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3UHJvZHVjdCB7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgZ3N0UmF0ZTogbnVtYmVyO1xuICBza3VzPzogc3RyaW5nW107XG4gIGNhdGFsb2d1ZVVybD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVcGRhdGFibGVMZWFkRGF0YSB7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNvbXBhbnk/OiBzdHJpbmc7XG4gIGVtYWlsPzogc3RyaW5nO1xuICBwaG9uZT86IHN0cmluZztcbiAgd2hhdHNhcHBOdW1iZXI/OiBzdHJpbmc7XG4gIHN0YXR1cz86IExlYWRbJ3N0YXR1cyddO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIHByb2R1Y3RzPzogTGVhZFsncHJvZHVjdHMnXTtcbn1cblxuLy8gRW1wbG95ZWUgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RW1wbG95ZWVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVbXT4gPT4ge1xuICBjb25zdCBlbXBsb3llZXMgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBlbXBsb3llZXMubWFwKGVtcCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihlbXApKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZUJ5SWQgPSBhc3luYyAoaWQ6IHN0cmluZyk6IFByb21pc2U8RW1wbG95ZWUgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgZW1wbG95ZWUgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIHJldHVybiBlbXBsb3llZSA/IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGVtcGxveWVlKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZSA9IGFzeW5jIChlbXBsb3llZURhdGE6IE5ld0VtcGxveWVlKTogUHJvbWlzZTxFbXBsb3llZT4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IGVtcGxveWVlU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLmVtcGxveWVlRGF0YSxcbiAgICBpc0FjdGl2ZTogdHJ1ZVxuICB9KTtcbiAgXG4gIGNvbnN0IG5ld0VtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld0VtcGxveWVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIGVtcGxveWVlJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdFbXBsb3llZSk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlRW1wbG95ZWUgPSBhc3luYyAoaWQ6IHN0cmluZywgZW1wbG95ZWVEYXRhOiBQYXJ0aWFsPE5ld0VtcGxveWVlPik6IFByb21pc2U8RW1wbG95ZWU+ID0+IHtcbiAgYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLnVwZGF0ZShpZCwgZW1wbG95ZWVEYXRhKTtcbiAgY29uc3QgdXBkYXRlZEVtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRFbXBsb3llZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRW1wbG95ZWUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkRW1wbG95ZWUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUVtcGxveWVlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBMZWFkIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRzID0gYXN5bmMgKHF1ZXJ5Pzogc3RyaW5nLCBzdGF0dXM/OiBzdHJpbmcpOiBQcm9taXNlPExlYWRbXT4gPT4ge1xuICBsZXQgbGVhZHM6IExlYWRbXSA9IFtdO1xuICBcbiAgaWYgKHN0YXR1cykge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0TGVhZHNCeVN0YXR1cyhzdGF0dXMgYXMgTGVhZFsnc3RhdHVzJ10pO1xuICB9IGVsc2Uge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QWxsKCk7XG4gIH1cbiAgXG4gIC8vIENvbnZlcnQgdG8gcGxhaW4gb2JqZWN0c1xuICBsZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGlmIChxdWVyeSkge1xuICAgIGNvbnN0IGxvd2VyY2FzZWRRdWVyeSA9IHF1ZXJ5LnRvTG93ZXJDYXNlKCk7XG4gICAgbGVhZHMgPSBsZWFkcy5maWx0ZXIoXG4gICAgICBsZWFkID0+XG4gICAgICAgIGxlYWQubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGxvd2VyY2FzZWRRdWVyeSkgfHxcbiAgICAgICAgbGVhZC5jb21wYW55LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMobG93ZXJjYXNlZFF1ZXJ5KVxuICAgICk7XG4gIH1cbiAgXG4gIHJldHVybiBsZWFkcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgY29uc3QgYURhdGUgPSBhLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGEuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgY29uc3QgYkRhdGUgPSBiLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGIuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldExlYWRCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPExlYWQgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIWxlYWQpIHJldHVybiB1bmRlZmluZWQ7XG4gIFxuICBjb25zdCBwbGFpbkxlYWQgPSBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihsZWFkKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5wbGFpbkxlYWQsXG4gICAgYWN0aXZpdGllczogcGxhaW5MZWFkLmFjdGl2aXRpZXMuc29ydCgoYTogYW55LCBiOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGFEYXRlID0gbmV3IERhdGUoYS5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIGNvbnN0IGJEYXRlID0gbmV3IERhdGUoYi5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICAgIH0pXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmVjZW50QWN0aXZpdGllcyA9IGFzeW5jIChsaW1pdDogbnVtYmVyKTogUHJvbWlzZTx7IGxlYWQ6IExlYWQ7IGFjdGl2aXR5OiBBY3Rpdml0eSB9W10+ID0+IHtcbiAgY29uc3QgbGVhZHMgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRBbGwoKTtcbiAgY29uc3QgcGxhaW5MZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGNvbnN0IGFsbEFjdGl2aXRpZXMgPSBwbGFpbkxlYWRzLmZsYXRNYXAobGVhZCA9PiBcbiAgICBsZWFkLmFjdGl2aXRpZXMubWFwKGFjdGl2aXR5ID0+ICh7IGxlYWQsIGFjdGl2aXR5IH0pKVxuICApO1xuICBcbiAgcmV0dXJuIGFsbEFjdGl2aXRpZXNcbiAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgY29uc3QgYURhdGUgPSBuZXcgRGF0ZShhLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgY29uc3QgYkRhdGUgPSBuZXcgRGF0ZShiLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gICAgfSlcbiAgICAuc2xpY2UoMCwgbGltaXQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZExlYWQgPSBhc3luYyAobGVhZERhdGE6IE9taXQ8TGVhZCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ2FjdGl2aXRpZXMnPiAmIHsgbm90ZXM/OiBzdHJpbmcgfSk6IFByb21pc2U8TGVhZD4gPT4ge1xuICBjb25zdCB7IG5vdGVzLCAuLi5yZXN0T2ZMZWFkRGF0YSB9ID0gbGVhZERhdGE7XG4gIFxuICBjb25zdCBpbml0aWFsQWN0aXZpdHk6IExlYWRBY3Rpdml0eVtdID0gW107XG4gIGlmIChub3Rlcykge1xuICAgIGluaXRpYWxBY3Rpdml0eS5wdXNoKHtcbiAgICAgIGlkOiBgYWN0LSR7RGF0ZS5ub3coKX0tMWAsXG4gICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB0eXBlOiAnRW1haWwnLFxuICAgICAgbm90ZXM6IGBMZWFkIGNyZWF0ZWQgaW4gdGhlIHN5c3RlbS4gSW5pdGlhbCBub3RlczogJHtub3Rlc31gLFxuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnJlc3RPZkxlYWREYXRhLFxuICAgIGFjdGl2aXRpZXM6IGluaXRpYWxBY3Rpdml0eSxcbiAgICBwcmlvcml0eTogJ01lZGl1bScsXG4gICAgZXN0aW1hdGVkVmFsdWU6IGxlYWREYXRhLnByb2R1Y3RzPy5yZWR1Y2UoKHN1bSwgcHJvZHVjdCkgPT4gXG4gICAgICBzdW0gKyAocHJvZHVjdC5xdWFudGl0eSAqIHByb2R1Y3QucmF0ZSksIDApIHx8IDBcbiAgfSk7XG4gIFxuICBjb25zdCBuZXdMZWFkID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3TGVhZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdMZWFkKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRBY3Rpdml0eVRvTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgYWN0aXZpdHlEYXRhOiBPbWl0PEFjdGl2aXR5LCAnaWQnIHwgJ2RhdGUnPik6IFByb21pc2U8QWN0aXZpdHk+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQobGVhZElkKTtcbiAgaWYgKCFsZWFkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdMZWFkIG5vdCBmb3VuZCcpO1xuICB9XG5cbiAgY29uc3QgbmV3QWN0aXZpdHk6IExlYWRBY3Rpdml0eSA9IHtcbiAgICAuLi5hY3Rpdml0eURhdGEsXG4gICAgaWQ6IGBhY3QtJHtsZWFkSWR9LSR7RGF0ZS5ub3coKX1gLFxuICAgIGRhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgfTtcbiAgXG4gIGF3YWl0IGxlYWRTZXJ2aWNlLmFkZEFjdGl2aXR5KGxlYWRJZCwgbmV3QWN0aXZpdHkpO1xuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3QWN0aXZpdHkpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUxlYWRTdGF0dXMgPSBhc3luYyAobGVhZElkOiBzdHJpbmcsIHN0YXR1czogTGVhZFsnc3RhdHVzJ10pOiBQcm9taXNlPExlYWQ+ID0+IHtcbiAgYXdhaXQgbGVhZFNlcnZpY2UudXBkYXRlU3RhdHVzKGxlYWRJZCwgc3RhdHVzKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgbGVhZERhdGE6IFVwZGF0YWJsZUxlYWREYXRhKTogUHJvbWlzZTxMZWFkPiA9PiB7XG4gIGF3YWl0IGxlYWRTZXJ2aWNlLnVwZGF0ZShsZWFkSWQsIGxlYWREYXRhKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlTGVhZCA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBsZWFkU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBQcm9kdWN0IGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldFByb2R1Y3RzID0gYXN5bmMgKCk6IFByb21pc2U8UHJvZHVjdFtdPiA9PiB7XG4gIGNvbnN0IHByb2R1Y3RzID0gYXdhaXQgcHJvZHVjdFNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBwcm9kdWN0cy5tYXAocHJvZHVjdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihwcm9kdWN0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkUHJvZHVjdCA9IGFzeW5jIChwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmNyZWF0ZSh7XG4gICAgLi4ucHJvZHVjdERhdGEsXG4gICAgaXNBY3RpdmU6IHRydWUsXG4gICAgc3RvY2tRdWFudGl0eTogMTAwLFxuICAgIG1pblN0b2NrTGV2ZWw6IDEwXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UHJvZHVjdCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1Byb2R1Y3QpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZHVjdCcpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3UHJvZHVjdCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlUHJvZHVjdCA9IGFzeW5jIChpZDogc3RyaW5nLCBwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBhd2FpdCBwcm9kdWN0U2VydmljZS51cGRhdGUoaWQsIHByb2R1Y3REYXRhKTtcbiAgY29uc3QgdXBkYXRlZFByb2R1Y3QgPSBhd2FpdCBwcm9kdWN0U2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCF1cGRhdGVkUHJvZHVjdCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRQcm9kdWN0KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVQcm9kdWN0ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIExlYWQgU291cmNlIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRTb3VyY2VzID0gYXN5bmMgKCk6IFByb21pc2U8TGVhZFNvdXJjZVtdPiA9PiB7XG4gIGNvbnN0IHNvdXJjZXMgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBzb3VyY2VzLm1hcChzb3VyY2UgPT4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4oc291cmNlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkTGVhZFNvdXJjZSA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPExlYWRTb3VyY2U+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuY3JlYXRlKHtcbiAgICBuYW1lLFxuICAgIGlzQWN0aXZlOiB0cnVlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3U291cmNlID0gYXdhaXQgbGVhZFNvdXJjZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1NvdXJjZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkIHNvdXJjZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3U291cmNlKTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVMZWFkU291cmNlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGxlYWRTb3VyY2VzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBRdW90YXRpb24gZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9ucyA9IGFzeW5jICgpOiBQcm9taXNlPFF1b3RhdGlvbltdPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbnMgPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEFsbCgpO1xuICBjb25zdCBwbGFpblF1b3RhdGlvbnMgPSBxdW90YXRpb25zLm1hcChxID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHEpKTtcbiAgXG4gIHJldHVybiBwbGFpblF1b3RhdGlvbnMuc29ydCgoYSwgYikgPT4ge1xuICAgIGNvbnN0IGFEYXRlID0gYS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShhLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIGNvbnN0IGJEYXRlID0gYi5jcmVhdGVkQXQgPyBuZXcgRGF0ZShiLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25CeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvbiB8IHVuZGVmaW5lZD4gPT4ge1xuICBjb25zdCBxdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICByZXR1cm4gcXVvdGF0aW9uID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4ocXVvdGF0aW9uKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRRdW90YXRpb24gPSBhc3luYyAocXVvdGF0aW9uRGF0YTogT21pdDxRdW90YXRpb24sICdpZCcgfCAnY3JlYXRlZEF0JyB8ICdxdW90YXRpb25OdW1iZXInPik6IFByb21pc2U8UXVvdGF0aW9uPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbk51bWJlciA9IGF3YWl0IHF1b3RhdGlvblNlcnZpY2UuZ2VuZXJhdGVRdW90YXRpb25OdW1iZXIoKTtcbiAgXG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnF1b3RhdGlvbkRhdGEsXG4gICAgcXVvdGF0aW9uTnVtYmVyXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UXVvdGF0aW9uID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCFuZXdRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcXVvdGF0aW9uJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nLCBxdW90YXRpb25EYXRhOiBQYXJ0aWFsPFF1b3RhdGlvbj4pOiBQcm9taXNlPFF1b3RhdGlvbj4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLnVwZGF0ZShpZCwgcXVvdGF0aW9uRGF0YSk7XG4gIGNvbnN0IHVwZGF0ZWRRdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1F1b3RhdGlvbiBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIFF1b3RhdGlvbiBUZW1wbGF0ZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25UZW1wbGF0ZXMgPSBhc3luYyAoKTogUHJvbWlzZTxRdW90YXRpb25UZW1wbGF0ZVtdPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlcyA9IGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiB0ZW1wbGF0ZXMubWFwKHRlbXBsYXRlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHRlbXBsYXRlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9uVGVtcGxhdGVCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlIHwgdW5kZWZpbmVkPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgcmV0dXJuIHRlbXBsYXRlID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4odGVtcGxhdGUpIDogdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZFF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKHRlbXBsYXRlRGF0YTogT21pdDxRdW90YXRpb25UZW1wbGF0ZSwgJ2lkJz4pOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnRlbXBsYXRlRGF0YSxcbiAgICBpc0RlZmF1bHQ6IGZhbHNlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3VGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1RlbXBsYXRlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHF1b3RhdGlvbiB0ZW1wbGF0ZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3VGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcsIHRlbXBsYXRlRGF0YTogUXVvdGF0aW9uVGVtcGxhdGUpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UudXBkYXRlKGlkLCB0ZW1wbGF0ZURhdGEpO1xuICBjb25zdCB1cGRhdGVkVGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRUZW1wbGF0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGVtcGxhdGUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkVGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZGVsZXRlKGlkKTtcbiAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xufTtcblxuLy8gRW1wbG95ZWUgUm9sZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZVJvbGVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVSb2xlW10+ID0+IHtcbiAgY29uc3Qgcm9sZXMgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5nZXRBbGwoKTtcbiAgcmV0dXJuIHJvbGVzLm1hcChyb2xlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHJvbGUpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZVJvbGUgPSBhc3luYyAobmFtZTogc3RyaW5nKTogUHJvbWlzZTxFbXBsb3llZVJvbGU+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5jcmVhdGUoeyBuYW1lIH0pO1xuICBcbiAgY29uc3QgbmV3Um9sZSA9IGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1JvbGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgZW1wbG95ZWUgcm9sZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3Um9sZSk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlRW1wbG95ZWVSb2xlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIERlcGFydG1lbnQgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RGVwYXJ0bWVudHMgPSBhc3luYyAoKTogUHJvbWlzZTxEZXBhcnRtZW50W10+ID0+IHtcbiAgY29uc3QgZGVwYXJ0bWVudHMgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBkZXBhcnRtZW50cy5tYXAoZGVwdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihkZXB0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkRGVwYXJ0bWVudCA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPERlcGFydG1lbnQ+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuY3JlYXRlKHsgbmFtZSB9KTtcbiAgXG4gIGNvbnN0IG5ld0RlcGFydG1lbnQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3RGVwYXJ0bWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBkZXBhcnRtZW50Jyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdEZXBhcnRtZW50KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVEZXBhcnRtZW50ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGRlcGFydG1lbnRzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJxU0EwUGEifQ==
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:596f50 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f3d9e95cd0e81b0d13660c9a9a93768fb851fa506":"addProduct"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "addProduct": (()=>addProduct)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var addProduct = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f3d9e95cd0e81b0d13660c9a9a93768fb851fa506", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "addProduct"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:588043 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7ff71b0c7623881d0aa5c8c677cd09724481a157b2":"getProducts"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "getProducts": (()=>getProducts)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getProducts = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7ff71b0c7623881d0aa5c8c677cd09724481a157b2", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getProducts"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:ae2ca2 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fae3ad533f1dc6298a52f1957eff67f632545365d":"deleteProduct"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "deleteProduct": (()=>deleteProduct)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var deleteProduct = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fae3ad533f1dc6298a52f1957eff67f632545365d", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "deleteProduct"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:3fb0ae [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fabb9890e6ce6942891dc6903686fbb41d7e40da9":"getQuotations"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "getQuotations": (()=>getQuotations)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getQuotations = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fabb9890e6ce6942891dc6903686fbb41d7e40da9", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getQuotations"); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vZmlyZXN0b3JlLWRhdGEtc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IFxuICBlbXBsb3llZVNlcnZpY2UsIFxuICBsZWFkU2VydmljZSwgXG4gIHByb2R1Y3RTZXJ2aWNlLCBcbiAgcXVvdGF0aW9uU2VydmljZSxcbiAgZGVwYXJ0bWVudHNTZXJ2aWNlLFxuICBlbXBsb3llZVJvbGVzU2VydmljZSxcbiAgbGVhZFNvdXJjZXNTZXJ2aWNlLFxuICBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlXG59IGZyb20gJy4vYnVzaW5lc3Mtc2VydmljZXMnO1xuaW1wb3J0IHsgXG4gIEVtcGxveWVlLCBcbiAgTGVhZCwgXG4gIFByb2R1Y3QsIFxuICBRdW90YXRpb24sIFxuICBRdW90YXRpb25UZW1wbGF0ZSxcbiAgRGVwYXJ0bWVudCxcbiAgRW1wbG95ZWVSb2xlLFxuICBMZWFkU291cmNlLFxuICBMZWFkQWN0aXZpdHlcbn0gZnJvbSAnLi9idXNpbmVzcy10eXBlcyc7XG5pbXBvcnQgeyBUaW1lc3RhbXAgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgVGltZXN0YW1wcyB0byBwbGFpbiBvYmplY3RzXG5mdW5jdGlvbiBjb252ZXJ0VGltZXN0YW1wVG9QbGFpbihvYmo6IGFueSk6IGFueSB7XG4gIGlmICghb2JqKSByZXR1cm4gb2JqO1xuICBcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFRpbWVzdGFtcCkge1xuICAgIHJldHVybiBvYmoudG9EYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgfVxuICBcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiBvYmoubWFwKGl0ZW0gPT4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oaXRlbSkpO1xuICB9XG4gIFxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBjb252ZXJ0ZWQ6IGFueSA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIGNvbnZlcnRlZFtrZXldID0gY29udmVydFRpbWVzdGFtcFRvUGxhaW4ob2JqW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29udmVydGVkO1xuICB9XG4gIFxuICByZXR1cm4gb2JqO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgZG9jdW1lbnRzIHRvIHBsYWluIG9iamVjdHNcbmZ1bmN0aW9uIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluPFQ+KGRvYzogVCk6IFQge1xuICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oZG9jKTtcbn1cblxuLy8gVHlwZSBkZWZpbml0aW9ucyB0byBtYXRjaCB5b3VyIGV4aXN0aW5nIHR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2aXR5IGV4dGVuZHMgTGVhZEFjdGl2aXR5IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3RW1wbG95ZWUge1xuICBuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG4gIHJvbGU6IHN0cmluZztcbiAgZGVwYXJ0bWVudDogc3RyaW5nO1xuICBhZGRyZXNzOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3UHJvZHVjdCB7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgZ3N0UmF0ZTogbnVtYmVyO1xuICBza3VzPzogc3RyaW5nW107XG4gIGNhdGFsb2d1ZVVybD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVcGRhdGFibGVMZWFkRGF0YSB7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNvbXBhbnk/OiBzdHJpbmc7XG4gIGVtYWlsPzogc3RyaW5nO1xuICBwaG9uZT86IHN0cmluZztcbiAgd2hhdHNhcHBOdW1iZXI/OiBzdHJpbmc7XG4gIHN0YXR1cz86IExlYWRbJ3N0YXR1cyddO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIHByb2R1Y3RzPzogTGVhZFsncHJvZHVjdHMnXTtcbn1cblxuLy8gRW1wbG95ZWUgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RW1wbG95ZWVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVbXT4gPT4ge1xuICBjb25zdCBlbXBsb3llZXMgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBlbXBsb3llZXMubWFwKGVtcCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihlbXApKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZUJ5SWQgPSBhc3luYyAoaWQ6IHN0cmluZyk6IFByb21pc2U8RW1wbG95ZWUgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgZW1wbG95ZWUgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIHJldHVybiBlbXBsb3llZSA/IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGVtcGxveWVlKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZSA9IGFzeW5jIChlbXBsb3llZURhdGE6IE5ld0VtcGxveWVlKTogUHJvbWlzZTxFbXBsb3llZT4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IGVtcGxveWVlU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLmVtcGxveWVlRGF0YSxcbiAgICBpc0FjdGl2ZTogdHJ1ZVxuICB9KTtcbiAgXG4gIGNvbnN0IG5ld0VtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld0VtcGxveWVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIGVtcGxveWVlJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdFbXBsb3llZSk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlRW1wbG95ZWUgPSBhc3luYyAoaWQ6IHN0cmluZywgZW1wbG95ZWVEYXRhOiBQYXJ0aWFsPE5ld0VtcGxveWVlPik6IFByb21pc2U8RW1wbG95ZWU+ID0+IHtcbiAgYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLnVwZGF0ZShpZCwgZW1wbG95ZWVEYXRhKTtcbiAgY29uc3QgdXBkYXRlZEVtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRFbXBsb3llZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRW1wbG95ZWUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkRW1wbG95ZWUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUVtcGxveWVlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBMZWFkIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRzID0gYXN5bmMgKHF1ZXJ5Pzogc3RyaW5nLCBzdGF0dXM/OiBzdHJpbmcpOiBQcm9taXNlPExlYWRbXT4gPT4ge1xuICBsZXQgbGVhZHM6IExlYWRbXSA9IFtdO1xuICBcbiAgaWYgKHN0YXR1cykge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0TGVhZHNCeVN0YXR1cyhzdGF0dXMgYXMgTGVhZFsnc3RhdHVzJ10pO1xuICB9IGVsc2Uge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QWxsKCk7XG4gIH1cbiAgXG4gIC8vIENvbnZlcnQgdG8gcGxhaW4gb2JqZWN0c1xuICBsZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGlmIChxdWVyeSkge1xuICAgIGNvbnN0IGxvd2VyY2FzZWRRdWVyeSA9IHF1ZXJ5LnRvTG93ZXJDYXNlKCk7XG4gICAgbGVhZHMgPSBsZWFkcy5maWx0ZXIoXG4gICAgICBsZWFkID0+XG4gICAgICAgIGxlYWQubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGxvd2VyY2FzZWRRdWVyeSkgfHxcbiAgICAgICAgbGVhZC5jb21wYW55LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMobG93ZXJjYXNlZFF1ZXJ5KVxuICAgICk7XG4gIH1cbiAgXG4gIHJldHVybiBsZWFkcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgY29uc3QgYURhdGUgPSBhLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGEuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgY29uc3QgYkRhdGUgPSBiLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGIuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldExlYWRCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPExlYWQgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIWxlYWQpIHJldHVybiB1bmRlZmluZWQ7XG4gIFxuICBjb25zdCBwbGFpbkxlYWQgPSBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihsZWFkKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5wbGFpbkxlYWQsXG4gICAgYWN0aXZpdGllczogcGxhaW5MZWFkLmFjdGl2aXRpZXMuc29ydCgoYTogYW55LCBiOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGFEYXRlID0gbmV3IERhdGUoYS5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIGNvbnN0IGJEYXRlID0gbmV3IERhdGUoYi5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICAgIH0pXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmVjZW50QWN0aXZpdGllcyA9IGFzeW5jIChsaW1pdDogbnVtYmVyKTogUHJvbWlzZTx7IGxlYWQ6IExlYWQ7IGFjdGl2aXR5OiBBY3Rpdml0eSB9W10+ID0+IHtcbiAgY29uc3QgbGVhZHMgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRBbGwoKTtcbiAgY29uc3QgcGxhaW5MZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGNvbnN0IGFsbEFjdGl2aXRpZXMgPSBwbGFpbkxlYWRzLmZsYXRNYXAobGVhZCA9PiBcbiAgICBsZWFkLmFjdGl2aXRpZXMubWFwKGFjdGl2aXR5ID0+ICh7IGxlYWQsIGFjdGl2aXR5IH0pKVxuICApO1xuICBcbiAgcmV0dXJuIGFsbEFjdGl2aXRpZXNcbiAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgY29uc3QgYURhdGUgPSBuZXcgRGF0ZShhLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgY29uc3QgYkRhdGUgPSBuZXcgRGF0ZShiLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gICAgfSlcbiAgICAuc2xpY2UoMCwgbGltaXQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZExlYWQgPSBhc3luYyAobGVhZERhdGE6IE9taXQ8TGVhZCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ2FjdGl2aXRpZXMnPiAmIHsgbm90ZXM/OiBzdHJpbmcgfSk6IFByb21pc2U8TGVhZD4gPT4ge1xuICBjb25zdCB7IG5vdGVzLCAuLi5yZXN0T2ZMZWFkRGF0YSB9ID0gbGVhZERhdGE7XG4gIFxuICBjb25zdCBpbml0aWFsQWN0aXZpdHk6IExlYWRBY3Rpdml0eVtdID0gW107XG4gIGlmIChub3Rlcykge1xuICAgIGluaXRpYWxBY3Rpdml0eS5wdXNoKHtcbiAgICAgIGlkOiBgYWN0LSR7RGF0ZS5ub3coKX0tMWAsXG4gICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB0eXBlOiAnRW1haWwnLFxuICAgICAgbm90ZXM6IGBMZWFkIGNyZWF0ZWQgaW4gdGhlIHN5c3RlbS4gSW5pdGlhbCBub3RlczogJHtub3Rlc31gLFxuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnJlc3RPZkxlYWREYXRhLFxuICAgIGFjdGl2aXRpZXM6IGluaXRpYWxBY3Rpdml0eSxcbiAgICBwcmlvcml0eTogJ01lZGl1bScsXG4gICAgZXN0aW1hdGVkVmFsdWU6IGxlYWREYXRhLnByb2R1Y3RzPy5yZWR1Y2UoKHN1bSwgcHJvZHVjdCkgPT4gXG4gICAgICBzdW0gKyAocHJvZHVjdC5xdWFudGl0eSAqIHByb2R1Y3QucmF0ZSksIDApIHx8IDBcbiAgfSk7XG4gIFxuICBjb25zdCBuZXdMZWFkID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3TGVhZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdMZWFkKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRBY3Rpdml0eVRvTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgYWN0aXZpdHlEYXRhOiBPbWl0PEFjdGl2aXR5LCAnaWQnIHwgJ2RhdGUnPik6IFByb21pc2U8QWN0aXZpdHk+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQobGVhZElkKTtcbiAgaWYgKCFsZWFkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdMZWFkIG5vdCBmb3VuZCcpO1xuICB9XG5cbiAgY29uc3QgbmV3QWN0aXZpdHk6IExlYWRBY3Rpdml0eSA9IHtcbiAgICAuLi5hY3Rpdml0eURhdGEsXG4gICAgaWQ6IGBhY3QtJHtsZWFkSWR9LSR7RGF0ZS5ub3coKX1gLFxuICAgIGRhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgfTtcbiAgXG4gIGF3YWl0IGxlYWRTZXJ2aWNlLmFkZEFjdGl2aXR5KGxlYWRJZCwgbmV3QWN0aXZpdHkpO1xuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3QWN0aXZpdHkpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUxlYWRTdGF0dXMgPSBhc3luYyAobGVhZElkOiBzdHJpbmcsIHN0YXR1czogTGVhZFsnc3RhdHVzJ10pOiBQcm9taXNlPExlYWQ+ID0+IHtcbiAgYXdhaXQgbGVhZFNlcnZpY2UudXBkYXRlU3RhdHVzKGxlYWRJZCwgc3RhdHVzKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgbGVhZERhdGE6IFVwZGF0YWJsZUxlYWREYXRhKTogUHJvbWlzZTxMZWFkPiA9PiB7XG4gIGF3YWl0IGxlYWRTZXJ2aWNlLnVwZGF0ZShsZWFkSWQsIGxlYWREYXRhKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlTGVhZCA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBsZWFkU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBQcm9kdWN0IGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldFByb2R1Y3RzID0gYXN5bmMgKCk6IFByb21pc2U8UHJvZHVjdFtdPiA9PiB7XG4gIGNvbnN0IHByb2R1Y3RzID0gYXdhaXQgcHJvZHVjdFNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBwcm9kdWN0cy5tYXAocHJvZHVjdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihwcm9kdWN0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkUHJvZHVjdCA9IGFzeW5jIChwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmNyZWF0ZSh7XG4gICAgLi4ucHJvZHVjdERhdGEsXG4gICAgaXNBY3RpdmU6IHRydWUsXG4gICAgc3RvY2tRdWFudGl0eTogMTAwLFxuICAgIG1pblN0b2NrTGV2ZWw6IDEwXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UHJvZHVjdCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1Byb2R1Y3QpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZHVjdCcpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3UHJvZHVjdCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlUHJvZHVjdCA9IGFzeW5jIChpZDogc3RyaW5nLCBwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBhd2FpdCBwcm9kdWN0U2VydmljZS51cGRhdGUoaWQsIHByb2R1Y3REYXRhKTtcbiAgY29uc3QgdXBkYXRlZFByb2R1Y3QgPSBhd2FpdCBwcm9kdWN0U2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCF1cGRhdGVkUHJvZHVjdCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRQcm9kdWN0KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVQcm9kdWN0ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIExlYWQgU291cmNlIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRTb3VyY2VzID0gYXN5bmMgKCk6IFByb21pc2U8TGVhZFNvdXJjZVtdPiA9PiB7XG4gIGNvbnN0IHNvdXJjZXMgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBzb3VyY2VzLm1hcChzb3VyY2UgPT4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4oc291cmNlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkTGVhZFNvdXJjZSA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPExlYWRTb3VyY2U+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuY3JlYXRlKHtcbiAgICBuYW1lLFxuICAgIGlzQWN0aXZlOiB0cnVlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3U291cmNlID0gYXdhaXQgbGVhZFNvdXJjZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1NvdXJjZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkIHNvdXJjZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3U291cmNlKTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVMZWFkU291cmNlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGxlYWRTb3VyY2VzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBRdW90YXRpb24gZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9ucyA9IGFzeW5jICgpOiBQcm9taXNlPFF1b3RhdGlvbltdPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbnMgPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEFsbCgpO1xuICBjb25zdCBwbGFpblF1b3RhdGlvbnMgPSBxdW90YXRpb25zLm1hcChxID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHEpKTtcbiAgXG4gIHJldHVybiBwbGFpblF1b3RhdGlvbnMuc29ydCgoYSwgYikgPT4ge1xuICAgIGNvbnN0IGFEYXRlID0gYS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShhLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIGNvbnN0IGJEYXRlID0gYi5jcmVhdGVkQXQgPyBuZXcgRGF0ZShiLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25CeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvbiB8IHVuZGVmaW5lZD4gPT4ge1xuICBjb25zdCBxdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICByZXR1cm4gcXVvdGF0aW9uID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4ocXVvdGF0aW9uKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRRdW90YXRpb24gPSBhc3luYyAocXVvdGF0aW9uRGF0YTogT21pdDxRdW90YXRpb24sICdpZCcgfCAnY3JlYXRlZEF0JyB8ICdxdW90YXRpb25OdW1iZXInPik6IFByb21pc2U8UXVvdGF0aW9uPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbk51bWJlciA9IGF3YWl0IHF1b3RhdGlvblNlcnZpY2UuZ2VuZXJhdGVRdW90YXRpb25OdW1iZXIoKTtcbiAgXG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnF1b3RhdGlvbkRhdGEsXG4gICAgcXVvdGF0aW9uTnVtYmVyXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UXVvdGF0aW9uID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCFuZXdRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcXVvdGF0aW9uJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nLCBxdW90YXRpb25EYXRhOiBQYXJ0aWFsPFF1b3RhdGlvbj4pOiBQcm9taXNlPFF1b3RhdGlvbj4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLnVwZGF0ZShpZCwgcXVvdGF0aW9uRGF0YSk7XG4gIGNvbnN0IHVwZGF0ZWRRdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1F1b3RhdGlvbiBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIFF1b3RhdGlvbiBUZW1wbGF0ZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25UZW1wbGF0ZXMgPSBhc3luYyAoKTogUHJvbWlzZTxRdW90YXRpb25UZW1wbGF0ZVtdPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlcyA9IGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiB0ZW1wbGF0ZXMubWFwKHRlbXBsYXRlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHRlbXBsYXRlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9uVGVtcGxhdGVCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlIHwgdW5kZWZpbmVkPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgcmV0dXJuIHRlbXBsYXRlID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4odGVtcGxhdGUpIDogdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZFF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKHRlbXBsYXRlRGF0YTogT21pdDxRdW90YXRpb25UZW1wbGF0ZSwgJ2lkJz4pOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnRlbXBsYXRlRGF0YSxcbiAgICBpc0RlZmF1bHQ6IGZhbHNlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3VGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1RlbXBsYXRlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHF1b3RhdGlvbiB0ZW1wbGF0ZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3VGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcsIHRlbXBsYXRlRGF0YTogUXVvdGF0aW9uVGVtcGxhdGUpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UudXBkYXRlKGlkLCB0ZW1wbGF0ZURhdGEpO1xuICBjb25zdCB1cGRhdGVkVGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRUZW1wbGF0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGVtcGxhdGUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkVGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZGVsZXRlKGlkKTtcbiAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xufTtcblxuLy8gRW1wbG95ZWUgUm9sZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZVJvbGVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVSb2xlW10+ID0+IHtcbiAgY29uc3Qgcm9sZXMgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5nZXRBbGwoKTtcbiAgcmV0dXJuIHJvbGVzLm1hcChyb2xlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHJvbGUpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZVJvbGUgPSBhc3luYyAobmFtZTogc3RyaW5nKTogUHJvbWlzZTxFbXBsb3llZVJvbGU+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5jcmVhdGUoeyBuYW1lIH0pO1xuICBcbiAgY29uc3QgbmV3Um9sZSA9IGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1JvbGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgZW1wbG95ZWUgcm9sZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3Um9sZSk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlRW1wbG95ZWVSb2xlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIERlcGFydG1lbnQgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RGVwYXJ0bWVudHMgPSBhc3luYyAoKTogUHJvbWlzZTxEZXBhcnRtZW50W10+ID0+IHtcbiAgY29uc3QgZGVwYXJ0bWVudHMgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBkZXBhcnRtZW50cy5tYXAoZGVwdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihkZXB0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkRGVwYXJ0bWVudCA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPERlcGFydG1lbnQ+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuY3JlYXRlKHsgbmFtZSB9KTtcbiAgXG4gIGNvbnN0IG5ld0RlcGFydG1lbnQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3RGVwYXJ0bWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBkZXBhcnRtZW50Jyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdEZXBhcnRtZW50KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVEZXBhcnRtZW50ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGRlcGFydG1lbnRzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJ3U0E2VGEifQ==
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:fa79b9 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f5591f7a8ee3bb38224df4376cdee9f8d5eb812fe":"deleteQuotation"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "deleteQuotation": (()=>deleteQuotation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var deleteQuotation = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f5591f7a8ee3bb38224df4376cdee9f8d5eb812fe", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "deleteQuotation"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:d9d92f [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fc9162346222c9de85ac70b2f85d9c9be072b4bb2":"getLeadSources"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "getLeadSources": (()=>getLeadSources)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getLeadSources = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fc9162346222c9de85ac70b2f85d9c9be072b4bb2", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getLeadSources"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:96c615 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fe5d28a16cab74d9ee3acbe0aafa76ffc672cfba6":"deleteLeadSource"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "deleteLeadSource": (()=>deleteLeadSource)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var deleteLeadSource = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fe5d28a16cab74d9ee3acbe0aafa76ffc672cfba6", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "deleteLeadSource"); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vZmlyZXN0b3JlLWRhdGEtc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IFxuICBlbXBsb3llZVNlcnZpY2UsIFxuICBsZWFkU2VydmljZSwgXG4gIHByb2R1Y3RTZXJ2aWNlLCBcbiAgcXVvdGF0aW9uU2VydmljZSxcbiAgZGVwYXJ0bWVudHNTZXJ2aWNlLFxuICBlbXBsb3llZVJvbGVzU2VydmljZSxcbiAgbGVhZFNvdXJjZXNTZXJ2aWNlLFxuICBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlXG59IGZyb20gJy4vYnVzaW5lc3Mtc2VydmljZXMnO1xuaW1wb3J0IHsgXG4gIEVtcGxveWVlLCBcbiAgTGVhZCwgXG4gIFByb2R1Y3QsIFxuICBRdW90YXRpb24sIFxuICBRdW90YXRpb25UZW1wbGF0ZSxcbiAgRGVwYXJ0bWVudCxcbiAgRW1wbG95ZWVSb2xlLFxuICBMZWFkU291cmNlLFxuICBMZWFkQWN0aXZpdHlcbn0gZnJvbSAnLi9idXNpbmVzcy10eXBlcyc7XG5pbXBvcnQgeyBUaW1lc3RhbXAgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgVGltZXN0YW1wcyB0byBwbGFpbiBvYmplY3RzXG5mdW5jdGlvbiBjb252ZXJ0VGltZXN0YW1wVG9QbGFpbihvYmo6IGFueSk6IGFueSB7XG4gIGlmICghb2JqKSByZXR1cm4gb2JqO1xuICBcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFRpbWVzdGFtcCkge1xuICAgIHJldHVybiBvYmoudG9EYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgfVxuICBcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiBvYmoubWFwKGl0ZW0gPT4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oaXRlbSkpO1xuICB9XG4gIFxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBjb252ZXJ0ZWQ6IGFueSA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIGNvbnZlcnRlZFtrZXldID0gY29udmVydFRpbWVzdGFtcFRvUGxhaW4ob2JqW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29udmVydGVkO1xuICB9XG4gIFxuICByZXR1cm4gb2JqO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgZG9jdW1lbnRzIHRvIHBsYWluIG9iamVjdHNcbmZ1bmN0aW9uIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluPFQ+KGRvYzogVCk6IFQge1xuICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oZG9jKTtcbn1cblxuLy8gVHlwZSBkZWZpbml0aW9ucyB0byBtYXRjaCB5b3VyIGV4aXN0aW5nIHR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2aXR5IGV4dGVuZHMgTGVhZEFjdGl2aXR5IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3RW1wbG95ZWUge1xuICBuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG4gIHJvbGU6IHN0cmluZztcbiAgZGVwYXJ0bWVudDogc3RyaW5nO1xuICBhZGRyZXNzOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3UHJvZHVjdCB7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgZ3N0UmF0ZTogbnVtYmVyO1xuICBza3VzPzogc3RyaW5nW107XG4gIGNhdGFsb2d1ZVVybD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVcGRhdGFibGVMZWFkRGF0YSB7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNvbXBhbnk/OiBzdHJpbmc7XG4gIGVtYWlsPzogc3RyaW5nO1xuICBwaG9uZT86IHN0cmluZztcbiAgd2hhdHNhcHBOdW1iZXI/OiBzdHJpbmc7XG4gIHN0YXR1cz86IExlYWRbJ3N0YXR1cyddO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIHByb2R1Y3RzPzogTGVhZFsncHJvZHVjdHMnXTtcbn1cblxuLy8gRW1wbG95ZWUgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RW1wbG95ZWVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVbXT4gPT4ge1xuICBjb25zdCBlbXBsb3llZXMgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBlbXBsb3llZXMubWFwKGVtcCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihlbXApKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZUJ5SWQgPSBhc3luYyAoaWQ6IHN0cmluZyk6IFByb21pc2U8RW1wbG95ZWUgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgZW1wbG95ZWUgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIHJldHVybiBlbXBsb3llZSA/IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGVtcGxveWVlKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZSA9IGFzeW5jIChlbXBsb3llZURhdGE6IE5ld0VtcGxveWVlKTogUHJvbWlzZTxFbXBsb3llZT4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IGVtcGxveWVlU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLmVtcGxveWVlRGF0YSxcbiAgICBpc0FjdGl2ZTogdHJ1ZVxuICB9KTtcbiAgXG4gIGNvbnN0IG5ld0VtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld0VtcGxveWVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIGVtcGxveWVlJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdFbXBsb3llZSk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlRW1wbG95ZWUgPSBhc3luYyAoaWQ6IHN0cmluZywgZW1wbG95ZWVEYXRhOiBQYXJ0aWFsPE5ld0VtcGxveWVlPik6IFByb21pc2U8RW1wbG95ZWU+ID0+IHtcbiAgYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLnVwZGF0ZShpZCwgZW1wbG95ZWVEYXRhKTtcbiAgY29uc3QgdXBkYXRlZEVtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRFbXBsb3llZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRW1wbG95ZWUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkRW1wbG95ZWUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUVtcGxveWVlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBMZWFkIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRzID0gYXN5bmMgKHF1ZXJ5Pzogc3RyaW5nLCBzdGF0dXM/OiBzdHJpbmcpOiBQcm9taXNlPExlYWRbXT4gPT4ge1xuICBsZXQgbGVhZHM6IExlYWRbXSA9IFtdO1xuICBcbiAgaWYgKHN0YXR1cykge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0TGVhZHNCeVN0YXR1cyhzdGF0dXMgYXMgTGVhZFsnc3RhdHVzJ10pO1xuICB9IGVsc2Uge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QWxsKCk7XG4gIH1cbiAgXG4gIC8vIENvbnZlcnQgdG8gcGxhaW4gb2JqZWN0c1xuICBsZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGlmIChxdWVyeSkge1xuICAgIGNvbnN0IGxvd2VyY2FzZWRRdWVyeSA9IHF1ZXJ5LnRvTG93ZXJDYXNlKCk7XG4gICAgbGVhZHMgPSBsZWFkcy5maWx0ZXIoXG4gICAgICBsZWFkID0+XG4gICAgICAgIGxlYWQubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGxvd2VyY2FzZWRRdWVyeSkgfHxcbiAgICAgICAgbGVhZC5jb21wYW55LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMobG93ZXJjYXNlZFF1ZXJ5KVxuICAgICk7XG4gIH1cbiAgXG4gIHJldHVybiBsZWFkcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgY29uc3QgYURhdGUgPSBhLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGEuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgY29uc3QgYkRhdGUgPSBiLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGIuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldExlYWRCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPExlYWQgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIWxlYWQpIHJldHVybiB1bmRlZmluZWQ7XG4gIFxuICBjb25zdCBwbGFpbkxlYWQgPSBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihsZWFkKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5wbGFpbkxlYWQsXG4gICAgYWN0aXZpdGllczogcGxhaW5MZWFkLmFjdGl2aXRpZXMuc29ydCgoYTogYW55LCBiOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGFEYXRlID0gbmV3IERhdGUoYS5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIGNvbnN0IGJEYXRlID0gbmV3IERhdGUoYi5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICAgIH0pXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmVjZW50QWN0aXZpdGllcyA9IGFzeW5jIChsaW1pdDogbnVtYmVyKTogUHJvbWlzZTx7IGxlYWQ6IExlYWQ7IGFjdGl2aXR5OiBBY3Rpdml0eSB9W10+ID0+IHtcbiAgY29uc3QgbGVhZHMgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRBbGwoKTtcbiAgY29uc3QgcGxhaW5MZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGNvbnN0IGFsbEFjdGl2aXRpZXMgPSBwbGFpbkxlYWRzLmZsYXRNYXAobGVhZCA9PiBcbiAgICBsZWFkLmFjdGl2aXRpZXMubWFwKGFjdGl2aXR5ID0+ICh7IGxlYWQsIGFjdGl2aXR5IH0pKVxuICApO1xuICBcbiAgcmV0dXJuIGFsbEFjdGl2aXRpZXNcbiAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgY29uc3QgYURhdGUgPSBuZXcgRGF0ZShhLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgY29uc3QgYkRhdGUgPSBuZXcgRGF0ZShiLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gICAgfSlcbiAgICAuc2xpY2UoMCwgbGltaXQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZExlYWQgPSBhc3luYyAobGVhZERhdGE6IE9taXQ8TGVhZCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ2FjdGl2aXRpZXMnPiAmIHsgbm90ZXM/OiBzdHJpbmcgfSk6IFByb21pc2U8TGVhZD4gPT4ge1xuICBjb25zdCB7IG5vdGVzLCAuLi5yZXN0T2ZMZWFkRGF0YSB9ID0gbGVhZERhdGE7XG4gIFxuICBjb25zdCBpbml0aWFsQWN0aXZpdHk6IExlYWRBY3Rpdml0eVtdID0gW107XG4gIGlmIChub3Rlcykge1xuICAgIGluaXRpYWxBY3Rpdml0eS5wdXNoKHtcbiAgICAgIGlkOiBgYWN0LSR7RGF0ZS5ub3coKX0tMWAsXG4gICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB0eXBlOiAnRW1haWwnLFxuICAgICAgbm90ZXM6IGBMZWFkIGNyZWF0ZWQgaW4gdGhlIHN5c3RlbS4gSW5pdGlhbCBub3RlczogJHtub3Rlc31gLFxuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnJlc3RPZkxlYWREYXRhLFxuICAgIGFjdGl2aXRpZXM6IGluaXRpYWxBY3Rpdml0eSxcbiAgICBwcmlvcml0eTogJ01lZGl1bScsXG4gICAgZXN0aW1hdGVkVmFsdWU6IGxlYWREYXRhLnByb2R1Y3RzPy5yZWR1Y2UoKHN1bSwgcHJvZHVjdCkgPT4gXG4gICAgICBzdW0gKyAocHJvZHVjdC5xdWFudGl0eSAqIHByb2R1Y3QucmF0ZSksIDApIHx8IDBcbiAgfSk7XG4gIFxuICBjb25zdCBuZXdMZWFkID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3TGVhZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdMZWFkKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRBY3Rpdml0eVRvTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgYWN0aXZpdHlEYXRhOiBPbWl0PEFjdGl2aXR5LCAnaWQnIHwgJ2RhdGUnPik6IFByb21pc2U8QWN0aXZpdHk+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQobGVhZElkKTtcbiAgaWYgKCFsZWFkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdMZWFkIG5vdCBmb3VuZCcpO1xuICB9XG5cbiAgY29uc3QgbmV3QWN0aXZpdHk6IExlYWRBY3Rpdml0eSA9IHtcbiAgICAuLi5hY3Rpdml0eURhdGEsXG4gICAgaWQ6IGBhY3QtJHtsZWFkSWR9LSR7RGF0ZS5ub3coKX1gLFxuICAgIGRhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgfTtcbiAgXG4gIGF3YWl0IGxlYWRTZXJ2aWNlLmFkZEFjdGl2aXR5KGxlYWRJZCwgbmV3QWN0aXZpdHkpO1xuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3QWN0aXZpdHkpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUxlYWRTdGF0dXMgPSBhc3luYyAobGVhZElkOiBzdHJpbmcsIHN0YXR1czogTGVhZFsnc3RhdHVzJ10pOiBQcm9taXNlPExlYWQ+ID0+IHtcbiAgYXdhaXQgbGVhZFNlcnZpY2UudXBkYXRlU3RhdHVzKGxlYWRJZCwgc3RhdHVzKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgbGVhZERhdGE6IFVwZGF0YWJsZUxlYWREYXRhKTogUHJvbWlzZTxMZWFkPiA9PiB7XG4gIGF3YWl0IGxlYWRTZXJ2aWNlLnVwZGF0ZShsZWFkSWQsIGxlYWREYXRhKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlTGVhZCA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBsZWFkU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBQcm9kdWN0IGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldFByb2R1Y3RzID0gYXN5bmMgKCk6IFByb21pc2U8UHJvZHVjdFtdPiA9PiB7XG4gIGNvbnN0IHByb2R1Y3RzID0gYXdhaXQgcHJvZHVjdFNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBwcm9kdWN0cy5tYXAocHJvZHVjdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihwcm9kdWN0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkUHJvZHVjdCA9IGFzeW5jIChwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmNyZWF0ZSh7XG4gICAgLi4ucHJvZHVjdERhdGEsXG4gICAgaXNBY3RpdmU6IHRydWUsXG4gICAgc3RvY2tRdWFudGl0eTogMTAwLFxuICAgIG1pblN0b2NrTGV2ZWw6IDEwXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UHJvZHVjdCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1Byb2R1Y3QpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZHVjdCcpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3UHJvZHVjdCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlUHJvZHVjdCA9IGFzeW5jIChpZDogc3RyaW5nLCBwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBhd2FpdCBwcm9kdWN0U2VydmljZS51cGRhdGUoaWQsIHByb2R1Y3REYXRhKTtcbiAgY29uc3QgdXBkYXRlZFByb2R1Y3QgPSBhd2FpdCBwcm9kdWN0U2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCF1cGRhdGVkUHJvZHVjdCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRQcm9kdWN0KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVQcm9kdWN0ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIExlYWQgU291cmNlIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRTb3VyY2VzID0gYXN5bmMgKCk6IFByb21pc2U8TGVhZFNvdXJjZVtdPiA9PiB7XG4gIGNvbnN0IHNvdXJjZXMgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBzb3VyY2VzLm1hcChzb3VyY2UgPT4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4oc291cmNlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkTGVhZFNvdXJjZSA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPExlYWRTb3VyY2U+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuY3JlYXRlKHtcbiAgICBuYW1lLFxuICAgIGlzQWN0aXZlOiB0cnVlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3U291cmNlID0gYXdhaXQgbGVhZFNvdXJjZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1NvdXJjZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkIHNvdXJjZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3U291cmNlKTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVMZWFkU291cmNlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGxlYWRTb3VyY2VzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBRdW90YXRpb24gZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9ucyA9IGFzeW5jICgpOiBQcm9taXNlPFF1b3RhdGlvbltdPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbnMgPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEFsbCgpO1xuICBjb25zdCBwbGFpblF1b3RhdGlvbnMgPSBxdW90YXRpb25zLm1hcChxID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHEpKTtcbiAgXG4gIHJldHVybiBwbGFpblF1b3RhdGlvbnMuc29ydCgoYSwgYikgPT4ge1xuICAgIGNvbnN0IGFEYXRlID0gYS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShhLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIGNvbnN0IGJEYXRlID0gYi5jcmVhdGVkQXQgPyBuZXcgRGF0ZShiLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25CeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvbiB8IHVuZGVmaW5lZD4gPT4ge1xuICBjb25zdCBxdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICByZXR1cm4gcXVvdGF0aW9uID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4ocXVvdGF0aW9uKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRRdW90YXRpb24gPSBhc3luYyAocXVvdGF0aW9uRGF0YTogT21pdDxRdW90YXRpb24sICdpZCcgfCAnY3JlYXRlZEF0JyB8ICdxdW90YXRpb25OdW1iZXInPik6IFByb21pc2U8UXVvdGF0aW9uPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbk51bWJlciA9IGF3YWl0IHF1b3RhdGlvblNlcnZpY2UuZ2VuZXJhdGVRdW90YXRpb25OdW1iZXIoKTtcbiAgXG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnF1b3RhdGlvbkRhdGEsXG4gICAgcXVvdGF0aW9uTnVtYmVyXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UXVvdGF0aW9uID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCFuZXdRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcXVvdGF0aW9uJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nLCBxdW90YXRpb25EYXRhOiBQYXJ0aWFsPFF1b3RhdGlvbj4pOiBQcm9taXNlPFF1b3RhdGlvbj4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLnVwZGF0ZShpZCwgcXVvdGF0aW9uRGF0YSk7XG4gIGNvbnN0IHVwZGF0ZWRRdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1F1b3RhdGlvbiBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIFF1b3RhdGlvbiBUZW1wbGF0ZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25UZW1wbGF0ZXMgPSBhc3luYyAoKTogUHJvbWlzZTxRdW90YXRpb25UZW1wbGF0ZVtdPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlcyA9IGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiB0ZW1wbGF0ZXMubWFwKHRlbXBsYXRlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHRlbXBsYXRlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9uVGVtcGxhdGVCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlIHwgdW5kZWZpbmVkPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgcmV0dXJuIHRlbXBsYXRlID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4odGVtcGxhdGUpIDogdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZFF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKHRlbXBsYXRlRGF0YTogT21pdDxRdW90YXRpb25UZW1wbGF0ZSwgJ2lkJz4pOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnRlbXBsYXRlRGF0YSxcbiAgICBpc0RlZmF1bHQ6IGZhbHNlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3VGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1RlbXBsYXRlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHF1b3RhdGlvbiB0ZW1wbGF0ZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3VGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcsIHRlbXBsYXRlRGF0YTogUXVvdGF0aW9uVGVtcGxhdGUpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UudXBkYXRlKGlkLCB0ZW1wbGF0ZURhdGEpO1xuICBjb25zdCB1cGRhdGVkVGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRUZW1wbGF0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGVtcGxhdGUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkVGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZGVsZXRlKGlkKTtcbiAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xufTtcblxuLy8gRW1wbG95ZWUgUm9sZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZVJvbGVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVSb2xlW10+ID0+IHtcbiAgY29uc3Qgcm9sZXMgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5nZXRBbGwoKTtcbiAgcmV0dXJuIHJvbGVzLm1hcChyb2xlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHJvbGUpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZVJvbGUgPSBhc3luYyAobmFtZTogc3RyaW5nKTogUHJvbWlzZTxFbXBsb3llZVJvbGU+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5jcmVhdGUoeyBuYW1lIH0pO1xuICBcbiAgY29uc3QgbmV3Um9sZSA9IGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1JvbGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgZW1wbG95ZWUgcm9sZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3Um9sZSk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlRW1wbG95ZWVSb2xlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIERlcGFydG1lbnQgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RGVwYXJ0bWVudHMgPSBhc3luYyAoKTogUHJvbWlzZTxEZXBhcnRtZW50W10+ID0+IHtcbiAgY29uc3QgZGVwYXJ0bWVudHMgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBkZXBhcnRtZW50cy5tYXAoZGVwdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihkZXB0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkRGVwYXJ0bWVudCA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPERlcGFydG1lbnQ+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuY3JlYXRlKHsgbmFtZSB9KTtcbiAgXG4gIGNvbnN0IG5ld0RlcGFydG1lbnQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3RGVwYXJ0bWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBkZXBhcnRtZW50Jyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdEZXBhcnRtZW50KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVEZXBhcnRtZW50ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGRlcGFydG1lbnRzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIyU0F1VGEifQ==
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:8238ce [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7fa78ef03610d4e9976fbaa4e450f34f54cf2d02fc":"addLeadSource"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "addLeadSource": (()=>addLeadSource)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var addLeadSource = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7fa78ef03610d4e9976fbaa4e450f34f54cf2d02fc", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "addLeadSource"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:e14489 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f2e6eb1a1a75f8015dfce86483708dfbe658da89c":"getDepartments"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "getDepartments": (()=>getDepartments)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getDepartments = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f2e6eb1a1a75f8015dfce86483708dfbe658da89c", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getDepartments"); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vZmlyZXN0b3JlLWRhdGEtc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IFxuICBlbXBsb3llZVNlcnZpY2UsIFxuICBsZWFkU2VydmljZSwgXG4gIHByb2R1Y3RTZXJ2aWNlLCBcbiAgcXVvdGF0aW9uU2VydmljZSxcbiAgZGVwYXJ0bWVudHNTZXJ2aWNlLFxuICBlbXBsb3llZVJvbGVzU2VydmljZSxcbiAgbGVhZFNvdXJjZXNTZXJ2aWNlLFxuICBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlXG59IGZyb20gJy4vYnVzaW5lc3Mtc2VydmljZXMnO1xuaW1wb3J0IHsgXG4gIEVtcGxveWVlLCBcbiAgTGVhZCwgXG4gIFByb2R1Y3QsIFxuICBRdW90YXRpb24sIFxuICBRdW90YXRpb25UZW1wbGF0ZSxcbiAgRGVwYXJ0bWVudCxcbiAgRW1wbG95ZWVSb2xlLFxuICBMZWFkU291cmNlLFxuICBMZWFkQWN0aXZpdHlcbn0gZnJvbSAnLi9idXNpbmVzcy10eXBlcyc7XG5pbXBvcnQgeyBUaW1lc3RhbXAgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgVGltZXN0YW1wcyB0byBwbGFpbiBvYmplY3RzXG5mdW5jdGlvbiBjb252ZXJ0VGltZXN0YW1wVG9QbGFpbihvYmo6IGFueSk6IGFueSB7XG4gIGlmICghb2JqKSByZXR1cm4gb2JqO1xuICBcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFRpbWVzdGFtcCkge1xuICAgIHJldHVybiBvYmoudG9EYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgfVxuICBcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiBvYmoubWFwKGl0ZW0gPT4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oaXRlbSkpO1xuICB9XG4gIFxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBjb252ZXJ0ZWQ6IGFueSA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIGNvbnZlcnRlZFtrZXldID0gY29udmVydFRpbWVzdGFtcFRvUGxhaW4ob2JqW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29udmVydGVkO1xuICB9XG4gIFxuICByZXR1cm4gb2JqO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgZG9jdW1lbnRzIHRvIHBsYWluIG9iamVjdHNcbmZ1bmN0aW9uIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluPFQ+KGRvYzogVCk6IFQge1xuICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oZG9jKTtcbn1cblxuLy8gVHlwZSBkZWZpbml0aW9ucyB0byBtYXRjaCB5b3VyIGV4aXN0aW5nIHR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2aXR5IGV4dGVuZHMgTGVhZEFjdGl2aXR5IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3RW1wbG95ZWUge1xuICBuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG4gIHJvbGU6IHN0cmluZztcbiAgZGVwYXJ0bWVudDogc3RyaW5nO1xuICBhZGRyZXNzOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3UHJvZHVjdCB7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgZ3N0UmF0ZTogbnVtYmVyO1xuICBza3VzPzogc3RyaW5nW107XG4gIGNhdGFsb2d1ZVVybD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVcGRhdGFibGVMZWFkRGF0YSB7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNvbXBhbnk/OiBzdHJpbmc7XG4gIGVtYWlsPzogc3RyaW5nO1xuICBwaG9uZT86IHN0cmluZztcbiAgd2hhdHNhcHBOdW1iZXI/OiBzdHJpbmc7XG4gIHN0YXR1cz86IExlYWRbJ3N0YXR1cyddO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIHByb2R1Y3RzPzogTGVhZFsncHJvZHVjdHMnXTtcbn1cblxuLy8gRW1wbG95ZWUgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RW1wbG95ZWVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVbXT4gPT4ge1xuICBjb25zdCBlbXBsb3llZXMgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBlbXBsb3llZXMubWFwKGVtcCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihlbXApKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZUJ5SWQgPSBhc3luYyAoaWQ6IHN0cmluZyk6IFByb21pc2U8RW1wbG95ZWUgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgZW1wbG95ZWUgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIHJldHVybiBlbXBsb3llZSA/IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGVtcGxveWVlKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZSA9IGFzeW5jIChlbXBsb3llZURhdGE6IE5ld0VtcGxveWVlKTogUHJvbWlzZTxFbXBsb3llZT4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IGVtcGxveWVlU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLmVtcGxveWVlRGF0YSxcbiAgICBpc0FjdGl2ZTogdHJ1ZVxuICB9KTtcbiAgXG4gIGNvbnN0IG5ld0VtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld0VtcGxveWVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIGVtcGxveWVlJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdFbXBsb3llZSk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlRW1wbG95ZWUgPSBhc3luYyAoaWQ6IHN0cmluZywgZW1wbG95ZWVEYXRhOiBQYXJ0aWFsPE5ld0VtcGxveWVlPik6IFByb21pc2U8RW1wbG95ZWU+ID0+IHtcbiAgYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLnVwZGF0ZShpZCwgZW1wbG95ZWVEYXRhKTtcbiAgY29uc3QgdXBkYXRlZEVtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRFbXBsb3llZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRW1wbG95ZWUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkRW1wbG95ZWUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUVtcGxveWVlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBMZWFkIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRzID0gYXN5bmMgKHF1ZXJ5Pzogc3RyaW5nLCBzdGF0dXM/OiBzdHJpbmcpOiBQcm9taXNlPExlYWRbXT4gPT4ge1xuICBsZXQgbGVhZHM6IExlYWRbXSA9IFtdO1xuICBcbiAgaWYgKHN0YXR1cykge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0TGVhZHNCeVN0YXR1cyhzdGF0dXMgYXMgTGVhZFsnc3RhdHVzJ10pO1xuICB9IGVsc2Uge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QWxsKCk7XG4gIH1cbiAgXG4gIC8vIENvbnZlcnQgdG8gcGxhaW4gb2JqZWN0c1xuICBsZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGlmIChxdWVyeSkge1xuICAgIGNvbnN0IGxvd2VyY2FzZWRRdWVyeSA9IHF1ZXJ5LnRvTG93ZXJDYXNlKCk7XG4gICAgbGVhZHMgPSBsZWFkcy5maWx0ZXIoXG4gICAgICBsZWFkID0+XG4gICAgICAgIGxlYWQubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGxvd2VyY2FzZWRRdWVyeSkgfHxcbiAgICAgICAgbGVhZC5jb21wYW55LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMobG93ZXJjYXNlZFF1ZXJ5KVxuICAgICk7XG4gIH1cbiAgXG4gIHJldHVybiBsZWFkcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgY29uc3QgYURhdGUgPSBhLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGEuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgY29uc3QgYkRhdGUgPSBiLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGIuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldExlYWRCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPExlYWQgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIWxlYWQpIHJldHVybiB1bmRlZmluZWQ7XG4gIFxuICBjb25zdCBwbGFpbkxlYWQgPSBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihsZWFkKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5wbGFpbkxlYWQsXG4gICAgYWN0aXZpdGllczogcGxhaW5MZWFkLmFjdGl2aXRpZXMuc29ydCgoYTogYW55LCBiOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGFEYXRlID0gbmV3IERhdGUoYS5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIGNvbnN0IGJEYXRlID0gbmV3IERhdGUoYi5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICAgIH0pXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmVjZW50QWN0aXZpdGllcyA9IGFzeW5jIChsaW1pdDogbnVtYmVyKTogUHJvbWlzZTx7IGxlYWQ6IExlYWQ7IGFjdGl2aXR5OiBBY3Rpdml0eSB9W10+ID0+IHtcbiAgY29uc3QgbGVhZHMgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRBbGwoKTtcbiAgY29uc3QgcGxhaW5MZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGNvbnN0IGFsbEFjdGl2aXRpZXMgPSBwbGFpbkxlYWRzLmZsYXRNYXAobGVhZCA9PiBcbiAgICBsZWFkLmFjdGl2aXRpZXMubWFwKGFjdGl2aXR5ID0+ICh7IGxlYWQsIGFjdGl2aXR5IH0pKVxuICApO1xuICBcbiAgcmV0dXJuIGFsbEFjdGl2aXRpZXNcbiAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgY29uc3QgYURhdGUgPSBuZXcgRGF0ZShhLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgY29uc3QgYkRhdGUgPSBuZXcgRGF0ZShiLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gICAgfSlcbiAgICAuc2xpY2UoMCwgbGltaXQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZExlYWQgPSBhc3luYyAobGVhZERhdGE6IE9taXQ8TGVhZCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ2FjdGl2aXRpZXMnPiAmIHsgbm90ZXM/OiBzdHJpbmcgfSk6IFByb21pc2U8TGVhZD4gPT4ge1xuICBjb25zdCB7IG5vdGVzLCAuLi5yZXN0T2ZMZWFkRGF0YSB9ID0gbGVhZERhdGE7XG4gIFxuICBjb25zdCBpbml0aWFsQWN0aXZpdHk6IExlYWRBY3Rpdml0eVtdID0gW107XG4gIGlmIChub3Rlcykge1xuICAgIGluaXRpYWxBY3Rpdml0eS5wdXNoKHtcbiAgICAgIGlkOiBgYWN0LSR7RGF0ZS5ub3coKX0tMWAsXG4gICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB0eXBlOiAnRW1haWwnLFxuICAgICAgbm90ZXM6IGBMZWFkIGNyZWF0ZWQgaW4gdGhlIHN5c3RlbS4gSW5pdGlhbCBub3RlczogJHtub3Rlc31gLFxuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnJlc3RPZkxlYWREYXRhLFxuICAgIGFjdGl2aXRpZXM6IGluaXRpYWxBY3Rpdml0eSxcbiAgICBwcmlvcml0eTogJ01lZGl1bScsXG4gICAgZXN0aW1hdGVkVmFsdWU6IGxlYWREYXRhLnByb2R1Y3RzPy5yZWR1Y2UoKHN1bSwgcHJvZHVjdCkgPT4gXG4gICAgICBzdW0gKyAocHJvZHVjdC5xdWFudGl0eSAqIHByb2R1Y3QucmF0ZSksIDApIHx8IDBcbiAgfSk7XG4gIFxuICBjb25zdCBuZXdMZWFkID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3TGVhZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdMZWFkKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRBY3Rpdml0eVRvTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgYWN0aXZpdHlEYXRhOiBPbWl0PEFjdGl2aXR5LCAnaWQnIHwgJ2RhdGUnPik6IFByb21pc2U8QWN0aXZpdHk+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQobGVhZElkKTtcbiAgaWYgKCFsZWFkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdMZWFkIG5vdCBmb3VuZCcpO1xuICB9XG5cbiAgY29uc3QgbmV3QWN0aXZpdHk6IExlYWRBY3Rpdml0eSA9IHtcbiAgICAuLi5hY3Rpdml0eURhdGEsXG4gICAgaWQ6IGBhY3QtJHtsZWFkSWR9LSR7RGF0ZS5ub3coKX1gLFxuICAgIGRhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgfTtcbiAgXG4gIGF3YWl0IGxlYWRTZXJ2aWNlLmFkZEFjdGl2aXR5KGxlYWRJZCwgbmV3QWN0aXZpdHkpO1xuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3QWN0aXZpdHkpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUxlYWRTdGF0dXMgPSBhc3luYyAobGVhZElkOiBzdHJpbmcsIHN0YXR1czogTGVhZFsnc3RhdHVzJ10pOiBQcm9taXNlPExlYWQ+ID0+IHtcbiAgYXdhaXQgbGVhZFNlcnZpY2UudXBkYXRlU3RhdHVzKGxlYWRJZCwgc3RhdHVzKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgbGVhZERhdGE6IFVwZGF0YWJsZUxlYWREYXRhKTogUHJvbWlzZTxMZWFkPiA9PiB7XG4gIGF3YWl0IGxlYWRTZXJ2aWNlLnVwZGF0ZShsZWFkSWQsIGxlYWREYXRhKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlTGVhZCA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBsZWFkU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBQcm9kdWN0IGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldFByb2R1Y3RzID0gYXN5bmMgKCk6IFByb21pc2U8UHJvZHVjdFtdPiA9PiB7XG4gIGNvbnN0IHByb2R1Y3RzID0gYXdhaXQgcHJvZHVjdFNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBwcm9kdWN0cy5tYXAocHJvZHVjdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihwcm9kdWN0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkUHJvZHVjdCA9IGFzeW5jIChwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmNyZWF0ZSh7XG4gICAgLi4ucHJvZHVjdERhdGEsXG4gICAgaXNBY3RpdmU6IHRydWUsXG4gICAgc3RvY2tRdWFudGl0eTogMTAwLFxuICAgIG1pblN0b2NrTGV2ZWw6IDEwXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UHJvZHVjdCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1Byb2R1Y3QpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZHVjdCcpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3UHJvZHVjdCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlUHJvZHVjdCA9IGFzeW5jIChpZDogc3RyaW5nLCBwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBhd2FpdCBwcm9kdWN0U2VydmljZS51cGRhdGUoaWQsIHByb2R1Y3REYXRhKTtcbiAgY29uc3QgdXBkYXRlZFByb2R1Y3QgPSBhd2FpdCBwcm9kdWN0U2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCF1cGRhdGVkUHJvZHVjdCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRQcm9kdWN0KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVQcm9kdWN0ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIExlYWQgU291cmNlIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRTb3VyY2VzID0gYXN5bmMgKCk6IFByb21pc2U8TGVhZFNvdXJjZVtdPiA9PiB7XG4gIGNvbnN0IHNvdXJjZXMgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBzb3VyY2VzLm1hcChzb3VyY2UgPT4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4oc291cmNlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkTGVhZFNvdXJjZSA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPExlYWRTb3VyY2U+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuY3JlYXRlKHtcbiAgICBuYW1lLFxuICAgIGlzQWN0aXZlOiB0cnVlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3U291cmNlID0gYXdhaXQgbGVhZFNvdXJjZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1NvdXJjZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkIHNvdXJjZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3U291cmNlKTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVMZWFkU291cmNlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGxlYWRTb3VyY2VzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBRdW90YXRpb24gZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9ucyA9IGFzeW5jICgpOiBQcm9taXNlPFF1b3RhdGlvbltdPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbnMgPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEFsbCgpO1xuICBjb25zdCBwbGFpblF1b3RhdGlvbnMgPSBxdW90YXRpb25zLm1hcChxID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHEpKTtcbiAgXG4gIHJldHVybiBwbGFpblF1b3RhdGlvbnMuc29ydCgoYSwgYikgPT4ge1xuICAgIGNvbnN0IGFEYXRlID0gYS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShhLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIGNvbnN0IGJEYXRlID0gYi5jcmVhdGVkQXQgPyBuZXcgRGF0ZShiLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25CeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvbiB8IHVuZGVmaW5lZD4gPT4ge1xuICBjb25zdCBxdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICByZXR1cm4gcXVvdGF0aW9uID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4ocXVvdGF0aW9uKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRRdW90YXRpb24gPSBhc3luYyAocXVvdGF0aW9uRGF0YTogT21pdDxRdW90YXRpb24sICdpZCcgfCAnY3JlYXRlZEF0JyB8ICdxdW90YXRpb25OdW1iZXInPik6IFByb21pc2U8UXVvdGF0aW9uPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbk51bWJlciA9IGF3YWl0IHF1b3RhdGlvblNlcnZpY2UuZ2VuZXJhdGVRdW90YXRpb25OdW1iZXIoKTtcbiAgXG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnF1b3RhdGlvbkRhdGEsXG4gICAgcXVvdGF0aW9uTnVtYmVyXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UXVvdGF0aW9uID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCFuZXdRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcXVvdGF0aW9uJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nLCBxdW90YXRpb25EYXRhOiBQYXJ0aWFsPFF1b3RhdGlvbj4pOiBQcm9taXNlPFF1b3RhdGlvbj4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLnVwZGF0ZShpZCwgcXVvdGF0aW9uRGF0YSk7XG4gIGNvbnN0IHVwZGF0ZWRRdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1F1b3RhdGlvbiBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIFF1b3RhdGlvbiBUZW1wbGF0ZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25UZW1wbGF0ZXMgPSBhc3luYyAoKTogUHJvbWlzZTxRdW90YXRpb25UZW1wbGF0ZVtdPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlcyA9IGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiB0ZW1wbGF0ZXMubWFwKHRlbXBsYXRlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHRlbXBsYXRlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9uVGVtcGxhdGVCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlIHwgdW5kZWZpbmVkPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgcmV0dXJuIHRlbXBsYXRlID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4odGVtcGxhdGUpIDogdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZFF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKHRlbXBsYXRlRGF0YTogT21pdDxRdW90YXRpb25UZW1wbGF0ZSwgJ2lkJz4pOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnRlbXBsYXRlRGF0YSxcbiAgICBpc0RlZmF1bHQ6IGZhbHNlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3VGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1RlbXBsYXRlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHF1b3RhdGlvbiB0ZW1wbGF0ZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3VGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcsIHRlbXBsYXRlRGF0YTogUXVvdGF0aW9uVGVtcGxhdGUpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UudXBkYXRlKGlkLCB0ZW1wbGF0ZURhdGEpO1xuICBjb25zdCB1cGRhdGVkVGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRUZW1wbGF0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGVtcGxhdGUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkVGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZGVsZXRlKGlkKTtcbiAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xufTtcblxuLy8gRW1wbG95ZWUgUm9sZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZVJvbGVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVSb2xlW10+ID0+IHtcbiAgY29uc3Qgcm9sZXMgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5nZXRBbGwoKTtcbiAgcmV0dXJuIHJvbGVzLm1hcChyb2xlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHJvbGUpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZVJvbGUgPSBhc3luYyAobmFtZTogc3RyaW5nKTogUHJvbWlzZTxFbXBsb3llZVJvbGU+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5jcmVhdGUoeyBuYW1lIH0pO1xuICBcbiAgY29uc3QgbmV3Um9sZSA9IGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1JvbGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgZW1wbG95ZWUgcm9sZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3Um9sZSk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlRW1wbG95ZWVSb2xlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIERlcGFydG1lbnQgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RGVwYXJ0bWVudHMgPSBhc3luYyAoKTogUHJvbWlzZTxEZXBhcnRtZW50W10+ID0+IHtcbiAgY29uc3QgZGVwYXJ0bWVudHMgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBkZXBhcnRtZW50cy5tYXAoZGVwdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihkZXB0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkRGVwYXJ0bWVudCA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPERlcGFydG1lbnQ+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuY3JlYXRlKHsgbmFtZSB9KTtcbiAgXG4gIGNvbnN0IG5ld0RlcGFydG1lbnQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3RGVwYXJ0bWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBkZXBhcnRtZW50Jyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdEZXBhcnRtZW50KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVEZXBhcnRtZW50ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGRlcGFydG1lbnRzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJ5U0F5YWEifQ==
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:089121 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f93d0bb939f748aacd7331842952547c4a4a6ddf0":"deleteDepartment"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "deleteDepartment": (()=>deleteDepartment)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var deleteDepartment = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f93d0bb939f748aacd7331842952547c4a4a6ddf0", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "deleteDepartment"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:86cdeb [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f31e15fd4f61e5b609e4a6d50eeccb9af77aafef8":"addDepartment"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "addDepartment": (()=>addDepartment)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var addDepartment = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f31e15fd4f61e5b609e4a6d50eeccb9af77aafef8", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "addDepartment"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:385b86 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f6d87f222357d05d51ddaef3bee835c24413445c4":"getEmployeeRoles"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "getEmployeeRoles": (()=>getEmployeeRoles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var getEmployeeRoles = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f6d87f222357d05d51ddaef3bee835c24413445c4", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "getEmployeeRoles"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:b52e35 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7ffd8613a6e078c5fd9d33441e4b0f2ad06720be86":"deleteEmployeeRole"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "deleteEmployeeRole": (()=>deleteEmployeeRole)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var deleteEmployeeRole = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7ffd8613a6e078c5fd9d33441e4b0f2ad06720be86", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "deleteEmployeeRole"); //# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4vZmlyZXN0b3JlLWRhdGEtc2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IFxuICBlbXBsb3llZVNlcnZpY2UsIFxuICBsZWFkU2VydmljZSwgXG4gIHByb2R1Y3RTZXJ2aWNlLCBcbiAgcXVvdGF0aW9uU2VydmljZSxcbiAgZGVwYXJ0bWVudHNTZXJ2aWNlLFxuICBlbXBsb3llZVJvbGVzU2VydmljZSxcbiAgbGVhZFNvdXJjZXNTZXJ2aWNlLFxuICBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlXG59IGZyb20gJy4vYnVzaW5lc3Mtc2VydmljZXMnO1xuaW1wb3J0IHsgXG4gIEVtcGxveWVlLCBcbiAgTGVhZCwgXG4gIFByb2R1Y3QsIFxuICBRdW90YXRpb24sIFxuICBRdW90YXRpb25UZW1wbGF0ZSxcbiAgRGVwYXJ0bWVudCxcbiAgRW1wbG95ZWVSb2xlLFxuICBMZWFkU291cmNlLFxuICBMZWFkQWN0aXZpdHlcbn0gZnJvbSAnLi9idXNpbmVzcy10eXBlcyc7XG5pbXBvcnQgeyBUaW1lc3RhbXAgfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgVGltZXN0YW1wcyB0byBwbGFpbiBvYmplY3RzXG5mdW5jdGlvbiBjb252ZXJ0VGltZXN0YW1wVG9QbGFpbihvYmo6IGFueSk6IGFueSB7XG4gIGlmICghb2JqKSByZXR1cm4gb2JqO1xuICBcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFRpbWVzdGFtcCkge1xuICAgIHJldHVybiBvYmoudG9EYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgfVxuICBcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIHJldHVybiBvYmoubWFwKGl0ZW0gPT4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oaXRlbSkpO1xuICB9XG4gIFxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICBjb25zdCBjb252ZXJ0ZWQ6IGFueSA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgIGNvbnZlcnRlZFtrZXldID0gY29udmVydFRpbWVzdGFtcFRvUGxhaW4ob2JqW2tleV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29udmVydGVkO1xuICB9XG4gIFxuICByZXR1cm4gb2JqO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udmVydCBGaXJlc3RvcmUgZG9jdW1lbnRzIHRvIHBsYWluIG9iamVjdHNcbmZ1bmN0aW9uIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluPFQ+KGRvYzogVCk6IFQge1xuICByZXR1cm4gY29udmVydFRpbWVzdGFtcFRvUGxhaW4oZG9jKTtcbn1cblxuLy8gVHlwZSBkZWZpbml0aW9ucyB0byBtYXRjaCB5b3VyIGV4aXN0aW5nIHR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEFjdGl2aXR5IGV4dGVuZHMgTGVhZEFjdGl2aXR5IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3RW1wbG95ZWUge1xuICBuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHBob25lOiBzdHJpbmc7XG4gIHJvbGU6IHN0cmluZztcbiAgZGVwYXJ0bWVudDogc3RyaW5nO1xuICBhZGRyZXNzOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV3UHJvZHVjdCB7XG4gIG5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgZ3N0UmF0ZTogbnVtYmVyO1xuICBza3VzPzogc3RyaW5nW107XG4gIGNhdGFsb2d1ZVVybD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVcGRhdGFibGVMZWFkRGF0YSB7XG4gIG5hbWU/OiBzdHJpbmc7XG4gIGNvbXBhbnk/OiBzdHJpbmc7XG4gIGVtYWlsPzogc3RyaW5nO1xuICBwaG9uZT86IHN0cmluZztcbiAgd2hhdHNhcHBOdW1iZXI/OiBzdHJpbmc7XG4gIHN0YXR1cz86IExlYWRbJ3N0YXR1cyddO1xuICBzb3VyY2U/OiBzdHJpbmc7XG4gIHByb2R1Y3RzPzogTGVhZFsncHJvZHVjdHMnXTtcbn1cblxuLy8gRW1wbG95ZWUgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RW1wbG95ZWVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVbXT4gPT4ge1xuICBjb25zdCBlbXBsb3llZXMgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBlbXBsb3llZXMubWFwKGVtcCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihlbXApKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZUJ5SWQgPSBhc3luYyAoaWQ6IHN0cmluZyk6IFByb21pc2U8RW1wbG95ZWUgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgZW1wbG95ZWUgPSBhd2FpdCBlbXBsb3llZVNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIHJldHVybiBlbXBsb3llZSA/IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGVtcGxveWVlKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZSA9IGFzeW5jIChlbXBsb3llZURhdGE6IE5ld0VtcGxveWVlKTogUHJvbWlzZTxFbXBsb3llZT4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IGVtcGxveWVlU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLmVtcGxveWVlRGF0YSxcbiAgICBpc0FjdGl2ZTogdHJ1ZVxuICB9KTtcbiAgXG4gIGNvbnN0IG5ld0VtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld0VtcGxveWVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIGVtcGxveWVlJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdFbXBsb3llZSk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlRW1wbG95ZWUgPSBhc3luYyAoaWQ6IHN0cmluZywgZW1wbG95ZWVEYXRhOiBQYXJ0aWFsPE5ld0VtcGxveWVlPik6IFByb21pc2U8RW1wbG95ZWU+ID0+IHtcbiAgYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLnVwZGF0ZShpZCwgZW1wbG95ZWVEYXRhKTtcbiAgY29uc3QgdXBkYXRlZEVtcGxveWVlID0gYXdhaXQgZW1wbG95ZWVTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRFbXBsb3llZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRW1wbG95ZWUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkRW1wbG95ZWUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZUVtcGxveWVlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBMZWFkIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRzID0gYXN5bmMgKHF1ZXJ5Pzogc3RyaW5nLCBzdGF0dXM/OiBzdHJpbmcpOiBQcm9taXNlPExlYWRbXT4gPT4ge1xuICBsZXQgbGVhZHM6IExlYWRbXSA9IFtdO1xuICBcbiAgaWYgKHN0YXR1cykge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0TGVhZHNCeVN0YXR1cyhzdGF0dXMgYXMgTGVhZFsnc3RhdHVzJ10pO1xuICB9IGVsc2Uge1xuICAgIGxlYWRzID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QWxsKCk7XG4gIH1cbiAgXG4gIC8vIENvbnZlcnQgdG8gcGxhaW4gb2JqZWN0c1xuICBsZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGlmIChxdWVyeSkge1xuICAgIGNvbnN0IGxvd2VyY2FzZWRRdWVyeSA9IHF1ZXJ5LnRvTG93ZXJDYXNlKCk7XG4gICAgbGVhZHMgPSBsZWFkcy5maWx0ZXIoXG4gICAgICBsZWFkID0+XG4gICAgICAgIGxlYWQubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGxvd2VyY2FzZWRRdWVyeSkgfHxcbiAgICAgICAgbGVhZC5jb21wYW55LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMobG93ZXJjYXNlZFF1ZXJ5KVxuICAgICk7XG4gIH1cbiAgXG4gIHJldHVybiBsZWFkcy5zb3J0KChhLCBiKSA9PiB7XG4gICAgY29uc3QgYURhdGUgPSBhLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGEuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgY29uc3QgYkRhdGUgPSBiLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGIuY3JlYXRlZEF0LnRvU3RyaW5nKCkpLmdldFRpbWUoKSA6IDA7XG4gICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldExlYWRCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPExlYWQgfCB1bmRlZmluZWQ+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIWxlYWQpIHJldHVybiB1bmRlZmluZWQ7XG4gIFxuICBjb25zdCBwbGFpbkxlYWQgPSBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihsZWFkKTtcbiAgcmV0dXJuIHtcbiAgICAuLi5wbGFpbkxlYWQsXG4gICAgYWN0aXZpdGllczogcGxhaW5MZWFkLmFjdGl2aXRpZXMuc29ydCgoYTogYW55LCBiOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGFEYXRlID0gbmV3IERhdGUoYS5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIGNvbnN0IGJEYXRlID0gbmV3IERhdGUoYi5kYXRlLnRvU3RyaW5nKCkpLmdldFRpbWUoKTtcbiAgICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICAgIH0pXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmVjZW50QWN0aXZpdGllcyA9IGFzeW5jIChsaW1pdDogbnVtYmVyKTogUHJvbWlzZTx7IGxlYWQ6IExlYWQ7IGFjdGl2aXR5OiBBY3Rpdml0eSB9W10+ID0+IHtcbiAgY29uc3QgbGVhZHMgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRBbGwoKTtcbiAgY29uc3QgcGxhaW5MZWFkcyA9IGxlYWRzLm1hcChsZWFkID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKGxlYWQpKTtcbiAgXG4gIGNvbnN0IGFsbEFjdGl2aXRpZXMgPSBwbGFpbkxlYWRzLmZsYXRNYXAobGVhZCA9PiBcbiAgICBsZWFkLmFjdGl2aXRpZXMubWFwKGFjdGl2aXR5ID0+ICh7IGxlYWQsIGFjdGl2aXR5IH0pKVxuICApO1xuICBcbiAgcmV0dXJuIGFsbEFjdGl2aXRpZXNcbiAgICAuc29ydCgoYSwgYikgPT4ge1xuICAgICAgY29uc3QgYURhdGUgPSBuZXcgRGF0ZShhLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgY29uc3QgYkRhdGUgPSBuZXcgRGF0ZShiLmFjdGl2aXR5LmRhdGUudG9TdHJpbmcoKSkuZ2V0VGltZSgpO1xuICAgICAgcmV0dXJuIGJEYXRlIC0gYURhdGU7XG4gICAgfSlcbiAgICAuc2xpY2UoMCwgbGltaXQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZExlYWQgPSBhc3luYyAobGVhZERhdGE6IE9taXQ8TGVhZCwgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ2FjdGl2aXRpZXMnPiAmIHsgbm90ZXM/OiBzdHJpbmcgfSk6IFByb21pc2U8TGVhZD4gPT4ge1xuICBjb25zdCB7IG5vdGVzLCAuLi5yZXN0T2ZMZWFkRGF0YSB9ID0gbGVhZERhdGE7XG4gIFxuICBjb25zdCBpbml0aWFsQWN0aXZpdHk6IExlYWRBY3Rpdml0eVtdID0gW107XG4gIGlmIChub3Rlcykge1xuICAgIGluaXRpYWxBY3Rpdml0eS5wdXNoKHtcbiAgICAgIGlkOiBgYWN0LSR7RGF0ZS5ub3coKX0tMWAsXG4gICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB0eXBlOiAnRW1haWwnLFxuICAgICAgbm90ZXM6IGBMZWFkIGNyZWF0ZWQgaW4gdGhlIHN5c3RlbS4gSW5pdGlhbCBub3RlczogJHtub3Rlc31gLFxuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnJlc3RPZkxlYWREYXRhLFxuICAgIGFjdGl2aXRpZXM6IGluaXRpYWxBY3Rpdml0eSxcbiAgICBwcmlvcml0eTogJ01lZGl1bScsXG4gICAgZXN0aW1hdGVkVmFsdWU6IGxlYWREYXRhLnByb2R1Y3RzPy5yZWR1Y2UoKHN1bSwgcHJvZHVjdCkgPT4gXG4gICAgICBzdW0gKyAocHJvZHVjdC5xdWFudGl0eSAqIHByb2R1Y3QucmF0ZSksIDApIHx8IDBcbiAgfSk7XG4gIFxuICBjb25zdCBuZXdMZWFkID0gYXdhaXQgbGVhZFNlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3TGVhZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdMZWFkKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRBY3Rpdml0eVRvTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgYWN0aXZpdHlEYXRhOiBPbWl0PEFjdGl2aXR5LCAnaWQnIHwgJ2RhdGUnPik6IFByb21pc2U8QWN0aXZpdHk+ID0+IHtcbiAgY29uc3QgbGVhZCA9IGF3YWl0IGxlYWRTZXJ2aWNlLmdldEJ5SWQobGVhZElkKTtcbiAgaWYgKCFsZWFkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdMZWFkIG5vdCBmb3VuZCcpO1xuICB9XG5cbiAgY29uc3QgbmV3QWN0aXZpdHk6IExlYWRBY3Rpdml0eSA9IHtcbiAgICAuLi5hY3Rpdml0eURhdGEsXG4gICAgaWQ6IGBhY3QtJHtsZWFkSWR9LSR7RGF0ZS5ub3coKX1gLFxuICAgIGRhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgfTtcbiAgXG4gIGF3YWl0IGxlYWRTZXJ2aWNlLmFkZEFjdGl2aXR5KGxlYWRJZCwgbmV3QWN0aXZpdHkpO1xuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3QWN0aXZpdHkpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZUxlYWRTdGF0dXMgPSBhc3luYyAobGVhZElkOiBzdHJpbmcsIHN0YXR1czogTGVhZFsnc3RhdHVzJ10pOiBQcm9taXNlPExlYWQ+ID0+IHtcbiAgYXdhaXQgbGVhZFNlcnZpY2UudXBkYXRlU3RhdHVzKGxlYWRJZCwgc3RhdHVzKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlTGVhZCA9IGFzeW5jIChsZWFkSWQ6IHN0cmluZywgbGVhZERhdGE6IFVwZGF0YWJsZUxlYWREYXRhKTogUHJvbWlzZTxMZWFkPiA9PiB7XG4gIGF3YWl0IGxlYWRTZXJ2aWNlLnVwZGF0ZShsZWFkSWQsIGxlYWREYXRhKTtcbiAgY29uc3QgdXBkYXRlZExlYWQgPSBhd2FpdCBsZWFkU2VydmljZS5nZXRCeUlkKGxlYWRJZCk7XG4gIGlmICghdXBkYXRlZExlYWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0xlYWQgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkTGVhZCk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlTGVhZCA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBsZWFkU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBQcm9kdWN0IGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldFByb2R1Y3RzID0gYXN5bmMgKCk6IFByb21pc2U8UHJvZHVjdFtdPiA9PiB7XG4gIGNvbnN0IHByb2R1Y3RzID0gYXdhaXQgcHJvZHVjdFNlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBwcm9kdWN0cy5tYXAocHJvZHVjdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihwcm9kdWN0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkUHJvZHVjdCA9IGFzeW5jIChwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBjb25zdCBpZCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmNyZWF0ZSh7XG4gICAgLi4ucHJvZHVjdERhdGEsXG4gICAgaXNBY3RpdmU6IHRydWUsXG4gICAgc3RvY2tRdWFudGl0eTogMTAwLFxuICAgIG1pblN0b2NrTGV2ZWw6IDEwXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UHJvZHVjdCA9IGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1Byb2R1Y3QpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZHVjdCcpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3UHJvZHVjdCk7XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlUHJvZHVjdCA9IGFzeW5jIChpZDogc3RyaW5nLCBwcm9kdWN0RGF0YTogTmV3UHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdD4gPT4ge1xuICBhd2FpdCBwcm9kdWN0U2VydmljZS51cGRhdGUoaWQsIHByb2R1Y3REYXRhKTtcbiAgY29uc3QgdXBkYXRlZFByb2R1Y3QgPSBhd2FpdCBwcm9kdWN0U2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCF1cGRhdGVkUHJvZHVjdCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRQcm9kdWN0KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVQcm9kdWN0ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHByb2R1Y3RTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIExlYWQgU291cmNlIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGdldExlYWRTb3VyY2VzID0gYXN5bmMgKCk6IFByb21pc2U8TGVhZFNvdXJjZVtdPiA9PiB7XG4gIGNvbnN0IHNvdXJjZXMgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBzb3VyY2VzLm1hcChzb3VyY2UgPT4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4oc291cmNlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkTGVhZFNvdXJjZSA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPExlYWRTb3VyY2U+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBsZWFkU291cmNlc1NlcnZpY2UuY3JlYXRlKHtcbiAgICBuYW1lLFxuICAgIGlzQWN0aXZlOiB0cnVlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3U291cmNlID0gYXdhaXQgbGVhZFNvdXJjZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1NvdXJjZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBsZWFkIHNvdXJjZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3U291cmNlKTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVMZWFkU291cmNlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGxlYWRTb3VyY2VzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuXG4vLyBRdW90YXRpb24gZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9ucyA9IGFzeW5jICgpOiBQcm9taXNlPFF1b3RhdGlvbltdPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbnMgPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEFsbCgpO1xuICBjb25zdCBwbGFpblF1b3RhdGlvbnMgPSBxdW90YXRpb25zLm1hcChxID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHEpKTtcbiAgXG4gIHJldHVybiBwbGFpblF1b3RhdGlvbnMuc29ydCgoYSwgYikgPT4ge1xuICAgIGNvbnN0IGFEYXRlID0gYS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShhLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIGNvbnN0IGJEYXRlID0gYi5jcmVhdGVkQXQgPyBuZXcgRGF0ZShiLmNyZWF0ZWRBdC50b1N0cmluZygpKS5nZXRUaW1lKCkgOiAwO1xuICAgIHJldHVybiBiRGF0ZSAtIGFEYXRlO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25CeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvbiB8IHVuZGVmaW5lZD4gPT4ge1xuICBjb25zdCBxdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICByZXR1cm4gcXVvdGF0aW9uID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4ocXVvdGF0aW9uKSA6IHVuZGVmaW5lZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRRdW90YXRpb24gPSBhc3luYyAocXVvdGF0aW9uRGF0YTogT21pdDxRdW90YXRpb24sICdpZCcgfCAnY3JlYXRlZEF0JyB8ICdxdW90YXRpb25OdW1iZXInPik6IFByb21pc2U8UXVvdGF0aW9uPiA9PiB7XG4gIGNvbnN0IHF1b3RhdGlvbk51bWJlciA9IGF3YWl0IHF1b3RhdGlvblNlcnZpY2UuZ2VuZXJhdGVRdW90YXRpb25OdW1iZXIoKTtcbiAgXG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnF1b3RhdGlvbkRhdGEsXG4gICAgcXVvdGF0aW9uTnVtYmVyXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3UXVvdGF0aW9uID0gYXdhaXQgcXVvdGF0aW9uU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgaWYgKCFuZXdRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgcXVvdGF0aW9uJyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nLCBxdW90YXRpb25EYXRhOiBQYXJ0aWFsPFF1b3RhdGlvbj4pOiBQcm9taXNlPFF1b3RhdGlvbj4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLnVwZGF0ZShpZCwgcXVvdGF0aW9uRGF0YSk7XG4gIGNvbnN0IHVwZGF0ZWRRdW90YXRpb24gPSBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRRdW90YXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1F1b3RhdGlvbiBub3QgZm91bmQgYWZ0ZXIgdXBkYXRlJyk7XG4gIH1cbiAgcmV0dXJuIGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHVwZGF0ZWRRdW90YXRpb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvbiA9IGFzeW5jIChpZDogc3RyaW5nKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW4gfT4gPT4ge1xuICBhd2FpdCBxdW90YXRpb25TZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIFF1b3RhdGlvbiBUZW1wbGF0ZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRRdW90YXRpb25UZW1wbGF0ZXMgPSBhc3luYyAoKTogUHJvbWlzZTxRdW90YXRpb25UZW1wbGF0ZVtdPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlcyA9IGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiB0ZW1wbGF0ZXMubWFwKHRlbXBsYXRlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHRlbXBsYXRlKSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UXVvdGF0aW9uVGVtcGxhdGVCeUlkID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlIHwgdW5kZWZpbmVkPiA9PiB7XG4gIGNvbnN0IHRlbXBsYXRlID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5nZXRCeUlkKGlkKTtcbiAgcmV0dXJuIHRlbXBsYXRlID8gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4odGVtcGxhdGUpIDogdW5kZWZpbmVkO1xufTtcblxuZXhwb3J0IGNvbnN0IGFkZFF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKHRlbXBsYXRlRGF0YTogT21pdDxRdW90YXRpb25UZW1wbGF0ZSwgJ2lkJz4pOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGNvbnN0IGlkID0gYXdhaXQgcXVvdGF0aW9uVGVtcGxhdGVzU2VydmljZS5jcmVhdGUoe1xuICAgIC4uLnRlbXBsYXRlRGF0YSxcbiAgICBpc0RlZmF1bHQ6IGZhbHNlXG4gIH0pO1xuICBcbiAgY29uc3QgbmV3VGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1RlbXBsYXRlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHF1b3RhdGlvbiB0ZW1wbGF0ZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3VGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcsIHRlbXBsYXRlRGF0YTogUXVvdGF0aW9uVGVtcGxhdGUpOiBQcm9taXNlPFF1b3RhdGlvblRlbXBsYXRlPiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UudXBkYXRlKGlkLCB0ZW1wbGF0ZURhdGEpO1xuICBjb25zdCB1cGRhdGVkVGVtcGxhdGUgPSBhd2FpdCBxdW90YXRpb25UZW1wbGF0ZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIXVwZGF0ZWRUZW1wbGF0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignVGVtcGxhdGUgbm90IGZvdW5kIGFmdGVyIHVwZGF0ZScpO1xuICB9XG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbih1cGRhdGVkVGVtcGxhdGUpO1xufTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVF1b3RhdGlvblRlbXBsYXRlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IHF1b3RhdGlvblRlbXBsYXRlc1NlcnZpY2UuZGVsZXRlKGlkKTtcbiAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xufTtcblxuLy8gRW1wbG95ZWUgUm9sZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBnZXRFbXBsb3llZVJvbGVzID0gYXN5bmMgKCk6IFByb21pc2U8RW1wbG95ZWVSb2xlW10+ID0+IHtcbiAgY29uc3Qgcm9sZXMgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5nZXRBbGwoKTtcbiAgcmV0dXJuIHJvbGVzLm1hcChyb2xlID0+IGNvbnZlcnRGaXJlc3RvcmVEb2NUb1BsYWluKHJvbGUpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRFbXBsb3llZVJvbGUgPSBhc3luYyAobmFtZTogc3RyaW5nKTogUHJvbWlzZTxFbXBsb3llZVJvbGU+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBlbXBsb3llZVJvbGVzU2VydmljZS5jcmVhdGUoeyBuYW1lIH0pO1xuICBcbiAgY29uc3QgbmV3Um9sZSA9IGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmdldEJ5SWQoaWQpO1xuICBpZiAoIW5ld1JvbGUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgZW1wbG95ZWUgcm9sZScpO1xuICB9XG4gIFxuICByZXR1cm4gY29udmVydEZpcmVzdG9yZURvY1RvUGxhaW4obmV3Um9sZSk7XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlRW1wbG95ZWVSb2xlID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGVtcGxveWVlUm9sZXNTZXJ2aWNlLmRlbGV0ZShpZCk7XG4gIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfTtcbn07XG5cbi8vIERlcGFydG1lbnQgZnVuY3Rpb25zXG5leHBvcnQgY29uc3QgZ2V0RGVwYXJ0bWVudHMgPSBhc3luYyAoKTogUHJvbWlzZTxEZXBhcnRtZW50W10+ID0+IHtcbiAgY29uc3QgZGVwYXJ0bWVudHMgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QWxsKCk7XG4gIHJldHVybiBkZXBhcnRtZW50cy5tYXAoZGVwdCA9PiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihkZXB0KSk7XG59O1xuXG5leHBvcnQgY29uc3QgYWRkRGVwYXJ0bWVudCA9IGFzeW5jIChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPERlcGFydG1lbnQ+ID0+IHtcbiAgY29uc3QgaWQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuY3JlYXRlKHsgbmFtZSB9KTtcbiAgXG4gIGNvbnN0IG5ld0RlcGFydG1lbnQgPSBhd2FpdCBkZXBhcnRtZW50c1NlcnZpY2UuZ2V0QnlJZChpZCk7XG4gIGlmICghbmV3RGVwYXJ0bWVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBkZXBhcnRtZW50Jyk7XG4gIH1cbiAgXG4gIHJldHVybiBjb252ZXJ0RmlyZXN0b3JlRG9jVG9QbGFpbihuZXdEZXBhcnRtZW50KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWxldGVEZXBhcnRtZW50ID0gYXN5bmMgKGlkOiBzdHJpbmcpOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbiB9PiA9PiB7XG4gIGF3YWl0IGRlcGFydG1lbnRzU2VydmljZS5kZWxldGUoaWQpO1xuICByZXR1cm4geyBzdWNjZXNzOiB0cnVlIH07XG59O1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI2U0FtYWEifQ==
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/lib/data:26c3c5 [app-client] (ecmascript) <text/javascript>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
/* __next_internal_action_entry_do_not_use__ [{"7f822c7526a05588811630fb16c06bf87327d46e27":"addEmployeeRole"},"src/lib/firestore-data-service.ts",""] */ __turbopack_context__.s({
    "addEmployeeRole": (()=>addEmployeeRole)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js [app-client] (ecmascript)");
"use turbopack no side effects";
;
var addEmployeeRole = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createServerReference"])("7f822c7526a05588811630fb16c06bf87327d46e27", __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["callServer"], void 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$webpack$2f$loaders$2f$next$2d$flight$2d$loader$2f$action$2d$client$2d$wrapper$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findSourceMapURL"], "addEmployeeRole"); //# sourceMappingURL=data:application/json;base64,
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/components/comprehensive-firestore-test.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname, k: __turbopack_refresh__, m: module } = __turbopack_context__;
{
__turbopack_context__.s({
    "default": (()=>ComprehensiveFirestoreTest)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$2f$index$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/src/lib/data/index.ts [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$115243__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:115243 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$67caa4__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:67caa4 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$e101b0__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:e101b0 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$f70afb__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:f70afb [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$52c587__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:52c587 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$8ebebf__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:8ebebf [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$596f50__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:596f50 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$588043__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:588043 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$ae2ca2__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:ae2ca2 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$3fb0ae__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:3fb0ae [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$fa79b9__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:fa79b9 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$d9d92f__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:d9d92f [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$96c615__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:96c615 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$8238ce__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:8238ce [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$e14489__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:e14489 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$089121__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:089121 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$86cdeb__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:86cdeb [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$385b86__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:385b86 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$b52e35__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:b52e35 [app-client] (ecmascript) <text/javascript>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$26c3c5__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__ = __turbopack_context__.i("[project]/src/lib/data:26c3c5 [app-client] (ecmascript) <text/javascript>");
;
var _s = __turbopack_context__.k.signature();
'use client';
;
;
function ComprehensiveFirestoreTest() {
    _s();
    const [activeTab, setActiveTab] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('employees');
    const [data, setData] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [loading, setLoading] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [message, setMessage] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('');
    const tabs = [
        {
            id: 'employees',
            label: '👥 Employees',
            color: 'blue'
        },
        {
            id: 'leads',
            label: '🎯 Leads',
            color: 'green'
        },
        {
            id: 'products',
            label: '📦 Products',
            color: 'purple'
        },
        {
            id: 'quotations',
            label: '📋 Quotations',
            color: 'orange'
        },
        {
            id: 'departments',
            label: '🏢 Departments',
            color: 'indigo'
        },
        {
            id: 'roles',
            label: '👔 Roles',
            color: 'pink'
        },
        {
            id: 'sources',
            label: '📊 Sources',
            color: 'teal'
        }
    ];
    const loadData = async (type)=>{
        try {
            setLoading(true);
            let result = [];
            switch(type){
                case 'employees':
                    result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$67caa4__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["getEmployees"])();
                    break;
                case 'leads':
                    result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$52c587__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["getLeads"])();
                    break;
                case 'products':
                    result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$588043__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["getProducts"])();
                    break;
                case 'quotations':
                    result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$3fb0ae__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["getQuotations"])();
                    break;
                case 'departments':
                    result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$e14489__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["getDepartments"])();
                    break;
                case 'roles':
                    result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$385b86__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["getEmployeeRoles"])();
                    break;
                case 'sources':
                    result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$d9d92f__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["getLeadSources"])();
                    break;
            }
            setData(result);
            setMessage(`Loaded ${result.length} ${type} from Firestore`);
        } catch (error) {
            setMessage(`Error loading ${type}: ${error}`);
            console.error('Error:', error);
        } finally{
            setLoading(false);
        }
    };
    const handleDelete = async (item, type)=>{
        const itemName = item.name || item.quotationNumber || item.id;
        if (!confirm(`Are you sure you want to delete "${itemName}"?`)) {
            return;
        }
        try {
            setLoading(true);
            setMessage(`Deleting ${itemName} from Firestore...`);
            switch(type){
                case 'employees':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$e101b0__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["deleteEmployee"])(item.id);
                    break;
                case 'leads':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$8ebebf__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["deleteLead"])(item.id);
                    break;
                case 'products':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$ae2ca2__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["deleteProduct"])(item.id);
                    break;
                case 'quotations':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$fa79b9__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["deleteQuotation"])(item.id);
                    break;
                case 'departments':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$089121__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["deleteDepartment"])(item.id);
                    break;
                case 'roles':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$b52e35__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["deleteEmployeeRole"])(item.id);
                    break;
                case 'sources':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$96c615__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["deleteLeadSource"])(item.id);
                    break;
            }
            setMessage(`✅ ${itemName} deleted successfully from Firestore!`);
            await loadData(type);
        } catch (error) {
            setMessage(`❌ Error deleting ${itemName}: ${error}`);
            console.error('Error:', error);
        } finally{
            setLoading(false);
        }
    };
    const handleAddSample = async (type)=>{
        try {
            setLoading(true);
            setMessage(`Adding sample ${type.slice(0, -1)} to Firestore...`);
            switch(type){
                case 'employees':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$115243__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["addEmployee"])({
                        name: `Test Employee ${Date.now()}`,
                        email: `test${Date.now()}@example.com`,
                        phone: '1234567890',
                        role: 'Developer',
                        department: 'Engineering',
                        address: 'Test Address'
                    });
                    break;
                case 'leads':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$f70afb__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["addLead"])({
                        name: `Test Lead ${Date.now()}`,
                        company: 'Test Company',
                        email: `lead${Date.now()}@example.com`,
                        phone: '1234567890',
                        status: 'New',
                        source: 'Website',
                        products: [],
                        notes: 'Test lead created for testing'
                    });
                    break;
                case 'products':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$596f50__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["addProduct"])({
                        name: `Test Product ${Date.now()}`,
                        description: 'A test product for demonstration',
                        price: 1000,
                        gstRate: 18
                    });
                    break;
                case 'departments':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$86cdeb__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["addDepartment"])(`Test Department ${Date.now()}`);
                    break;
                case 'roles':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$26c3c5__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["addEmployeeRole"])(`Test Role ${Date.now()}`);
                    break;
                case 'sources':
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$data$3a$8238ce__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$text$2f$javascript$3e$__["addLeadSource"])(`Test Source ${Date.now()}`);
                    break;
            }
            setMessage(`✅ Sample ${type.slice(0, -1)} added successfully!`);
            await loadData(type);
        } catch (error) {
            setMessage(`❌ Error adding sample ${type.slice(0, -1)}: ${error}`);
            console.error('Error:', error);
        } finally{
            setLoading(false);
        }
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "ComprehensiveFirestoreTest.useEffect": ()=>{
            loadData(activeTab);
        }
    }["ComprehensiveFirestoreTest.useEffect"], [
        activeTab
    ]);
    const renderItem = (item, type)=>{
        const getItemTitle = ()=>{
            switch(type){
                case 'employees':
                    return item.name;
                case 'leads':
                    return `${item.name} (${item.company})`;
                case 'products':
                    return item.name;
                case 'quotations':
                    return item.quotationNumber;
                case 'departments':
                case 'roles':
                case 'sources':
                    return item.name;
                default:
                    return item.name || item.id;
            }
        };
        const getItemDetails = ()=>{
            switch(type){
                case 'employees':
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "text-sm text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📧 ",
                                    item.email
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 222,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📞 ",
                                    item.phone
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 223,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "👔 ",
                                    item.role,
                                    " - ",
                                    item.department
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 224,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 221,
                        columnNumber: 13
                    }, this);
                case 'leads':
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "text-sm text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📧 ",
                                    item.email
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 230,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📞 ",
                                    item.phone
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 231,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📊 Status: ",
                                    item.status
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 232,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "🔗 Source: ",
                                    item.source
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 233,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 229,
                        columnNumber: 13
                    }, this);
                case 'products':
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "text-sm text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "💰 Price: ₹",
                                    item.price?.toLocaleString()
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 239,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📊 GST: ",
                                    item.gstRate,
                                    "%"
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 240,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                className: "text-xs",
                                children: item.description
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 241,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 238,
                        columnNumber: 13
                    }, this);
                case 'quotations':
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "text-sm text-gray-600",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📅 Date: ",
                                    item.date
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 247,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "💵 Total: ₹",
                                    item.grandTotal?.toLocaleString()
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 248,
                                columnNumber: 15
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "📊 Status: ",
                                    item.status
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 249,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 246,
                        columnNumber: 13
                    }, this);
                default:
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "text-sm text-gray-600",
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                            children: [
                                "ID: ",
                                item.id
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                            lineNumber: 255,
                            columnNumber: 15
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 254,
                        columnNumber: 13
                    }, this);
            }
        };
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "bg-white border rounded-lg p-4 shadow-sm",
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex justify-between items-start",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "flex-1",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("h3", {
                                className: "font-semibold text-lg",
                                children: getItemTitle()
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 265,
                                columnNumber: 13
                            }, this),
                            getItemDetails(),
                            item.createdAt && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                className: "text-xs text-gray-400 mt-2",
                                children: [
                                    "Created: ",
                                    new Date(item.createdAt).toLocaleString()
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 268,
                                columnNumber: 15
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 264,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "flex flex-col space-y-1 ml-4",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                className: "bg-green-100 text-green-800 px-2 py-1 rounded text-xs text-center",
                                children: "Firestore"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 274,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                                onClick: ()=>handleDelete(item, type),
                                disabled: loading,
                                className: "bg-red-500 text-white px-2 py-1 rounded text-xs hover:bg-red-600 disabled:opacity-50",
                                children: "Delete"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 277,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 273,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                lineNumber: 263,
                columnNumber: 9
            }, this)
        }, item.id, false, {
            fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
            lineNumber: 262,
            columnNumber: 7
        }, this);
    };
    const currentTab = tabs.find((tab)=>tab.id === activeTab);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "max-w-7xl mx-auto p-6 bg-white",
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("h1", {
                className: "text-3xl font-bold mb-6 text-center",
                children: "🔥 Comprehensive Firestore Test"
            }, void 0, false, {
                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                lineNumber: 294,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "mb-6 p-4 bg-gray-100 rounded-lg",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-sm",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("strong", {
                                children: "Status:"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 299,
                                columnNumber: 11
                            }, this),
                            " ",
                            message || 'Ready to test Firestore operations'
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 298,
                        columnNumber: 9
                    }, this),
                    loading && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "mt-2",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                className: "animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500 inline-block"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 303,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                className: "ml-2 text-sm",
                                children: "Loading..."
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 304,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 302,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                lineNumber: 297,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex flex-wrap gap-2 mb-6 border-b",
                children: tabs.map((tab)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                        onClick: ()=>setActiveTab(tab.id),
                        className: `px-4 py-2 rounded-t-lg font-medium transition-colors ${activeTab === tab.id ? `bg-${tab.color}-500 text-white border-b-2 border-${tab.color}-500` : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`,
                        children: tab.label
                    }, tab.id, false, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 312,
                        columnNumber: 11
                    }, this))
            }, void 0, false, {
                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                lineNumber: 310,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "mb-6",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "flex justify-between items-center mb-4",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("h2", {
                                className: "text-xl font-semibold",
                                children: [
                                    currentTab?.label,
                                    " (",
                                    data.length,
                                    ")"
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 329,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                className: "flex space-x-2",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                                        onClick: ()=>loadData(activeTab),
                                        disabled: loading,
                                        className: "bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:opacity-50",
                                        children: "Refresh"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                        lineNumber: 333,
                                        columnNumber: 13
                                    }, this),
                                    [
                                        'quotations'
                                    ].indexOf(activeTab) === -1 && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                                        onClick: ()=>handleAddSample(activeTab),
                                        disabled: loading,
                                        className: "bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:opacity-50",
                                        children: "Add Sample"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                        lineNumber: 341,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 332,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 328,
                        columnNumber: 9
                    }, this),
                    data.length === 0 ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "text-center py-12 text-gray-500",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                children: [
                                    "No ",
                                    activeTab,
                                    " found in Firestore"
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 355,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                className: "text-sm mt-2",
                                children: [
                                    'quotations'
                                ].indexOf(activeTab) === -1 ? 'Click "Add Sample" to create test data' : 'Quotations need to be created through the leads workflow'
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 356,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 354,
                        columnNumber: 11
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",
                        children: data.map((item)=>renderItem(item, activeTab))
                    }, void 0, false, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 364,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                lineNumber: 327,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "bg-yellow-50 p-4 rounded-lg",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("h3", {
                        className: "text-lg font-semibold mb-2",
                        children: "🧪 Testing Instructions"
                    }, void 0, false, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 372,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("ol", {
                        className: "list-decimal list-inside space-y-1 text-sm",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                children: "Click on different tabs to view different data types"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 374,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                children: 'Click "Add Sample" to create test data in Firestore'
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 375,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                children: 'Click "Delete" on any item to remove it from Firestore'
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 376,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                children: 'Click "Refresh" to reload data from Firestore'
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 377,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                children: "Check Firebase Console to see real-time changes"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 378,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                children: "Test with multiple data types to verify all CRUD operations"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 379,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 373,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "mt-4 p-3 bg-green-100 rounded",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                className: "text-sm font-medium text-green-800",
                                children: "✅ What This Tests:"
                            }, void 0, false, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 383,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("ul", {
                                className: "text-xs text-green-700 mt-1 list-disc list-inside",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                        children: "Create operations (Add Sample)"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                        lineNumber: 385,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                        children: "Read operations (Loading data)"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                        lineNumber: 386,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                        children: "Delete operations (Delete buttons)"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                        lineNumber: 387,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                        children: "Real-time data sync with Firestore"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                        lineNumber: 388,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                        children: "Error handling and user feedback"
                                    }, void 0, false, {
                                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                        lineNumber: 389,
                                        columnNumber: 13
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                                lineNumber: 384,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                        lineNumber: 382,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
                lineNumber: 371,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/components/comprehensive-firestore-test.tsx",
        lineNumber: 293,
        columnNumber: 5
    }, this);
}
_s(ComprehensiveFirestoreTest, "/jqUxUoLPtb3LR55JPNgubYft+c=");
_c = ComprehensiveFirestoreTest;
var _c;
__turbopack_context__.k.register(_c, "ComprehensiveFirestoreTest");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_context__.k.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
}]);

//# sourceMappingURL=src_139d0e88._.js.map