{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/quotations/%5Bid%5D/quotation-preview.tsx"],"sourcesContent":["\n'use client';\n\nimport { useRef, useState } from 'react';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { PDFDocument } from 'pdf-lib';\nimport { format } from 'date-fns';\nimport {\n  Quotation,\n  Lead,\n  PopulatedQuotationProduct,\n} from '@/lib/business-types';\nimport { Button } from '@/components/ui/button';\nimport { Download, FileText } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\nimport { useToast } from '@/hooks/use-toast';\n\ntype QuotationPreviewProps = {\n  quotation: Quotation;\n  lead: Lead;\n  products: PopulatedQuotationProduct[];\n};\n\nconst formatCurrency = (amount: number) => {\n  return new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n  }).format(amount);\n};\n\nexport function QuotationPreview({\n  quotation,\n  lead,\n  products,\n}: QuotationPreviewProps) {\n  const previewRef = useRef<HTMLDivElement>(null);\n  const completePreviewRef = useRef<HTMLDivElement>(null);\n  const [isGeneratingMerged, setIsGeneratingMerged] = useState(false);\n  const { toast } = useToast();\n\n  const handleDownload = async () => {\n    // This function now only downloads the quotation part (without catalogs)\n    const quotationElement = previewRef.current;\n    if (!quotationElement) return;\n\n    const canvas = await html2canvas(quotationElement, {\n      scale: 2, // Higher scale for better quality\n      useCORS: true,\n    });\n    const data = canvas.toDataURL('image/png');\n\n    const pdf = new jsPDF('p', 'mm', 'a4');\n    const pdfWidth = pdf.internal.pageSize.getWidth();\n    const pdfHeight = (canvas.height * pdfWidth) / canvas.width;\n\n    pdf.addImage(data, 'PNG', 0, 0, pdfWidth, pdfHeight);\n    pdf.save(`Quotation-${quotation.quotationNumber}.pdf`);\n  };\n\n  const handleDownloadCompletePreview = async () => {\n    // This function downloads the complete preview (quotation + catalogs) as HTML-to-PDF\n    const completeElement = completePreviewRef.current;\n    if (!completeElement) return;\n\n    setIsGeneratingMerged(true);\n    \n    try {\n      const canvas = await html2canvas(completeElement, {\n        scale: 1.5, // Slightly lower scale for large content\n        useCORS: true,\n        height: completeElement.scrollHeight,\n        windowHeight: completeElement.scrollHeight,\n      });\n      const data = canvas.toDataURL('image/png');\n\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = pdf.internal.pageSize.getHeight();\n      const imgWidth = pdfWidth;\n      const imgHeight = (canvas.height * pdfWidth) / canvas.width;\n\n      let heightLeft = imgHeight;\n      let position = 0;\n\n      // Add first page\n      pdf.addImage(data, 'PNG', 0, position, imgWidth, imgHeight);\n      heightLeft -= pdfHeight;\n\n      // Add additional pages if needed\n      while (heightLeft >= 0) {\n        position = heightLeft - imgHeight;\n        pdf.addPage();\n        pdf.addImage(data, 'PNG', 0, position, imgWidth, imgHeight);\n        heightLeft -= pdfHeight;\n      }\n\n      pdf.save(`Quotation-${quotation.quotationNumber}-complete.pdf`);\n      \n      toast({\n        title: 'Success',\n        description: 'Complete quotation with catalogs downloaded successfully!',\n      });\n    } catch (error) {\n      console.error('Error generating complete preview PDF:', error);\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: 'Failed to generate complete preview PDF',\n      });\n    } finally {\n      setIsGeneratingMerged(false);\n    }\n  };\n\n  const handleDownloadWithCatalogs = async () => {\n    setIsGeneratingMerged(true);\n    \n    try {\n      // Generate the quotation PDF first\n      const element = previewRef.current;\n      if (!element) {\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Could not generate quotation PDF',\n        });\n        return;\n      }\n\n      const canvas = await html2canvas(element, {\n        scale: 2,\n        useCORS: true,\n      });\n      const data = canvas.toDataURL('image/png');\n\n      const quotationPdf = new jsPDF('p', 'mm', 'a4');\n      const pdfWidth = quotationPdf.internal.pageSize.getWidth();\n      const pdfHeight = (canvas.height * pdfWidth) / canvas.width;\n      quotationPdf.addImage(data, 'PNG', 0, 0, pdfWidth, pdfHeight);\n\n      // Get the quotation PDF as array buffer\n      const quotationPdfBytes = quotationPdf.output('arraybuffer');\n\n      // Create a new PDF document using pdf-lib\n      const mergedPdf = await PDFDocument.create();\n      \n      // Add the quotation PDF\n      const quotationPdfDoc = await PDFDocument.load(quotationPdfBytes);\n      const quotationPages = await mergedPdf.copyPages(quotationPdfDoc, quotationPdfDoc.getPageIndices());\n      quotationPages.forEach((page) => mergedPdf.addPage(page));\n\n      // Get products with catalog PDFs\n      const productsWithCatalogs = products.filter(p => p.product.cataloguePdf?.base64Data);\n      \n      if (productsWithCatalogs.length === 0) {\n        toast({\n          variant: 'destructive',\n          title: 'No Catalog PDFs',\n          description: 'None of the products in this quotation have catalog PDFs to merge.',\n        });\n        setIsGeneratingMerged(false);\n        return;\n      }\n\n      // Add catalog PDFs\n      for (const productItem of productsWithCatalogs) {\n        const catalogPdf = productItem.product.cataloguePdf;\n        if (catalogPdf?.base64Data) {\n          try {\n            // Convert base64 to array buffer\n            const base64Data = catalogPdf.base64Data;\n            const binaryString = atob(base64Data);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n              bytes[i] = binaryString.charCodeAt(i);\n            }\n\n            // Load the catalog PDF\n            const catalogPdfDoc = await PDFDocument.load(bytes);\n            \n            // Add a separator page with product name\n            const separatorPage = mergedPdf.addPage();\n            separatorPage.drawText(`Product Catalog: ${productItem.product.name}`, {\n              x: 50,\n              y: separatorPage.getHeight() - 100,\n              size: 20,\n            });\n            separatorPage.drawText(`Description: ${productItem.product.description}`, {\n              x: 50,\n              y: separatorPage.getHeight() - 140,\n              size: 12,\n            });\n            \n            // Copy and add catalog pages\n            const catalogPages = await mergedPdf.copyPages(catalogPdfDoc, catalogPdfDoc.getPageIndices());\n            catalogPages.forEach((page) => {\n              mergedPdf.addPage(page);\n            });\n          } catch (error) {\n            console.error(`Error processing catalog for ${productItem.product.name}:`, error);\n            console.error('Error details:', error);\n            toast({\n              variant: 'destructive',\n              title: 'PDF Processing Error',\n              description: `Could not process catalog for ${productItem.product.name}: ${error instanceof Error ? error.message : 'Unknown error'}`,\n            });\n          }\n        }\n      }\n\n      // Save the merged PDF\n      const mergedPdfBytes = await mergedPdf.save();\n      const blob = new Blob([mergedPdfBytes], { type: 'application/pdf' });\n      const url = URL.createObjectURL(blob);\n      \n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `Quotation-${quotation.quotationNumber}-with-catalogs.pdf`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      URL.revokeObjectURL(url);\n\n      toast({\n        title: 'Success',\n        description: `Merged PDF with ${productsWithCatalogs.length} catalog(s) downloaded successfully!`,\n      });\n\n    } catch (error) {\n      console.error('Error generating merged PDF:', error);\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: 'Failed to generate merged PDF with catalogs',\n      });\n    } finally {\n      setIsGeneratingMerged(false);\n    }\n  };\n\n  // Check products with catalog PDFs for button state\n  const catalogPdfCount = products.filter(p => p.product.cataloguePdf?.base64Data).length;\n\n  return (\n    <div ref={completePreviewRef}>\n      <div className=\"flex justify-end gap-2 mb-4\">\n        <Button onClick={handleDownload} variant=\"outline\" size=\"sm\">\n          <Download className=\"mr-2 h-4 w-4\" />\n          Quotation Only\n        </Button>\n        {catalogPdfCount > 0 && (\n          <>\n            <Button \n              onClick={handleDownloadCompletePreview} \n              disabled={isGeneratingMerged}\n              variant=\"outline\"\n              size=\"sm\"\n            >\n              <FileText className=\"mr-2 h-4 w-4\" />\n              {isGeneratingMerged ? 'Generating...' : 'Complete Preview'}\n            </Button>\n            <Button \n              onClick={handleDownloadWithCatalogs} \n              disabled={isGeneratingMerged}\n            >\n              <FileText className=\"mr-2 h-4 w-4\" />\n              {isGeneratingMerged ? 'Generating...' : `Merged PDFs (${catalogPdfCount})`}\n            </Button>\n          </>\n        )}\n      </div>\n      <div\n        ref={previewRef}\n        className=\"bg-white p-4 sm:p-8 rounded-lg shadow-lg max-w-4xl mx-auto border text-gray-900\"\n      >\n        <header className=\"flex flex-col sm:flex-row justify-between items-start pb-6 border-b-2 border-gray-800 gap-4\">\n          <div className=\"flex items-center gap-4\">\n            {quotation.logoUrl && (\n              <img\n                src={quotation.logoUrl}\n                alt={`${quotation.companyName} Logo`}\n                className=\"h-16 w-16 sm:h-20 sm:w-20 object-contain\"\n              />\n            )}\n            <div>\n              <h1 className=\"text-xl sm:text-3xl font-bold text-gray-900\">\n                {quotation.companyName}\n              </h1>\n              <p className=\"text-xs sm:text-sm text-gray-600 whitespace-pre-line\">\n                {quotation.companyAddress}\n              </p>\n              <p className=\"text-xs sm:text-sm text-gray-600\">GSTIN: {quotation.companyGst}</p>\n            </div>\n          </div>\n          <div className=\"text-left sm:text-right w-full sm:w-auto\">\n            <h2 className=\"text-2xl sm:text-4xl font-extrabold text-gray-800 uppercase tracking-wider\">\n              Quotation\n            </h2>\n            <p className=\"text-md sm:text-lg text-gray-600 mt-2\">\n              # {quotation.quotationNumber}\n            </p>\n          </div>\n        </header>\n\n        <section className=\"grid sm:grid-cols-2 gap-8 my-6 text-sm\">\n          <div>\n            <h3 className=\"text-xs font-semibold uppercase text-gray-500 tracking-wider mb-2\">\n              Billed To\n            </h3>\n            <p className=\"font-bold text-base text-gray-800\">{lead.name}</p>\n            <p className=\"text-gray-600\">{lead.company}</p>\n            <p className=\"text-gray-600 break-all\">{lead.email}</p>\n            <p className=\"text-gray-600\">{lead.phone}</p>\n          </div>\n          <div className=\"sm:text-right\">\n            <div className=\"grid grid-cols-2 sm:grid-cols-2\">\n              <p className=\"font-semibold text-gray-600\">Date:</p>\n              <p className=\"text-gray-800\">\n                {format(new Date(quotation.date), 'PPP')}\n              </p>\n            </div>\n            <div className=\"grid grid-cols-2 sm:grid-cols-2 mt-1\">\n              <p className=\"font-semibold text-gray-600\">Valid Until:</p>\n              <p className=\"text-gray-800\">\n                {format(new Date(quotation.validUntil), 'PPP')}\n              </p>\n            </div>\n            <div className=\"grid grid-cols-2 sm:grid-cols-2 mt-1\">\n              <p className=\"font-semibold text-gray-600\">Status:</p>\n              <p className=\"font-bold text-gray-800\">{quotation.status}</p>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"overflow-x-auto\">\n          <table className=\"w-full text-left text-sm\">\n            <thead className=\"bg-gray-800 text-white\">\n              <tr>\n                <th className=\"p-3 text-xs font-semibold uppercase tracking-wider\">\n                  Product / Service\n                </th>\n                <th className=\"p-3 text-xs font-semibold uppercase tracking-wider text-center\">\n                  Qty\n                </th>\n                <th className=\"p-3 text-xs font-semibold uppercase tracking-wider text-right\">\n                  Rate\n                </th>\n                <th className=\"p-3 text-xs font-semibold uppercase tracking-wider text-right\">\n                  Amount\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((p) => (\n                <tr key={p.productId} className=\"border-b\">\n                  <td className=\"p-3\">\n                    <p className=\"font-semibold text-gray-800\">\n                      {p.product.name}\n                    </p>\n                    <p className=\"text-xs text-gray-600\">\n                      {p.product.description}\n                    </p>\n                    <div className=\"flex items-center gap-2 mt-1\">\n                      {p.product.cataloguePdf?.base64Data && (\n                        <span className=\"text-xs text-green-600 flex items-center gap-1\">\n                          <FileText className=\"h-3 w-3\" />\n                          Catalog PDF Available\n                        </span>\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"p-3 text-center text-gray-700\">\n                    {p.quantity}\n                  </td>\n                  <td className=\"p-3 text-right text-gray-700\">\n                    {formatCurrency(p.rate)}\n                  </td>\n                  <td className=\"p-3 text-right text-gray-800 font-semibold\">\n                    {formatCurrency(p.amount)}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </section>\n\n        <section className=\"flex justify-end mt-6\">\n          <div className=\"w-full max-w-xs space-y-2 text-sm\">\n            <div className=\"flex justify-between text-gray-700\">\n              <span>Sub-total</span>\n              <span>{formatCurrency(quotation.subTotal)}</span>\n            </div>\n            <div className=\"flex justify-between text-gray-700\">\n              <span>Total GST</span>\n              <span>{formatCurrency(quotation.totalGst)}</span>\n            </div>\n            <Separator className=\"bg-gray-800\" />\n            <div className=\"flex justify-between text-lg font-bold text-gray-900\">\n              <span>Grand Total</span>\n              <span>{formatCurrency(quotation.grandTotal)}</span>\n            </div>\n          </div>\n        </section>\n        \n        <footer className=\"mt-8 pt-6 border-t\">\n          <h4 className=\"text-sm font-semibold uppercase text-gray-500 tracking-wider mb-2\">\n            Terms & Conditions\n          </h4>\n          <p className=\"text-xs text-gray-600 whitespace-pre-wrap\">\n            {quotation.termsAndConditions}\n          </p>\n        </footer>\n      </div>\n\n      {/* Product Catalogs Section */}\n      {products.filter(p => p.product.cataloguePdf?.base64Data).length > 0 && (\n        <div className=\"mt-8 space-y-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Product Catalogs</h2>\n            <p className=\"text-gray-600\">Detailed specifications for the products in this quotation</p>\n          </div>\n          \n          {products\n            .filter(p => p.product.cataloguePdf?.base64Data)\n            .map((productItem, index) => (\n              <div key={productItem.productId} className=\"bg-white rounded-lg shadow-lg border\">\n                {/* Product Header */}\n                <div className=\"bg-gray-50 px-6 py-4 border-b\">\n                  <h3 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\n                    <FileText className=\"h-5 w-5 text-blue-600\" />\n                    {productItem.product.name} - Catalog\n                  </h3>\n                  <p className=\"text-gray-600 mt-1\">{productItem.product.description}</p>\n                  <div className=\"flex items-center gap-4 mt-2 text-sm text-gray-500\">\n                    <span>Quantity: {productItem.quantity}</span>\n                    <span>Rate: {formatCurrency(productItem.rate)}</span>\n                    <span>Total: {formatCurrency(productItem.amount)}</span>\n                  </div>\n                </div>\n                \n                {/* PDF Viewer */}\n                <div className=\"p-4\">\n                  <div className=\"w-full h-96 border rounded\">\n                    <iframe\n                      src={productItem.product.cataloguePdf!.url}\n                      className=\"w-full h-full rounded\"\n                      title={`${productItem.product.name} Catalog`}\n                    />\n                  </div>\n                  <div className=\"mt-2 text-center\">\n                    <p className=\"text-xs text-gray-500\">\n                      {productItem.product.cataloguePdf!.fileName}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}