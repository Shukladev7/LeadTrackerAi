{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/data/index.ts"],"sourcesContent":["\n// Firestore-based data service - replaces JSON file operations\n// Original JSON-based service backed up as index-json-backup.ts\n\nexport * from '../firestore-data-service';\n\nexport const getLeads = async (query?: string, status?: string): Promise<Lead[]> => {\n  let leads = await readData<Lead>('leads.json');\n  \n  if (query) {\n    const lowercasedQuery = query.toLowerCase();\n    leads = leads.filter(\n      lead =>\n        lead.name.toLowerCase().includes(lowercasedQuery) ||\n        lead.company.toLowerCase().includes(lowercasedQuery)\n    );\n  }\n\n  if (status) {\n    leads = leads.filter(lead => lead.status === status);\n  }\n  \n  return leads.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getLeadById = async (id: string): Promise<Lead | undefined> => {\n    const leads = await getLeads();\n    const lead = leads.find(lead => lead.id === id);\n    if (!lead) return undefined;\n    \n    return {\n      ...lead,\n      activities: lead.activities.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    };\n};\n\nexport const getRecentActivities = async (limit: number): Promise<{ lead: Lead; activity: Activity }[]> => {\n    const leads = await getLeads();\n    const allActivities = leads.flatMap(lead => \n        lead.activities.map(activity => ({ lead, activity }))\n    );\n    return allActivities\n        .sort((a, b) => new Date(b.activity.date).getTime() - new Date(a.activity.date).getTime())\n        .slice(0, limit);\n}\n\nexport const getProducts = async (): Promise<Product[]> => {\n  return await readData<Product>('products.json');\n}\n\nexport const getLeadSources = async (): Promise<LeadSource[]> => {\n    return await readData<LeadSource>('lead-sources.json');\n}\n\nexport const addProduct = async (productData: NewProduct): Promise<Product> => {\n  const products = await getProducts();\n  const newProduct: Product = {\n    ...productData,\n    id: `prod-${Date.now()}`,\n  };\n  products.unshift(newProduct);\n  await writeData<Product>('products.json', products);\n  return newProduct;\n};\n\nexport const updateProduct = async (id: string, productData: NewProduct): Promise<Product> => {\n    const products = await getProducts();\n    const productIndex = products.findIndex(p => p.id === id);\n    if (productIndex === -1) {\n        throw new Error('Product not found');\n    }\n    const updatedProduct = { ...products[productIndex], ...productData };\n    products[productIndex] = updatedProduct;\n    await writeData<Product>('products.json', products);\n    return updatedProduct;\n};\n\nexport const deleteProduct = async (id: string): Promise<{ success: boolean }> => {\n    let products = await getProducts();\n    const initialLength = products.length;\n    products = products.filter(p => p.id !== id);\n    if (products.length === initialLength) {\n        throw new Error('Product not found for deletion');\n    }\n    await writeData<Product>('products.json', products);\n    return { success: true };\n};\n\n\nexport const addLeadSource = async (name: string): Promise<LeadSource> => {\n    const leadSources = await getLeadSources();\n    const newSource: LeadSource = {\n        id: `source-${Date.now()}`,\n        name,\n    };\n    leadSources.unshift(newSource);\n    await writeData<LeadSource>('lead-sources.json', leadSources);\n    return newSource;\n};\n\nexport const deleteLeadSource = async (id: string): Promise<{ success: boolean }> => {\n    let leadSources = await getLeadSources();\n    const initialLength = leadSources.length;\n    leadSources = leadSources.filter(source => source.id !== id);\n    await writeData<LeadSource>('lead-sources.json', leadSources);\n    return { success: leadSources.length < initialLength };\n};\n\nexport const addLead = async (leadData: Omit<Lead, 'id' | 'createdAt' | 'activities'> & { notes?: string }): Promise<Lead> => {\n  const leads = await getLeads();\n  const newId = `lead-${Date.now()}`;\n  \n  const initialActivity: Activity[] = [];\n  if (leadData.notes) {\n    initialActivity.push({\n      id: `act-${newId}-1`,\n      date: new Date().toISOString(),\n      type: 'Email', \n      notes: `Lead created in the system. Initial notes: ${leadData.notes}`,\n    });\n  }\n\n  const { notes, ...restOfLeadData } = leadData;\n\n  const newLead: Lead = {\n    ...restOfLeadData,\n    id: newId,\n    createdAt: new Date().toISOString(),\n    activities: initialActivity,\n  };\n  leads.unshift(newLead);\n  await writeData<Lead>('leads.json', leads);\n  return newLead;\n};\n\nexport const addActivityToLead = async (leadId: string, activityData: Omit<Activity, 'id' | 'date'>): Promise<Activity> => {\n  const leads = await getLeads();\n  const leadIndex = leads.findIndex(l => l.id === leadId);\n  if (leadIndex === -1) {\n    throw new Error('Lead not found');\n  }\n\n  const lead = leads[leadIndex];\n  const newActivity: Activity = {\n    ...activityData,\n    id: `act-${leadId}-${lead.activities.length + 1}`,\n    date: new Date().toISOString(),\n  };\n  lead.activities.unshift(newActivity);\n  \n  await writeData<Lead>('leads.json', leads);\n  return newActivity;\n};\n\nexport const updateLeadStatus = async (leadId: string, status: Lead['status']): Promise<Lead> => {\n  const leads = await getLeads();\n  const leadIndex = leads.findIndex(l => l.id === leadId);\n  if (leadIndex === -1) {\n    throw new Error('Lead not found');\n  }\n\n  leads[leadIndex].status = status;\n  await writeData<Lead>('leads.json', leads);\n  return leads[leadIndex];\n};\n\nexport const updateLead = async (leadId: string, leadData: UpdatableLeadData): Promise<Lead> => {\n    const leads = await getLeads();\n    const leadIndex = leads.findIndex(l => l.id === leadId);\n    if (leadIndex === -1) {\n      throw new Error('Lead not found');\n    }\n  \n    const originalLead = leads[leadIndex];\n    const updatedLead: Lead = {\n      ...originalLead,\n      ...leadData,\n    };\n  \n    leads[leadIndex] = updatedLead;\n    await writeData<Lead>('leads.json', leads);\n    return updatedLead;\n};\n\n// Quotation specific functions\nexport const getQuotations = async (): Promise<Quotation[]> => {\n    const quotations = await readData<Quotation>('quotations.json');\n    return quotations.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getQuotationById = async (id: string): Promise<Quotation | undefined> => {\n    const quotations = await getQuotations();\n    return quotations.find(q => q.id === id);\n};\n\nexport const addQuotation = async (quotationData: Omit<Quotation, 'id' | 'createdAt' | 'quotationNumber'>): Promise<Quotation> => {\n    const quotations = await getQuotations();\n    const newQuotationNumber = `QUO-${String(quotations.length + 1).padStart(4, '0')}`;\n    const newQuotation: Quotation = {\n        ...quotationData,\n        id: `quo-${Date.now()}`,\n        quotationNumber: newQuotationNumber,\n        createdAt: new Date().toISOString(),\n    };\n    quotations.unshift(newQuotation);\n    await writeData<Quotation>('quotations.json', quotations);\n    return newQuotation;\n};\n\nexport const getQuotationTemplates = async (): Promise<QuotationTemplate[]> => {\n    return await readData<QuotationTemplate>('quotation-templates.json');\n};\n\nexport const getQuotationTemplateById = async (id: string): Promise<QuotationTemplate | undefined> => {\n    const templates = await getQuotationTemplates();\n    return templates.find(t => t.id === id);\n};\n\nexport const addQuotationTemplate = async (templateData: Omit<QuotationTemplate, 'id'>): Promise<QuotationTemplate> => {\n    const templates = await getQuotationTemplates();\n    const newTemplate: QuotationTemplate = {\n        ...templateData,\n        id: `template-${Date.now()}`,\n    };\n    templates.unshift(newTemplate);\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return newTemplate;\n};\n\nexport const updateQuotationTemplate = async (id: string, templateData: QuotationTemplate): Promise<QuotationTemplate> => {\n    const templates = await getQuotationTemplates();\n    const templateIndex = templates.findIndex(t => t.id === id);\n    if (templateIndex === -1) {\n        throw new Error('Template not found');\n    }\n    templates[templateIndex] = { ...templates[templateIndex], ...templateData };\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return templates[templateIndex];\n}\n\nexport const deleteQuotationTemplate = async (id: string): Promise<{ success: boolean }> => {\n    let templates = await getQuotationTemplates();\n    const initialLength = templates.length;\n    templates = templates.filter(t => t.id !== id);\n    if (templates.length === initialLength) {\n        throw new Error('Template not found for deletion');\n    }\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return { success: true };\n}\n\n\n// Employee specific functions\nexport const getEmployees = async (): Promise<Employee[]> => {\n    const employees = await readData<Employee>('employees.json');\n    return employees.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getEmployeeById = async (id: string): Promise<Employee | undefined> => {\n    const employees = await getEmployees();\n    return employees.find(employee => employee.id === id);\n};\n\nexport const addEmployee = async (employeeData: NewEmployee): Promise<Employee> => {\n    const employees = await getEmployees();\n    const newEmployee: Employee = {\n        ...employeeData,\n        id: `emp-${Date.now()}`,\n        createdAt: new Date().toISOString(),\n    };\n    employees.unshift(newEmployee);\n    await writeData<Employee>('employees.json', employees);\n    return newEmployee;\n};\n\nexport const getEmployeeRoles = async (): Promise<EmployeeRoleData[]> => {\n    return await readData<EmployeeRoleData>('employee-roles.json');\n}\n\nexport const addEmployeeRole = async (name: string): Promise<EmployeeRoleData> => {\n    const roles = await getEmployeeRoles();\n    const newRole: EmployeeRoleData = {\n        id: `role-${Date.now()}`,\n        name,\n    };\n    roles.push(newRole);\n    await writeData<EmployeeRoleData>('employee-roles.json', roles);\n    return newRole;\n}\n\nexport const deleteEmployeeRole = async (id: string): Promise<{ success: boolean }> => {\n    let roles = await getEmployeeRoles();\n    const initialLength = roles.length;\n    roles = roles.filter(role => role.id !== id);\n    await writeData<EmployeeRoleData>('employee-roles.json', roles);\n    return { success: roles.length < initialLength };\n}\n\nexport const getDepartments = async (): Promise<Department[]> => {\n    return await readData<Department>('departments.json');\n}\n\nexport const addDepartment = async (name: string): Promise<Department> => {\n    const departments = await getDepartments();\n    const newDepartment: Department = {\n        id: `dept-${Date.now()}`,\n        name,\n    };\n    departments.push(newDepartment);\n    await writeData<Department>('departments.json', departments);\n    return newDepartment;\n}\n\nexport const deleteDepartment = async (id: string): Promise<{ success: boolean }> => {\n    let departments = await getDepartments();\n    const initialLength = departments.length;\n    departments = departments.filter(dept => dept.id !== id);\n    await writeData<Department>('departments.json', departments);\n    return { success: departments.length < initialLength };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/dashboard-chart.tsx"],"sourcesContent":["'use client';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Cell,\n} from 'recharts';\n\nconst statusColors: { [key: string]: string } = {\n  New: 'hsl(var(--chart-1))',\n  'In Discussion': 'hsl(var(--chart-2))',\n  Negotiation: 'hsl(var(--chart-3))',\n  'Closed - Won': 'hsl(var(--chart-4))',\n  'Closed - Lost': 'hsl(var(--chart-5))',\n};\n\ntype ChartData = {\n    name: string;\n    value: number;\n}\n\nconst statusToColor = (status: string) => {\n    if (status === 'Discussion') return statusColors['In Discussion'];\n    if (status === 'Won') return statusColors['Closed - Won'];\n    if (status === 'Lost') return statusColors['Closed - Lost'];\n    return statusColors[status] || '#8884d8';\n  };\n\nexport default function DashboardChart({ data }: { data: ChartData[] }) {\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis\n          dataKey=\"name\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        />\n        <YAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) => `${value}`}\n        />\n        <Tooltip\n          cursor={{ fill: 'hsl(var(--muted))' }}\n          contentStyle={{\n            backgroundColor: 'hsl(var(--background))',\n            border: '1px solid hsl(var(--border))',\n          }}\n        />\n        <Bar dataKey=\"value\" radius={[4, 4, 0, 0]}>\n          {data.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={statusToColor(entry.name)}\n            />\n          ))}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAaA,MAAM,eAA0C;IAC9C,KAAK;IACL,iBAAiB;IACjB,aAAa;IACb,gBAAgB;IAChB,iBAAiB;AACnB;AAOA,MAAM,gBAAgB,CAAC;IACnB,IAAI,WAAW,cAAc,OAAO,YAAY,CAAC,gBAAgB;IACjE,IAAI,WAAW,OAAO,OAAO,YAAY,CAAC,eAAe;IACzD,IAAI,WAAW,QAAQ,OAAO,YAAY,CAAC,gBAAgB;IAC3D,OAAO,YAAY,CAAC,OAAO,IAAI;AACjC;AAEa,SAAS,eAAe,EAAE,IAAI,EAAyB;IACpE,qBACE,6LAAC,sKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;YAAC,MAAM;;8BACd,6LAAC,gKAAA,CAAA,gBAAa;oBAAC,iBAAgB;oBAAM,UAAU;;;;;;8BAC/C,6LAAC,wJAAA,CAAA,QAAK;oBACJ,SAAQ;oBACR,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;;;;;;8BAEZ,6LAAC,wJAAA,CAAA,QAAK;oBACJ,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,eAAe,CAAC,QAAU,GAAG,OAAO;;;;;;8BAEtC,6LAAC,0JAAA,CAAA,UAAO;oBACN,QAAQ;wBAAE,MAAM;oBAAoB;oBACpC,cAAc;wBACZ,iBAAiB;wBACjB,QAAQ;oBACV;;;;;;8BAEF,6LAAC,sJAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAQ,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;8BACtC,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,6LAAC,uJAAA,CAAA,OAAI;4BAEH,MAAM,cAAc,MAAM,IAAI;2BADzB,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;AAQlC;KArCwB","debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/product-demand-chart.tsx"],"sourcesContent":["'use client';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\ntype ChartData = {\n    name: string;\n    count: number;\n}\n\nexport default function ProductDemandChart({ data }: { data: ChartData[] }) {\n  if (data.length === 0) {\n    return (\n        <div className=\"text-center text-muted-foreground py-10\">\n            No product data available to display.\n        </div>\n    );\n  }\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis\n          dataKey=\"name\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          angle={-45}\n          textAnchor=\"end\"\n          height={60}\n        />\n        <YAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) => `${value}`}\n          allowDecimals={false}\n        />\n        <Tooltip\n          cursor={{ fill: 'hsl(var(--muted))' }}\n          contentStyle={{\n            backgroundColor: 'hsl(var(--background))',\n            border: '1px solid hsl(var(--border))',\n          }}\n        />\n        <Bar dataKey=\"count\" fill=\"hsl(var(--primary))\" radius={[4, 4, 0, 0]} />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAiBe,SAAS,mBAAmB,EAAE,IAAI,EAAyB;IACxE,IAAI,KAAK,MAAM,KAAK,GAAG;QACrB,qBACI,6LAAC;YAAI,WAAU;sBAA0C;;;;;;IAI/D;IACA,qBACE,6LAAC,sKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;YAAC,MAAM;;8BACd,6LAAC,gKAAA,CAAA,gBAAa;oBAAC,iBAAgB;oBAAM,UAAU;;;;;;8BAC/C,6LAAC,wJAAA,CAAA,QAAK;oBACJ,SAAQ;oBACR,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,OAAO,CAAC;oBACR,YAAW;oBACX,QAAQ;;;;;;8BAEV,6LAAC,wJAAA,CAAA,QAAK;oBACJ,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,eAAe,CAAC,QAAU,GAAG,OAAO;oBACpC,eAAe;;;;;;8BAEjB,6LAAC,0JAAA,CAAA,UAAO;oBACN,QAAQ;wBAAE,MAAM;oBAAoB;oBACpC,cAAc;wBACZ,iBAAiB;wBACjB,QAAQ;oBACV;;;;;;8BAEF,6LAAC,sJAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAQ,MAAK;oBAAsB,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;;;;;;;;;;;;;;;;;AAI5E;KAzCwB","debugId":null}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/average-conversion-time-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport {\n  RadialBarChart,\n  RadialBar,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from 'recharts';\n\nexport default function AverageConversionTimeChart({ timeInDays }: { timeInDays: number }) {\n  const data = [{ name: 'Conversion Time', value: timeInDays }];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={150}>\n      <RadialBarChart\n        innerRadius=\"80%\"\n        outerRadius=\"100%\"\n        barSize={10}\n        data={data}\n        startAngle={90}\n        endAngle={-270}\n      >\n        <PolarAngleAxis\n          type=\"number\"\n          domain={[0, Math.max(timeInDays, 30)]} // Ensure a reasonable max value\n          angleAxisId={0}\n          tick={false}\n        />\n        <RadialBar\n          background\n          dataKey=\"value\"\n          cornerRadius={10}\n          fill=\"hsl(var(--primary))\"\n        />\n        <text\n          x=\"50%\"\n          y=\"50%\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          className=\"fill-foreground text-3xl font-bold\"\n        >\n          {timeInDays}\n        </text>\n        <text\n          x=\"50%\"\n          y=\"65%\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          className=\"fill-muted-foreground text-sm\"\n        >\n          Days\n        </text>\n      </RadialBarChart>\n    </ResponsiveContainer>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAAA;AAAA;AAAA;AAFA;;;AASe,SAAS,2BAA2B,EAAE,UAAU,EAA0B;IACvF,MAAM,OAAO;QAAC;YAAE,MAAM;YAAmB,OAAO;QAAW;KAAE;IAE7D,qBACE,6LAAC,sKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,6LAAC,6JAAA,CAAA,iBAAc;YACb,aAAY;YACZ,aAAY;YACZ,SAAS;YACT,MAAM;YACN,YAAY;YACZ,UAAU,CAAC;;8BAEX,6LAAC,6JAAA,CAAA,iBAAc;oBACb,MAAK;oBACL,QAAQ;wBAAC;wBAAG,KAAK,GAAG,CAAC,YAAY;qBAAI;oBACrC,aAAa;oBACb,MAAM;;;;;;8BAER,6LAAC,wJAAA,CAAA,YAAS;oBACR,UAAU;oBACV,SAAQ;oBACR,cAAc;oBACd,MAAK;;;;;;8BAEP,6LAAC;oBACC,GAAE;oBACF,GAAE;oBACF,YAAW;oBACX,kBAAiB;oBACjB,WAAU;8BAET;;;;;;8BAEH,6LAAC;oBACC,GAAE;oBACF,GAAE;oBACF,YAAW;oBACX,kBAAiB;oBACjB,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;KA9CwB","debugId":null}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/quotations-by-month-chart.tsx"],"sourcesContent":["\n'use client';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\ntype ChartData = {\n  month: string;\n  count: number;\n}\n\nexport default function QuotationsByMonthChart({ data }: { data: ChartData[] }) {\n  if (data.length === 0) {\n    return (\n        <div className=\"text-center text-muted-foreground py-10\">\n            No quotation data available for the last 12 months.\n        </div>\n    );\n  }\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis\n          dataKey=\"month\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        />\n        <YAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) => `${value}`}\n          allowDecimals={false}\n        />\n        <Tooltip\n          cursor={{ fill: 'hsl(var(--muted))' }}\n          contentStyle={{\n            backgroundColor: 'hsl(var(--background))',\n            border: '1px solid hsl(var(--border))',\n          }}\n        />\n        <Bar dataKey=\"count\" fill=\"hsl(var(--primary))\" radius={[4, 4, 0, 0]} />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAiBe,SAAS,uBAAuB,EAAE,IAAI,EAAyB;IAC5E,IAAI,KAAK,MAAM,KAAK,GAAG;QACrB,qBACI,6LAAC;YAAI,WAAU;sBAA0C;;;;;;IAI/D;IACA,qBACE,6LAAC,sKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;YAAC,MAAM;;8BACd,6LAAC,gKAAA,CAAA,gBAAa;oBAAC,iBAAgB;oBAAM,UAAU;;;;;;8BAC/C,6LAAC,wJAAA,CAAA,QAAK;oBACJ,SAAQ;oBACR,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;;;;;;8BAEZ,6LAAC,wJAAA,CAAA,QAAK;oBACJ,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,eAAe,CAAC,QAAU,GAAG,OAAO;oBACpC,eAAe;;;;;;8BAEjB,6LAAC,0JAAA,CAAA,UAAO;oBACN,QAAQ;wBAAE,MAAM;oBAAoB;oBACpC,cAAc;wBACZ,iBAAiB;wBACjB,QAAQ;oBACV;;;;;;8BAEF,6LAAC,sJAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAQ,MAAK;oBAAsB,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;;;;;;;;;;;;;;;;;AAI5E;KAtCwB","debugId":null}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/page.tsx"],"sourcesContent":["\n'use client';\nimport * as React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { getLeads, getRecentActivities, getProducts, getQuotations } from \"@/lib/data\";\nimport {\n  Users,\n  Briefcase,\n  Handshake,\n  User,\n  Package,\n} from \"lucide-react\";\nimport { format, parseISO, differenceInDays, subMonths } from \"date-fns\";\nimport DashboardChart from \"./dashboard-chart\";\nimport { Lead, Activity, Product, LeadStatus } from '@/lib/types';\nimport ProductDemandChart from './product-demand-chart';\nimport AverageConversionTimeChart from './average-conversion-time-chart';\nimport QuotationsByMonthChart from './quotations-by-month-chart';\n\n\n// We can't render the time on the server, as it may be in a different timezone than the client.\n// Instead, we can render it on the client after the initial render.\nfunction ClientTime({ date }: { date: string }) {\n  const [time, setTime] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    setTime(format(parseISO(date), \"p\"));\n  }, [date]);\n\n  if (!time) {\n    return null;\n  }\n  return (\n    <Badge variant=\"outline\" className=\"ml-auto shrink-0\">\n      {time}\n    </Badge>\n  );\n}\n\ntype ProductDemandData = {\n    name: string;\n    count: number;\n}\n\ntype QuotationsByMonthData = {\n    month: string;\n    count: number;\n}\n\ntype DashboardData = {\n    leads: Lead[];\n    recentActivities: { lead: Lead; activity: Activity }[];\n    productDemand: ProductDemandData[];\n    averageConversionTime: number;\n    quotationsByMonth: QuotationsByMonthData[];\n};\n\nfunction getConversionDate(lead: Lead): Date | null {\n    if (lead.status !== 'Closed - Won') return null;\n    \n    // Find the activity where status was changed to 'Closed - Won'\n    const statusChangeActivity = lead.activities.find(a => \n      a.notes.includes(\"Status changed from\") && a.notes.includes(`to \"${'Closed - Won'}\"`)\n    );\n\n    if (statusChangeActivity) {\n      return parseISO(statusChangeActivity.date);\n    }\n    \n    // Fallback: use the date of the last activity if no explicit status change is found\n    if (lead.activities.length > 0) {\n        // Activities are sorted by date descending, so the first one is the latest\n        return parseISO(lead.activities[0].date);\n    }\n    \n    return null;\n}\n\nfunction Dashboard({ data }: { data: DashboardData }) {\n    const { leads, recentActivities, productDemand, averageConversionTime, quotationsByMonth } = data;\n    const stats = {\n        total: leads.length,\n        new: leads.filter((l) => l.status === \"New\").length,\n        inDiscussion: leads.filter((l) => l.status === \"In Discussion\").length,\n        negotiation: leads.filter((l) => l.status === \"Negotiation\").length,\n        closedWon: leads.filter((l) => l.status === \"Closed - Won\").length,\n        closedLost: leads.filter((l) => l.status === \"Closed - Lost\").length,\n    };\n    \n    const chartData = [\n        { name: \"New\", value: stats.new },\n        { name: \"Discussion\", value: stats.inDiscussion },\n        { name: \"Negotiation\", value: stats.negotiation },\n        { name: \"Won\", value: stats.closedWon },\n        { name: \"Lost\", value: stats.closedLost },\n    ];\n    \n  return (\n    <>\n      <div className=\"flex items-center justify-between space-y-2\">\n        <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n      </div>\n      <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Leads</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.total}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              All leads in the system\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">In Discussion</CardTitle>\n            <Briefcase className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.inDiscussion}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Leads currently in discussion\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">In Negotiation</CardTitle>\n            <Handshake className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{stats.negotiation}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Leads in negotiation phase\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-7\">\n        <Card className=\"xl:col-span-4\">\n          <CardHeader>\n            <CardTitle>Leads Overview</CardTitle>\n            <CardDescription>A summary of leads by current status.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"pl-2\">\n            <DashboardChart data={chartData} />\n          </CardContent>\n        </Card>\n        <div className=\"xl:col-span-3 grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-1 gap-4\">\n            <Card className=\"sm:col-span-1 xl:col-span-1\">\n                <CardHeader>\n                    <CardTitle>Average Conversion Time</CardTitle>\n                    <CardDescription>\n                    Average time from lead creation to closing a deal.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent className=\"flex items-center justify-center\">\n                   <AverageConversionTimeChart timeInDays={averageConversionTime} />\n                </CardContent>\n            </Card>\n            <Card className=\"sm:col-span-2 xl:col-span-1\">\n            <CardHeader>\n                <CardTitle>Recent Activities</CardTitle>\n                <CardDescription>\n                A log of the most recent interactions with leads.\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                <div className=\"space-y-4\">\n                {recentActivities.map(({ lead, activity }) => (\n                    <div key={activity.id} className=\"flex items-start gap-4\">\n                    <div className=\"flex h-9 w-9 items-center justify-center rounded-full bg-muted text-muted-foreground border shrink-0\">\n                        <User className=\"h-5 w-5\" />\n                    </div>\n                    <div className=\"grid gap-1 text-sm\">\n                        <div className=\"font-medium\">\n                        {lead.name}\n                        <span className=\"font-normal text-muted-foreground\"> from {lead.company}</span>\n                        </div>\n                        <p className=\"text-muted-foreground\">{activity.type}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                        {format(parseISO(activity.date), \"PPP\")}\n                        </p>\n                    </div>\n                    <ClientTime date={activity.date} />\n                    </div>\n                ))}\n                </div>\n            </CardContent>\n            </Card>\n        </div>\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n            <CardHeader>\n              <CardTitle>Quotations Sent by Month</CardTitle>\n              <CardDescription>\n                Number of quotations created over the last 12 months.\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <QuotationsByMonthChart data={quotationsByMonth} />\n            </CardContent>\n          </Card>\n        <Card>\n            <CardHeader>\n              <CardTitle>Product Demand</CardTitle>\n              <CardDescription>\n                Number of leads interested in each product.\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ProductDemandChart data={productDemand} />\n            </CardContent>\n          </Card>\n      </div>\n    </>\n  );\n}\n\n\nexport default function DashboardPage() {\n    const [data, setData] = React.useState<DashboardData | null>(null);\n\n    React.useEffect(() => {\n      async function fetchData() {\n        const [leads, recentActivities, allProducts, quotations] = await Promise.all([\n          getLeads(),\n          getRecentActivities(5),\n          getProducts(),\n          getQuotations(),\n        ]);\n        \n        let productDemand: ProductDemandData[] = [];\n        if (leads.length > 0 && allProducts.length > 0) {\n            const productCounts = new Map<string, number>();\n            leads.forEach(lead => {\n                if(lead.products) {\n                    lead.products.forEach(p => {\n                        productCounts.set(p.productId, (productCounts.get(p.productId) || 0) + 1);\n                    });\n                }\n            });\n\n            productDemand = Array.from(productCounts.entries()).map(([productId, count]) => {\n                const product = allProducts.find(p => p.id === productId);\n                return {\n                    name: product ? product.name : 'Unknown Product',\n                    count: count\n                };\n            }).sort((a, b) => b.count - a.count);\n        }\n\n        const wonLeads = leads.filter(lead => lead.status === 'Closed - Won');\n        let totalConversionDays = 0;\n        let convertedCount = 0;\n\n        wonLeads.forEach(lead => {\n            const creationDate = parseISO(lead.createdAt);\n            const conversionDate = getConversionDate(lead);\n\n            if(conversionDate) {\n                totalConversionDays += differenceInDays(conversionDate, creationDate);\n                convertedCount++;\n            }\n        });\n        \n        const averageConversionTime = convertedCount > 0 ? Math.round(totalConversionDays / convertedCount) : 0;\n\n        const twelveMonthsAgo = subMonths(new Date(), 11);\n        const monthlyCounts: { [key: string]: number } = {};\n\n        // Initialize last 12 months\n        for (let i = 0; i < 12; i++) {\n            const monthKey = format(subMonths(new Date(), i), 'MMM yyyy');\n            monthlyCounts[monthKey] = 0;\n        }\n\n        quotations.forEach(q => {\n            const qDate = parseISO(q.createdAt);\n            if (qDate >= twelveMonthsAgo) {\n                const monthKey = format(qDate, 'MMM yyyy');\n                if (monthlyCounts.hasOwnProperty(monthKey)) {\n                    monthlyCounts[monthKey]++;\n                }\n            }\n        });\n\n        const quotationsByMonth = Object.entries(monthlyCounts)\n            .map(([month, count]) => ({ month, count }))\n            .sort((a, b) => parseISO(format(new Date(a.month), 'yyyy-MM-dd')).getTime() - parseISO(format(new Date(b.month), 'yyyy-MM-dd')).getTime());\n\n        \n        setData({ leads, recentActivities, productDemand, averageConversionTime, quotationsByMonth });\n      }\n      fetchData();\n    }, []);\n\n    if (!data) {\n        return (\n            <div className=\"flex-1 space-y-4 pt-6\">\n                <div className=\"flex items-center justify-between space-y-2\">\n                    <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n                </div>\n                <div className=\"text-center text-muted-foreground py-10\">\n                    Loading dashboard...\n                </div>\n            </div>\n        );\n    }\n  \n    return <Dashboard data={data} />;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}