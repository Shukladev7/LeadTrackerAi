{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/firebase.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, connectFirestoreEmulator } from \"firebase/firestore\";\nimport { getAuth, connectAuthEmulator } from \"firebase/auth\";\nimport { getStorage, connectStorageEmulator } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCjA4ek_FRNB61JM7xrYAT3s1eoL94qhnE\",\n  authDomain: \"studio-5063047183-aa053.firebaseapp.com\",\n  projectId: \"studio-5063047183-aa053\",\n  storageBucket: \"studio-5063047183-aa053.firebasestorage.app\",\n  messagingSenderId: \"311176415853\",\n  appId: \"1:311176415853:web:52798531c528415cf94d64\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase services\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\nexport const storage = getStorage(app);\n\n// Connect to emulators in development (optional)\nif (process.env.NODE_ENV === 'development' && typeof window !== 'undefined') {\n  // Only connect to emulators if they haven't been connected already\n  try {\n    // Uncomment these lines if you want to use Firebase emulators in development\n    // connectFirestoreEmulator(db, 'localhost', 8080);\n    // connectAuthEmulator(auth, 'http://localhost:9099');\n    // Note: Storage emulator not needed for Base64 storage approach\n  } catch (error) {\n    console.log('Emulators already connected or not available');\n  }\n}\n\nexport default app;\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;AACvD;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAGnB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;AAElC,iDAAiD;AACjD,uCAA6E;;AAU7E;uCAEe","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/firestore-service.ts"],"sourcesContent":["import {\n  collection,\n  doc,\n  addDoc,\n  getDoc,\n  getDocs,\n  updateDoc,\n  deleteDoc,\n  setDoc,\n  query,\n  where,\n  orderBy,\n  limit,\n  startAfter,\n  onSnapshot,\n  writeBatch,\n  runTransaction,\n  serverTimestamp,\n  Timestamp,\n  DocumentReference,\n  Query,\n  QuerySnapshot,\n  DocumentSnapshot,\n  Unsubscribe,\n  WhereFilterOp\n} from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { FirestoreDocument, QueryOptions, PaginationResult } from \"./firestore-types\";\n\n/**\n * Generic Firestore service class for CRUD operations\n */\nexport class FirestoreService<T extends FirestoreDocument> {\n  private collectionName: string;\n\n  constructor(collectionName: string) {\n    this.collectionName = collectionName;\n  }\n\n  /**\n   * Create a new document\n   */\n  async create(data: Omit<T, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n    try {\n      const docData = {\n        ...data,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      };\n      \n      const docRef = await addDoc(collection(db, this.collectionName), docData);\n      return docRef.id;\n    } catch (error) {\n      console.error(`Error creating document in ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create a document with a specific ID\n   */\n  async createWithId(id: string, data: Omit<T, 'id' | 'createdAt' | 'updatedAt'>): Promise<void> {\n    try {\n      const docData = {\n        ...data,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      };\n      \n      const docRef = doc(db, this.collectionName, id);\n      await setDoc(docRef, docData);\n    } catch (error) {\n      console.error(`Error creating document with ID ${id} in ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get a document by ID\n   */\n  async getById(id: string): Promise<T | null> {\n    try {\n      const docRef = doc(db, this.collectionName, id);\n      const docSnap = await getDoc(docRef);\n      \n      if (docSnap.exists()) {\n        return {\n          id: docSnap.id,\n          ...docSnap.data(),\n        } as T;\n      }\n      \n      return null;\n    } catch (error) {\n      console.error(`Error getting document ${id} from ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get all documents\n   */\n  async getAll(): Promise<T[]> {\n    try {\n      const querySnapshot = await getDocs(collection(db, this.collectionName));\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      })) as T[];\n    } catch (error) {\n      console.error(`Error getting all documents from ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get documents with query options\n   */\n  async getWithQuery(options: QueryOptions = {}): Promise<T[]> {\n    try {\n      let q = collection(db, this.collectionName) as Query;\n\n      // Apply where conditions\n      if (options.where) {\n        options.where.forEach(condition => {\n          q = query(q, where(condition.field, condition.operator as WhereFilterOp, condition.value));\n        });\n      }\n\n      // Apply ordering\n      if (options.orderBy) {\n        q = query(q, orderBy(options.orderBy.field, options.orderBy.direction));\n      }\n\n      // Apply limit\n      if (options.limit) {\n        q = query(q, limit(options.limit));\n      }\n\n      // Apply pagination\n      if (options.startAfter) {\n        q = query(q, startAfter(options.startAfter));\n      }\n\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      })) as T[];\n    } catch (error) {\n      console.error(`Error querying documents from ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get paginated results\n   */\n  async getPaginated(options: QueryOptions & { pageSize: number }): Promise<PaginationResult<T>> {\n    try {\n      const queryOptions = { ...options, limit: options.pageSize };\n      const documents = await this.getWithQuery(queryOptions);\n      \n      const hasMore = documents.length === options.pageSize;\n      const lastDoc = documents.length > 0 ? documents[documents.length - 1] : undefined;\n\n      return {\n        data: documents,\n        hasMore,\n        lastDoc,\n      };\n    } catch (error) {\n      console.error(`Error getting paginated documents from ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Update a document\n   */\n  async update(id: string, data: Partial<Omit<T, 'id' | 'createdAt'>>): Promise<void> {\n    try {\n      const docRef = doc(db, this.collectionName, id);\n      const updateData = {\n        ...data,\n        updatedAt: serverTimestamp(),\n      };\n      \n      await updateDoc(docRef, updateData);\n    } catch (error) {\n      console.error(`Error updating document ${id} in ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Delete a document\n   */\n  async delete(id: string): Promise<void> {\n    try {\n      const docRef = doc(db, this.collectionName, id);\n      await deleteDoc(docRef);\n    } catch (error) {\n      console.error(`Error deleting document ${id} from ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Delete multiple documents\n   */\n  async deleteMultiple(ids: string[]): Promise<void> {\n    try {\n      const batch = writeBatch(db);\n      \n      ids.forEach(id => {\n        const docRef = doc(db, this.collectionName, id);\n        batch.delete(docRef);\n      });\n      \n      await batch.commit();\n    } catch (error) {\n      console.error(`Error deleting multiple documents from ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Listen to real-time updates for a document\n   */\n  onDocumentSnapshot(id: string, callback: (doc: T | null) => void): Unsubscribe {\n    const docRef = doc(db, this.collectionName, id);\n    \n    return onSnapshot(docRef, (docSnap) => {\n      if (docSnap.exists()) {\n        const document = {\n          id: docSnap.id,\n          ...docSnap.data(),\n        } as T;\n        callback(document);\n      } else {\n        callback(null);\n      }\n    }, (error) => {\n      console.error(`Error listening to document ${id} in ${this.collectionName}:`, error);\n    });\n  }\n\n  /**\n   * Listen to real-time updates for a collection\n   */\n  onCollectionSnapshot(options: QueryOptions = {}, callback: (docs: T[]) => void): Unsubscribe {\n    let q = collection(db, this.collectionName) as Query;\n\n    // Apply query options (similar to getWithQuery)\n    if (options.where) {\n      options.where.forEach(condition => {\n        q = query(q, where(condition.field, condition.operator as WhereFilterOp, condition.value));\n      });\n    }\n\n    if (options.orderBy) {\n      q = query(q, orderBy(options.orderBy.field, options.orderBy.direction));\n    }\n\n    if (options.limit) {\n      q = query(q, limit(options.limit));\n    }\n\n    return onSnapshot(q, (querySnapshot) => {\n      const documents = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      })) as T[];\n      callback(documents);\n    }, (error) => {\n      console.error(`Error listening to collection ${this.collectionName}:`, error);\n    });\n  }\n\n  /**\n   * Batch write operations\n   */\n  async batchWrite(operations: Array<{\n    type: 'create' | 'update' | 'delete';\n    id?: string;\n    data?: Partial<T>;\n  }>): Promise<void> {\n    try {\n      const batch = writeBatch(db);\n\n      operations.forEach(operation => {\n        switch (operation.type) {\n          case 'create':\n            if (operation.id && operation.data) {\n              const docRef = doc(db, this.collectionName, operation.id);\n              batch.set(docRef, {\n                ...operation.data,\n                createdAt: serverTimestamp(),\n                updatedAt: serverTimestamp(),\n              });\n            }\n            break;\n          case 'update':\n            if (operation.id && operation.data) {\n              const docRef = doc(db, this.collectionName, operation.id);\n              batch.update(docRef, {\n                ...operation.data,\n                updatedAt: serverTimestamp(),\n              });\n            }\n            break;\n          case 'delete':\n            if (operation.id) {\n              const docRef = doc(db, this.collectionName, operation.id);\n              batch.delete(docRef);\n            }\n            break;\n        }\n      });\n\n      await batch.commit();\n    } catch (error) {\n      console.error(`Error performing batch operations on ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Transaction example\n   */\n  async runTransaction<R>(\n    updateFunction: (transaction: any) => Promise<R>\n  ): Promise<R> {\n    try {\n      return await runTransaction(db, updateFunction);\n    } catch (error) {\n      console.error(`Error running transaction on ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Count documents (Note: This is an expensive operation for large collections)\n   */\n  async count(options: QueryOptions = {}): Promise<number> {\n    try {\n      const documents = await this.getWithQuery(options);\n      return documents.length;\n    } catch (error) {\n      console.error(`Error counting documents in ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Check if document exists\n   */\n  async exists(id: string): Promise<boolean> {\n    try {\n      const docRef = doc(db, this.collectionName, id);\n      const docSnap = await getDoc(docRef);\n      return docSnap.exists();\n    } catch (error) {\n      console.error(`Error checking if document ${id} exists in ${this.collectionName}:`, error);\n      throw error;\n    }\n  }\n}\n\n// Utility functions\nexport const createTimestamp = () => Timestamp.now();\nexport const serverTime = () => serverTimestamp();\n\n// Helper function to convert Firestore timestamp to Date\nexport const timestampToDate = (timestamp: Timestamp): Date => {\n  return timestamp.toDate();\n};\n\n// Helper function to format timestamp\nexport const formatTimestamp = (timestamp: Timestamp, locale = 'en-US'): string => {\n  return timestamp.toDate().toLocaleDateString(locale);\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/business-types.ts"],"sourcesContent":["import { Timestamp } from \"firebase/firestore\";\n\n// Base interface for all business documents\nexport interface BusinessDocument {\n  id?: string;\n  createdAt?: Timestamp | string;\n  updatedAt?: Timestamp;\n}\n\n// Employee interface\nexport interface Employee extends BusinessDocument {\n  name: string;\n  email: string;\n  phone: string;\n  role: string;\n  department: string;\n  address: string;\n  isActive?: boolean;\n  hireDate?: Timestamp | string;\n  salary?: number;\n  emergencyContact?: {\n    name: string;\n    phone: string;\n    relationship: string;\n  };\n}\n\n// Department interface\nexport interface Department extends BusinessDocument {\n  name: string;\n  description?: string;\n  managerId?: string;\n  budget?: number;\n  employeeCount?: number;\n}\n\n// Employee Role interface\nexport interface EmployeeRole extends BusinessDocument {\n  name: string;\n  description?: string;\n  permissions?: string[];\n  level?: number;\n}\n\n// Lead Source interface\nexport interface LeadSource extends BusinessDocument {\n  name: string;\n  description?: string;\n  isActive?: boolean;\n  cost?: number;\n  conversionRate?: number;\n}\n\n// Product interface\nexport interface Product extends BusinessDocument {\n  name: string;\n  description: string;\n  price: number;\n  gstRate: number;\n  skus?: string[];\n  catalogueUrl?: string; // Legacy field - will be deprecated\n  cataloguePdf?: {\n    url: string; // Base64 data URL\n    fileName: string;\n    filePath: string;\n    uploadedAt: string;\n    base64Data: string; // The actual base64 string for storage\n  };\n  category?: string;\n  isActive?: boolean;\n  stockQuantity?: number;\n  minStockLevel?: number;\n  supplier?: string;\n  tags?: string[];\n}\n\n// Lead Activity interface\nexport interface LeadActivity {\n  id: string;\n  date: Timestamp | string;\n  type: 'Email' | 'Call' | 'Meeting' | 'Proposal Sent' | 'Revision Request' | 'Negotiation' | 'Follow-up' | 'Other';\n  notes: string;\n  userId?: string;\n  attachments?: string[];\n}\n\n// Lead Product interface\nexport interface LeadProduct {\n  productId: string;\n  quantity: number;\n  rate: number;\n  discount?: number;\n  notes?: string;\n}\n\n// Lead interface\nexport interface Lead extends BusinessDocument {\n  name: string;\n  company: string;\n  email: string;\n  phone: string;\n  whatsappNumber?: string;\n  status: 'New' | 'In Discussion' | 'Negotiation' | 'Closed - Won' | 'Closed - Lost' | 'On Hold';\n  source: string;\n  products: LeadProduct[];\n  activities: LeadActivity[];\n  assignedTo?: string;\n  priority?: 'Low' | 'Medium' | 'High' | 'Urgent';\n  expectedCloseDate?: Timestamp | string;\n  estimatedValue?: number;\n  tags?: string[];\n  customFields?: Record<string, any>;\n}\n\n// Quotation Product interface\nexport interface QuotationProduct {\n  productId: string;\n  quantity: number;\n  rate: number;\n  gstRate: number;\n  discount?: number;\n  total?: number;\n}\n\n// Populated Quotation Product interface (with product details)\nexport interface PopulatedQuotationProduct extends QuotationProduct {\n  product: Product;\n  amount: number;\n  gstAmount: number;\n}\n\n// Quotation Template interface\nexport interface QuotationTemplate extends BusinessDocument {\n  name: string;\n  companyName: string;\n  companyAddress: string;\n  companyGst: string;\n  termsAndConditions: string;\n  logoUrl?: string;\n  isDefault?: boolean;\n  emailTemplate?: string;\n  footerText?: string;\n}\n\n// Quotation interface\nexport interface Quotation extends BusinessDocument {\n  leadId: string;\n  templateId: string;\n  quotationNumber: string;\n  date: string;\n  validUntil: string;\n  status: 'Draft' | 'Sent' | 'Accepted' | 'Rejected' | 'Expired';\n  products: QuotationProduct[];\n  subTotal: number;\n  totalGst: number;\n  grandTotal: number;\n  discount?: number;\n  companyName?: string;\n  companyAddress?: string;\n  companyGst?: string;\n  termsAndConditions?: string;\n  logoUrl?: string;\n  notes?: string;\n  sentAt?: Timestamp | string;\n  acceptedAt?: Timestamp | string;\n  rejectedAt?: Timestamp | string;\n}\n\n// Customer interface (derived from successful leads)\nexport interface Customer extends BusinessDocument {\n  name: string;\n  company: string;\n  email: string;\n  phone: string;\n  whatsappNumber?: string;\n  address?: string;\n  gstNumber?: string;\n  contactPerson?: string;\n  leadId?: string; // Reference to original lead\n  totalValue?: number;\n  lastOrderDate?: Timestamp | string;\n  status: 'Active' | 'Inactive' | 'Blocked';\n  paymentTerms?: string;\n  creditLimit?: number;\n  tags?: string[];\n}\n\n// Order interface\nexport interface Order extends BusinessDocument {\n  customerId: string;\n  quotationId?: string;\n  orderNumber: string;\n  orderDate: Timestamp | string;\n  expectedDeliveryDate?: Timestamp | string;\n  actualDeliveryDate?: Timestamp | string;\n  status: 'Pending' | 'Confirmed' | 'In Production' | 'Ready' | 'Shipped' | 'Delivered' | 'Cancelled';\n  products: QuotationProduct[];\n  subTotal: number;\n  totalGst: number;\n  grandTotal: number;\n  discount?: number;\n  shippingAddress?: string;\n  billingAddress?: string;\n  paymentStatus: 'Pending' | 'Partial' | 'Paid' | 'Overdue';\n  paymentMethod?: string;\n  notes?: string;\n  assignedTo?: string;\n}\n\n// Invoice interface\nexport interface Invoice extends BusinessDocument {\n  orderId: string;\n  customerId: string;\n  invoiceNumber: string;\n  invoiceDate: Timestamp | string;\n  dueDate: Timestamp | string;\n  status: 'Draft' | 'Sent' | 'Paid' | 'Overdue' | 'Cancelled';\n  products: QuotationProduct[];\n  subTotal: number;\n  totalGst: number;\n  grandTotal: number;\n  amountPaid?: number;\n  balanceAmount?: number;\n  paymentTerms?: string;\n  notes?: string;\n}\n\n// Payment interface\nexport interface Payment extends BusinessDocument {\n  invoiceId: string;\n  customerId: string;\n  amount: number;\n  paymentDate: Timestamp | string;\n  paymentMethod: 'Cash' | 'Cheque' | 'Bank Transfer' | 'UPI' | 'Card' | 'Other';\n  referenceNumber?: string;\n  notes?: string;\n  status: 'Pending' | 'Cleared' | 'Failed' | 'Cancelled';\n}\n\n// Task interface\nexport interface Task extends BusinessDocument {\n  title: string;\n  description?: string;\n  assignedTo: string;\n  assignedBy?: string;\n  dueDate?: Timestamp | string;\n  priority: 'Low' | 'Medium' | 'High' | 'Urgent';\n  status: 'Todo' | 'In Progress' | 'Review' | 'Done' | 'Cancelled';\n  category?: string;\n  tags?: string[];\n  relatedTo?: {\n    type: 'lead' | 'customer' | 'order' | 'quotation';\n    id: string;\n  };\n  completedAt?: Timestamp | string;\n  estimatedHours?: number;\n  actualHours?: number;\n}\n\n// Company Settings interface\nexport interface CompanySettings extends BusinessDocument {\n  companyName: string;\n  companyAddress: string;\n  companyPhone: string;\n  companyEmail: string;\n  companyWebsite?: string;\n  gstNumber: string;\n  logoUrl?: string;\n  currency: string;\n  timezone: string;\n  fiscalYearStart: string;\n  defaultPaymentTerms: string;\n  emailSignature?: string;\n  bankDetails?: {\n    bankName: string;\n    accountNumber: string;\n    ifscCode: string;\n    accountHolderName: string;\n  };\n}\n\n// Analytics/Dashboard data interfaces\nexport interface DashboardMetrics {\n  totalLeads: number;\n  activeLeads: number;\n  convertedLeads: number;\n  totalRevenue: number;\n  monthlyRevenue: number;\n  pendingQuotations: number;\n  overdueInvoices: number;\n  topProducts: Array<{\n    productId: string;\n    productName: string;\n    totalSold: number;\n    revenue: number;\n  }>;\n  leadsBySource: Array<{\n    source: string;\n    count: number;\n    conversionRate: number;\n  }>;\n  salesByMonth: Array<{\n    month: string;\n    revenue: number;\n    orders: number;\n  }>;\n}\n\n// Notification interface\nexport interface Notification extends BusinessDocument {\n  userId: string;\n  title: string;\n  message: string;\n  type: 'info' | 'success' | 'warning' | 'error';\n  isRead: boolean;\n  actionUrl?: string;\n  relatedTo?: {\n    type: string;\n    id: string;\n  };\n}\n\n// User Activity Log interface\nexport interface ActivityLog extends BusinessDocument {\n  userId: string;\n  action: string;\n  entityType: string;\n  entityId: string;\n  details?: Record<string, any>;\n  ipAddress?: string;\n  userAgent?: string;\n}\n\n// Collection names constants\nexport const COLLECTIONS = {\n  EMPLOYEES: 'employees',\n  DEPARTMENTS: 'departments',\n  EMPLOYEE_ROLES: 'employeeRoles',\n  LEAD_SOURCES: 'leadSources',\n  PRODUCTS: 'products',\n  LEADS: 'leads',\n  QUOTATIONS: 'quotations',\n  QUOTATION_TEMPLATES: 'quotationTemplates',\n  CUSTOMERS: 'customers',\n  ORDERS: 'orders',\n  INVOICES: 'invoices',\n  PAYMENTS: 'payments',\n  TASKS: 'tasks',\n  COMPANY_SETTINGS: 'companySettings',\n  NOTIFICATIONS: 'notifications',\n  ACTIVITY_LOGS: 'activityLogs',\n} as const;\n\n// Type for collection names\nexport type CollectionName = typeof COLLECTIONS[keyof typeof COLLECTIONS];\n"],"names":[],"mappings":";;;AA8UO,MAAM,cAAc;IACzB,WAAW;IACX,aAAa;IACb,gBAAgB;IAChB,cAAc;IACd,UAAU;IACV,OAAO;IACP,YAAY;IACZ,qBAAqB;IACrB,WAAW;IACX,QAAQ;IACR,UAAU;IACV,UAAU;IACV,OAAO;IACP,kBAAkB;IAClB,eAAe;IACf,eAAe;AACjB","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/business-services.ts"],"sourcesContent":["import { FirestoreService } from './firestore-service';\nimport {\n  Employee,\n  Department,\n  EmployeeRole,\n  LeadSource,\n  Product,\n  Lead,\n  Quotation,\n  QuotationTemplate,\n  Customer,\n  Order,\n  Invoice,\n  Payment,\n  Task,\n  CompanySettings,\n  Notification,\n  ActivityLog,\n  COLLECTIONS\n} from './business-types';\n\n// Create service instances for all business collections\nexport const employeesService = new FirestoreService<Employee>(COLLECTIONS.EMPLOYEES);\nexport const departmentsService = new FirestoreService<Department>(COLLECTIONS.DEPARTMENTS);\nexport const employeeRolesService = new FirestoreService<EmployeeRole>(COLLECTIONS.EMPLOYEE_ROLES);\nexport const leadSourcesService = new FirestoreService<LeadSource>(COLLECTIONS.LEAD_SOURCES);\nexport const productsService = new FirestoreService<Product>(COLLECTIONS.PRODUCTS);\nexport const leadsService = new FirestoreService<Lead>(COLLECTIONS.LEADS);\nexport const quotationsService = new FirestoreService<Quotation>(COLLECTIONS.QUOTATIONS);\nexport const quotationTemplatesService = new FirestoreService<QuotationTemplate>(COLLECTIONS.QUOTATION_TEMPLATES);\nexport const customersService = new FirestoreService<Customer>(COLLECTIONS.CUSTOMERS);\nexport const ordersService = new FirestoreService<Order>(COLLECTIONS.ORDERS);\nexport const invoicesService = new FirestoreService<Invoice>(COLLECTIONS.INVOICES);\nexport const paymentsService = new FirestoreService<Payment>(COLLECTIONS.PAYMENTS);\nexport const tasksService = new FirestoreService<Task>(COLLECTIONS.TASKS);\nexport const companySettingsService = new FirestoreService<CompanySettings>(COLLECTIONS.COMPANY_SETTINGS);\nexport const notificationsService = new FirestoreService<Notification>(COLLECTIONS.NOTIFICATIONS);\nexport const activityLogsService = new FirestoreService<ActivityLog>(COLLECTIONS.ACTIVITY_LOGS);\n\n// Extended service classes with business logic\nexport class EmployeeService extends FirestoreService<Employee> {\n  constructor() {\n    super(COLLECTIONS.EMPLOYEES);\n  }\n\n  async getEmployeeByEmail(email: string): Promise<Employee | null> {\n    const employees = await this.getWithQuery({\n      where: [{ field: 'email', operator: '==', value: email }],\n      limit: 1\n    });\n    return employees.length > 0 ? employees[0] : null;\n  }\n\n  async getEmployeesByDepartment(department: string): Promise<Employee[]> {\n    return this.getWithQuery({\n      where: [{ field: 'department', operator: '==', value: department }],\n      orderBy: { field: 'name', direction: 'asc' }\n    });\n  }\n\n  async getEmployeesByRole(role: string): Promise<Employee[]> {\n    return this.getWithQuery({\n      where: [{ field: 'role', operator: '==', value: role }],\n      orderBy: { field: 'name', direction: 'asc' }\n    });\n  }\n\n  async getActiveEmployees(): Promise<Employee[]> {\n    return this.getWithQuery({\n      where: [{ field: 'isActive', operator: '==', value: true }],\n      orderBy: { field: 'name', direction: 'asc' }\n    });\n  }\n}\n\nexport class LeadService extends FirestoreService<Lead> {\n  constructor() {\n    super(COLLECTIONS.LEADS);\n  }\n\n  async getLeadsByStatus(status: Lead['status']): Promise<Lead[]> {\n    return this.getWithQuery({\n      where: [{ field: 'status', operator: '==', value: status }],\n      orderBy: { field: 'createdAt', direction: 'desc' }\n    });\n  }\n\n  async getLeadsBySource(source: string): Promise<Lead[]> {\n    return this.getWithQuery({\n      where: [{ field: 'source', operator: '==', value: source }],\n      orderBy: { field: 'createdAt', direction: 'desc' }\n    });\n  }\n\n  async getLeadsByAssignee(assignedTo: string): Promise<Lead[]> {\n    return this.getWithQuery({\n      where: [{ field: 'assignedTo', operator: '==', value: assignedTo }],\n      orderBy: { field: 'createdAt', direction: 'desc' }\n    });\n  }\n\n  async getRecentLeads(limit: number = 10): Promise<Lead[]> {\n    return this.getWithQuery({\n      orderBy: { field: 'createdAt', direction: 'desc' },\n      limit\n    });\n  }\n\n  async addActivity(leadId: string, activity: Omit<Lead['activities'][0], 'id'>): Promise<void> {\n    const lead = await this.getById(leadId);\n    if (lead) {\n      const newActivity = {\n        ...activity,\n        id: `act-${leadId}-${Date.now()}`\n      };\n      \n      const updatedActivities = [...(lead.activities || []), newActivity];\n      await this.update(leadId, { activities: updatedActivities });\n    }\n  }\n\n  async updateStatus(leadId: string, status: Lead['status'], notes?: string): Promise<void> {\n    await this.update(leadId, { status });\n    \n    if (notes) {\n      await this.addActivity(leadId, {\n        date: new Date().toISOString(),\n        type: 'Other',\n        notes: `Status changed to ${status}. ${notes}`\n      });\n    }\n  }\n}\n\nexport class ProductService extends FirestoreService<Product> {\n  constructor() {\n    super(COLLECTIONS.PRODUCTS);\n  }\n\n  async getActiveProducts(): Promise<Product[]> {\n    return this.getWithQuery({\n      where: [{ field: 'isActive', operator: '==', value: true }],\n      orderBy: { field: 'name', direction: 'asc' }\n    });\n  }\n\n  async getProductsByCategory(category: string): Promise<Product[]> {\n    return this.getWithQuery({\n      where: [{ field: 'category', operator: '==', value: category }],\n      orderBy: { field: 'name', direction: 'asc' }\n    });\n  }\n\n  async getLowStockProducts(): Promise<Product[]> {\n    const products = await this.getAll();\n    return products.filter(product => \n      product.stockQuantity !== undefined && \n      product.minStockLevel !== undefined && \n      product.stockQuantity <= product.minStockLevel\n    );\n  }\n\n  async updateStock(productId: string, quantity: number): Promise<void> {\n    await this.update(productId, { stockQuantity: quantity });\n  }\n\n  async searchProducts(searchTerm: string): Promise<Product[]> {\n    const products = await this.getActiveProducts();\n    return products.filter(product => \n      product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      product.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      (product.tags && product.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase())))\n    );\n  }\n}\n\nexport class QuotationService extends FirestoreService<Quotation> {\n  constructor() {\n    super(COLLECTIONS.QUOTATIONS);\n  }\n\n  async getQuotationsByLead(leadId: string): Promise<Quotation[]> {\n    return this.getWithQuery({\n      where: [{ field: 'leadId', operator: '==', value: leadId }],\n      orderBy: { field: 'createdAt', direction: 'desc' }\n    });\n  }\n\n  async getQuotationsByStatus(status: Quotation['status']): Promise<Quotation[]> {\n    return this.getWithQuery({\n      where: [{ field: 'status', operator: '==', value: status }],\n      orderBy: { field: 'createdAt', direction: 'desc' }\n    });\n  }\n\n  async getRecentQuotations(limit: number = 10): Promise<Quotation[]> {\n    return this.getWithQuery({\n      orderBy: { field: 'createdAt', direction: 'desc' },\n      limit\n    });\n  }\n\n  async generateQuotationNumber(): Promise<string> {\n    const quotations = await this.getAll();\n    const maxNumber = quotations.reduce((max, quotation) => {\n      const match = quotation.quotationNumber.match(/QUO-(\\d+)/);\n      if (match) {\n        const num = parseInt(match[1]);\n        return num > max ? num : max;\n      }\n      return max;\n    }, 0);\n    \n    return `QUO-${String(maxNumber + 1).padStart(4, '0')}`;\n  }\n\n  async markAsSent(quotationId: string): Promise<void> {\n    await this.update(quotationId, {\n      status: 'Sent',\n      sentAt: new Date().toISOString()\n    });\n  }\n\n  async markAsAccepted(quotationId: string): Promise<void> {\n    await this.update(quotationId, {\n      status: 'Accepted',\n      acceptedAt: new Date().toISOString()\n    });\n  }\n}\n\nexport class CustomerService extends FirestoreService<Customer> {\n  constructor() {\n    super(COLLECTIONS.CUSTOMERS);\n  }\n\n  async getCustomerByEmail(email: string): Promise<Customer | null> {\n    const customers = await this.getWithQuery({\n      where: [{ field: 'email', operator: '==', value: email }],\n      limit: 1\n    });\n    return customers.length > 0 ? customers[0] : null;\n  }\n\n  async getActiveCustomers(): Promise<Customer[]> {\n    return this.getWithQuery({\n      where: [{ field: 'status', operator: '==', value: 'Active' }],\n      orderBy: { field: 'name', direction: 'asc' }\n    });\n  }\n\n  async getTopCustomers(limit: number = 10): Promise<Customer[]> {\n    return this.getWithQuery({\n      where: [{ field: 'status', operator: '==', value: 'Active' }],\n      orderBy: { field: 'totalValue', direction: 'desc' },\n      limit\n    });\n  }\n\n  async createFromLead(lead: Lead): Promise<string> {\n    const customer: Omit<Customer, 'id' | 'createdAt' | 'updatedAt'> = {\n      name: lead.name,\n      company: lead.company,\n      email: lead.email,\n      phone: lead.phone,\n      whatsappNumber: lead.whatsappNumber,\n      leadId: lead.id,\n      status: 'Active',\n      totalValue: 0\n    };\n    \n    return this.create(customer);\n  }\n}\n\nexport class OrderService extends FirestoreService<Order> {\n  constructor() {\n    super(COLLECTIONS.ORDERS);\n  }\n\n  async getOrdersByCustomer(customerId: string): Promise<Order[]> {\n    return this.getWithQuery({\n      where: [{ field: 'customerId', operator: '==', value: customerId }],\n      orderBy: { field: 'orderDate', direction: 'desc' }\n    });\n  }\n\n  async getOrdersByStatus(status: Order['status']): Promise<Order[]> {\n    return this.getWithQuery({\n      where: [{ field: 'status', operator: '==', value: status }],\n      orderBy: { field: 'orderDate', direction: 'desc' }\n    });\n  }\n\n  async getRecentOrders(limit: number = 10): Promise<Order[]> {\n    return this.getWithQuery({\n      orderBy: { field: 'orderDate', direction: 'desc' },\n      limit\n    });\n  }\n\n  async generateOrderNumber(): Promise<string> {\n    const orders = await this.getAll();\n    const maxNumber = orders.reduce((max, order) => {\n      const match = order.orderNumber.match(/ORD-(\\d+)/);\n      if (match) {\n        const num = parseInt(match[1]);\n        return num > max ? num : max;\n      }\n      return max;\n    }, 0);\n    \n    return `ORD-${String(maxNumber + 1).padStart(4, '0')}`;\n  }\n\n  async updateStatus(orderId: string, status: Order['status']): Promise<void> {\n    const updateData: Partial<Order> = { status };\n    \n    if (status === 'Delivered') {\n      updateData.actualDeliveryDate = new Date().toISOString();\n    }\n    \n    await this.update(orderId, updateData);\n  }\n}\n\nexport class TaskService extends FirestoreService<Task> {\n  constructor() {\n    super(COLLECTIONS.TASKS);\n  }\n\n  async getTasksByAssignee(assignedTo: string): Promise<Task[]> {\n    return this.getWithQuery({\n      where: [{ field: 'assignedTo', operator: '==', value: assignedTo }],\n      orderBy: { field: 'dueDate', direction: 'asc' }\n    });\n  }\n\n  async getTasksByStatus(status: Task['status']): Promise<Task[]> {\n    return this.getWithQuery({\n      where: [{ field: 'status', operator: '==', value: status }],\n      orderBy: { field: 'dueDate', direction: 'asc' }\n    });\n  }\n\n  async getOverdueTasks(): Promise<Task[]> {\n    const now = new Date().toISOString();\n    const tasks = await this.getWithQuery({\n      where: [\n        { field: 'status', operator: '!=', value: 'Done' },\n        { field: 'status', operator: '!=', value: 'Cancelled' }\n      ]\n    });\n    \n    return tasks.filter(task => \n      task.dueDate && task.dueDate < now\n    );\n  }\n\n  async markAsCompleted(taskId: string): Promise<void> {\n    await this.update(taskId, {\n      status: 'Done',\n      completedAt: new Date().toISOString()\n    });\n  }\n}\n\n// Create instances of extended services\nexport const employeeService = new EmployeeService();\nexport const leadService = new LeadService();\nexport const productService = new ProductService();\nexport const quotationService = new QuotationService();\nexport const customerService = new CustomerService();\nexport const orderService = new OrderService();\nexport const taskService = new TaskService();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/firestore-data-service.ts"],"sourcesContent":["'use server';\n\nimport { \n  employeeService, \n  leadService, \n  productService, \n  quotationService,\n  departmentsService,\n  employeeRolesService,\n  leadSourcesService,\n  quotationTemplatesService\n} from './business-services';\nimport { \n  Employee, \n  Lead, \n  Product, \n  Quotation, \n  QuotationTemplate,\n  Department,\n  EmployeeRole,\n  LeadSource,\n  LeadActivity\n} from './business-types';\nimport { Timestamp } from 'firebase/firestore';\n\n// Helper function to convert Firestore Timestamps to plain objects\nfunction convertTimestampToPlain(obj: any): any {\n  if (!obj) return obj;\n  \n  if (obj instanceof Timestamp) {\n    return obj.toDate().toISOString();\n  }\n  \n  if (Array.isArray(obj)) {\n    return obj.map(item => convertTimestampToPlain(item));\n  }\n  \n  if (typeof obj === 'object') {\n    const converted: any = {};\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        converted[key] = convertTimestampToPlain(obj[key]);\n      }\n    }\n    return converted;\n  }\n  \n  return obj;\n}\n\n// Helper function to convert Firestore documents to plain objects\nfunction convertFirestoreDocToPlain<T>(doc: T): T {\n  return convertTimestampToPlain(doc);\n}\n\n// Type definitions to match your existing types\nexport interface Activity extends LeadActivity {}\n\nexport interface NewEmployee {\n  name: string;\n  email: string;\n  phone: string;\n  role: string;\n  department: string;\n  address: string;\n}\n\nexport interface NewProduct {\n  name: string;\n  description: string;\n  price: number;\n  gstRate: number;\n  skus?: string[];\n  catalogueUrl?: string;\n}\n\nexport interface UpdatableLeadData {\n  name?: string;\n  company?: string;\n  email?: string;\n  phone?: string;\n  whatsappNumber?: string;\n  status?: Lead['status'];\n  source?: string;\n  products?: Lead['products'];\n}\n\n// Employee functions\nexport const getEmployees = async (): Promise<Employee[]> => {\n  const employees = await employeeService.getAll();\n  return employees.map(emp => convertFirestoreDocToPlain(emp));\n};\n\nexport const getEmployeeById = async (id: string): Promise<Employee | undefined> => {\n  const employee = await employeeService.getById(id);\n  return employee ? convertFirestoreDocToPlain(employee) : undefined;\n};\n\nexport const addEmployee = async (employeeData: NewEmployee): Promise<Employee> => {\n  const id = await employeeService.create({\n    ...employeeData,\n    isActive: true\n  });\n  \n  const newEmployee = await employeeService.getById(id);\n  if (!newEmployee) {\n    throw new Error('Failed to create employee');\n  }\n  \n  return convertFirestoreDocToPlain(newEmployee);\n};\n\nexport const updateEmployee = async (id: string, employeeData: Partial<NewEmployee>): Promise<Employee> => {\n  await employeeService.update(id, employeeData);\n  const updatedEmployee = await employeeService.getById(id);\n  if (!updatedEmployee) {\n    throw new Error('Employee not found after update');\n  }\n  return convertFirestoreDocToPlain(updatedEmployee);\n};\n\nexport const deleteEmployee = async (id: string): Promise<{ success: boolean }> => {\n  await employeeService.delete(id);\n  return { success: true };\n};\n\n// Lead functions\nexport const getLeads = async (query?: string, status?: string): Promise<Lead[]> => {\n  let leads: Lead[] = [];\n  \n  if (status) {\n    leads = await leadService.getLeadsByStatus(status as Lead['status']);\n  } else {\n    leads = await leadService.getAll();\n  }\n  \n  // Convert to plain objects\n  leads = leads.map(lead => convertFirestoreDocToPlain(lead));\n  \n  if (query) {\n    const lowercasedQuery = query.toLowerCase();\n    leads = leads.filter(\n      lead =>\n        lead.name.toLowerCase().includes(lowercasedQuery) ||\n        lead.company.toLowerCase().includes(lowercasedQuery)\n    );\n  }\n  \n  return leads.sort((a, b) => {\n    const aDate = a.createdAt ? new Date(a.createdAt.toString()).getTime() : 0;\n    const bDate = b.createdAt ? new Date(b.createdAt.toString()).getTime() : 0;\n    return bDate - aDate;\n  });\n};\n\nexport const getLeadById = async (id: string): Promise<Lead | undefined> => {\n  const lead = await leadService.getById(id);\n  if (!lead) return undefined;\n  \n  const plainLead = convertFirestoreDocToPlain(lead);\n  return {\n    ...plainLead,\n    activities: plainLead.activities.sort((a: any, b: any) => {\n      const aDate = new Date(a.date.toString()).getTime();\n      const bDate = new Date(b.date.toString()).getTime();\n      return bDate - aDate;\n    })\n  };\n};\n\nexport const getRecentActivities = async (limit: number): Promise<{ lead: Lead; activity: Activity }[]> => {\n  const leads = await leadService.getAll();\n  const plainLeads = leads.map(lead => convertFirestoreDocToPlain(lead));\n  \n  const allActivities = plainLeads.flatMap(lead => \n    lead.activities.map(activity => ({ lead, activity }))\n  );\n  \n  return allActivities\n    .sort((a, b) => {\n      const aDate = new Date(a.activity.date.toString()).getTime();\n      const bDate = new Date(b.activity.date.toString()).getTime();\n      return bDate - aDate;\n    })\n    .slice(0, limit);\n};\n\nexport const addLead = async (leadData: Omit<Lead, 'id' | 'createdAt' | 'activities'> & { notes?: string }): Promise<Lead> => {\n  const { notes, ...restOfLeadData } = leadData;\n  \n  const initialActivity: LeadActivity[] = [];\n  if (notes) {\n    initialActivity.push({\n      id: `act-${Date.now()}-1`,\n      date: new Date().toISOString(),\n      type: 'Email',\n      notes: `Lead created in the system. Initial notes: ${notes}`,\n    });\n  }\n\n  const id = await leadService.create({\n    ...restOfLeadData,\n    activities: initialActivity,\n    priority: 'Medium',\n    estimatedValue: leadData.products?.reduce((sum, product) => \n      sum + (product.quantity * product.rate), 0) || 0\n  });\n  \n  const newLead = await leadService.getById(id);\n  if (!newLead) {\n    throw new Error('Failed to create lead');\n  }\n  \n  return convertFirestoreDocToPlain(newLead);\n};\n\nexport const addActivityToLead = async (leadId: string, activityData: Omit<Activity, 'id' | 'date'>): Promise<Activity> => {\n  const lead = await leadService.getById(leadId);\n  if (!lead) {\n    throw new Error('Lead not found');\n  }\n\n  const newActivity: LeadActivity = {\n    ...activityData,\n    id: `act-${leadId}-${Date.now()}`,\n    date: new Date().toISOString(),\n  };\n  \n  await leadService.addActivity(leadId, newActivity);\n  return convertFirestoreDocToPlain(newActivity);\n};\n\nexport const updateLeadStatus = async (leadId: string, status: Lead['status']): Promise<Lead> => {\n  await leadService.updateStatus(leadId, status);\n  const updatedLead = await leadService.getById(leadId);\n  if (!updatedLead) {\n    throw new Error('Lead not found after update');\n  }\n  return convertFirestoreDocToPlain(updatedLead);\n};\n\nexport const updateLead = async (leadId: string, leadData: UpdatableLeadData): Promise<Lead> => {\n  await leadService.update(leadId, leadData);\n  const updatedLead = await leadService.getById(leadId);\n  if (!updatedLead) {\n    throw new Error('Lead not found after update');\n  }\n  return convertFirestoreDocToPlain(updatedLead);\n};\n\nexport const deleteLead = async (id: string): Promise<{ success: boolean }> => {\n  await leadService.delete(id);\n  return { success: true };\n};\n\n// Product functions\nexport const getProducts = async (): Promise<Product[]> => {\n  const products = await productService.getAll();\n  return products.map(product => convertFirestoreDocToPlain(product));\n};\n\nexport const addProduct = async (productData: NewProduct): Promise<Product> => {\n  const id = await productService.create({\n    ...productData,\n    isActive: true,\n    stockQuantity: 100,\n    minStockLevel: 10\n  });\n  \n  const newProduct = await productService.getById(id);\n  if (!newProduct) {\n    throw new Error('Failed to create product');\n  }\n  \n  return convertFirestoreDocToPlain(newProduct);\n};\n\nexport const updateProduct = async (id: string, productData: NewProduct): Promise<Product> => {\n  await productService.update(id, productData);\n  const updatedProduct = await productService.getById(id);\n  if (!updatedProduct) {\n    throw new Error('Product not found after update');\n  }\n  return convertFirestoreDocToPlain(updatedProduct);\n};\n\nexport const deleteProduct = async (id: string): Promise<{ success: boolean }> => {\n  await productService.delete(id);\n  return { success: true };\n};\n\n// Lead Source functions\nexport const getLeadSources = async (): Promise<LeadSource[]> => {\n  const sources = await leadSourcesService.getAll();\n  return sources.map(source => convertFirestoreDocToPlain(source));\n};\n\nexport const addLeadSource = async (name: string): Promise<LeadSource> => {\n  const id = await leadSourcesService.create({\n    name,\n    isActive: true\n  });\n  \n  const newSource = await leadSourcesService.getById(id);\n  if (!newSource) {\n    throw new Error('Failed to create lead source');\n  }\n  \n  return convertFirestoreDocToPlain(newSource);\n};\n\nexport const deleteLeadSource = async (id: string): Promise<{ success: boolean }> => {\n  await leadSourcesService.delete(id);\n  return { success: true };\n};\n\n// Quotation functions\nexport const getQuotations = async (): Promise<Quotation[]> => {\n  const quotations = await quotationService.getAll();\n  const plainQuotations = quotations.map(q => convertFirestoreDocToPlain(q));\n  \n  return plainQuotations.sort((a, b) => {\n    const aDate = a.createdAt ? new Date(a.createdAt.toString()).getTime() : 0;\n    const bDate = b.createdAt ? new Date(b.createdAt.toString()).getTime() : 0;\n    return bDate - aDate;\n  });\n};\n\nexport const getQuotationById = async (id: string): Promise<Quotation | undefined> => {\n  const quotation = await quotationService.getById(id);\n  return quotation ? convertFirestoreDocToPlain(quotation) : undefined;\n};\n\nexport const addQuotation = async (quotationData: Omit<Quotation, 'id' | 'createdAt' | 'quotationNumber'>): Promise<Quotation> => {\n  const quotationNumber = await quotationService.generateQuotationNumber();\n  \n  const id = await quotationService.create({\n    ...quotationData,\n    quotationNumber\n  });\n  \n  const newQuotation = await quotationService.getById(id);\n  if (!newQuotation) {\n    throw new Error('Failed to create quotation');\n  }\n  \n  return convertFirestoreDocToPlain(newQuotation);\n};\n\nexport const updateQuotation = async (id: string, quotationData: Partial<Quotation>): Promise<Quotation> => {\n  await quotationService.update(id, quotationData);\n  const updatedQuotation = await quotationService.getById(id);\n  if (!updatedQuotation) {\n    throw new Error('Quotation not found after update');\n  }\n  return convertFirestoreDocToPlain(updatedQuotation);\n};\n\nexport const deleteQuotation = async (id: string): Promise<{ success: boolean }> => {\n  await quotationService.delete(id);\n  return { success: true };\n};\n\n// Quotation Template functions\nexport const getQuotationTemplates = async (): Promise<QuotationTemplate[]> => {\n  const templates = await quotationTemplatesService.getAll();\n  return templates.map(template => convertFirestoreDocToPlain(template));\n};\n\nexport const getQuotationTemplateById = async (id: string): Promise<QuotationTemplate | undefined> => {\n  const template = await quotationTemplatesService.getById(id);\n  return template ? convertFirestoreDocToPlain(template) : undefined;\n};\n\nexport const addQuotationTemplate = async (templateData: Omit<QuotationTemplate, 'id'>): Promise<QuotationTemplate> => {\n  const id = await quotationTemplatesService.create({\n    ...templateData,\n    isDefault: false\n  });\n  \n  const newTemplate = await quotationTemplatesService.getById(id);\n  if (!newTemplate) {\n    throw new Error('Failed to create quotation template');\n  }\n  \n  return convertFirestoreDocToPlain(newTemplate);\n};\n\nexport const updateQuotationTemplate = async (id: string, templateData: QuotationTemplate): Promise<QuotationTemplate> => {\n  await quotationTemplatesService.update(id, templateData);\n  const updatedTemplate = await quotationTemplatesService.getById(id);\n  if (!updatedTemplate) {\n    throw new Error('Template not found after update');\n  }\n  return convertFirestoreDocToPlain(updatedTemplate);\n};\n\nexport const deleteQuotationTemplate = async (id: string): Promise<{ success: boolean }> => {\n  await quotationTemplatesService.delete(id);\n  return { success: true };\n};\n\n// Employee Role functions\nexport const getEmployeeRoles = async (): Promise<EmployeeRole[]> => {\n  const roles = await employeeRolesService.getAll();\n  return roles.map(role => convertFirestoreDocToPlain(role));\n};\n\nexport const addEmployeeRole = async (name: string): Promise<EmployeeRole> => {\n  const id = await employeeRolesService.create({ name });\n  \n  const newRole = await employeeRolesService.getById(id);\n  if (!newRole) {\n    throw new Error('Failed to create employee role');\n  }\n  \n  return convertFirestoreDocToPlain(newRole);\n};\n\nexport const deleteEmployeeRole = async (id: string): Promise<{ success: boolean }> => {\n  await employeeRolesService.delete(id);\n  return { success: true };\n};\n\n// Department functions\nexport const getDepartments = async (): Promise<Department[]> => {\n  const departments = await departmentsService.getAll();\n  return departments.map(dept => convertFirestoreDocToPlain(dept));\n};\n\nexport const addDepartment = async (name: string): Promise<Department> => {\n  const id = await departmentsService.create({ name });\n  \n  const newDepartment = await departmentsService.getById(id);\n  if (!newDepartment) {\n    throw new Error('Failed to create department');\n  }\n  \n  return convertFirestoreDocToPlain(newDepartment);\n};\n\nexport const deleteDepartment = async (id: string): Promise<{ success: boolean }> => {\n  await departmentsService.delete(id);\n  return { success: true };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1460, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/.next-internal/server/app/quotations/%5Bid%5D/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {addActivityToLead as '7f05e84f0f97fc5a7a07e8131baefa2841070e643d'} from 'ACTIONS_MODULE0'\nexport {updateEmployee as '7f0f59e3c0bdc096d699ee898b0c1ba20707191d4b'} from 'ACTIONS_MODULE0'\nexport {getQuotationById as '7f1846f698e1887660f585d5ea9149a07c7c850f92'} from 'ACTIONS_MODULE0'\nexport {getDepartments as '7f2e6eb1a1a75f8015dfce86483708dfbe658da89c'} from 'ACTIONS_MODULE0'\nexport {addDepartment as '7f31e15fd4f61e5b609e4a6d50eeccb9af77aafef8'} from 'ACTIONS_MODULE0'\nexport {deleteQuotationTemplate as '7f39761948864339837957ca91e3e944cd8e441632'} from 'ACTIONS_MODULE0'\nexport {getLeadById as '7f3ae5e8f46d47652a5fb84e3089a01a9238cf9bed'} from 'ACTIONS_MODULE0'\nexport {addProduct as '7f3d9e95cd0e81b0d13660c9a9a93768fb851fa506'} from 'ACTIONS_MODULE0'\nexport {getLeads as '7f4280ff5e64067f99266109815caf0860a45cc58c'} from 'ACTIONS_MODULE0'\nexport {getQuotationTemplateById as '7f480200a3ee83c850bd3891fd7985198e896fe1ed'} from 'ACTIONS_MODULE0'\nexport {updateLeadStatus as '7f4e672b0e36e084ca5eb122016c6383de1a5a99ba'} from 'ACTIONS_MODULE0'\nexport {addEmployee as '7f4eefc53973b8e6fbed50ffa2cc64fe40df104ad3'} from 'ACTIONS_MODULE0'\nexport {deleteQuotation as '7f5591f7a8ee3bb38224df4376cdee9f8d5eb812fe'} from 'ACTIONS_MODULE0'\nexport {deleteLead as '7f579d5a450a43d8b74c568f68ca2b3c2566dc4a95'} from 'ACTIONS_MODULE0'\nexport {updateLead as '7f5ad710a7cb483463fc09bb2de49c70ee34ee6c63'} from 'ACTIONS_MODULE0'\nexport {getEmployeeRoles as '7f6d87f222357d05d51ddaef3bee835c24413445c4'} from 'ACTIONS_MODULE0'\nexport {getEmployeeById as '7f7433c41b0634dc7b5f0d1c3708d79d935f8bde34'} from 'ACTIONS_MODULE0'\nexport {addEmployeeRole as '7f822c7526a05588811630fb16c06bf87327d46e27'} from 'ACTIONS_MODULE0'\nexport {updateQuotation as '7f90125ab01f83802f2fcb8e1f747656578c988c23'} from 'ACTIONS_MODULE0'\nexport {deleteDepartment as '7f93d0bb939f748aacd7331842952547c4a4a6ddf0'} from 'ACTIONS_MODULE0'\nexport {updateQuotationTemplate as '7fa6bcba2f1f7e8c8eeaf60c2dc415a8e405fa26f7'} from 'ACTIONS_MODULE0'\nexport {addLeadSource as '7fa78ef03610d4e9976fbaa4e450f34f54cf2d02fc'} from 'ACTIONS_MODULE0'\nexport {getEmployees as '7fa8bc842463b1ec33e139235445fa57278ad38b35'} from 'ACTIONS_MODULE0'\nexport {getQuotations as '7fabb9890e6ce6942891dc6903686fbb41d7e40da9'} from 'ACTIONS_MODULE0'\nexport {deleteProduct as '7fae3ad533f1dc6298a52f1957eff67f632545365d'} from 'ACTIONS_MODULE0'\nexport {addQuotation as '7faf0a91ed8cef30a4af08e9037287b354a71db7e9'} from 'ACTIONS_MODULE0'\nexport {getRecentActivities as '7fb4f29abf3ebe0f2a94c04f8d336c3e47599188ee'} from 'ACTIONS_MODULE0'\nexport {addLead as '7fc6f659357e4b54787c2a339bdb6e16e7ae761acb'} from 'ACTIONS_MODULE0'\nexport {getLeadSources as '7fc9162346222c9de85ac70b2f85d9c9be072b4bb2'} from 'ACTIONS_MODULE0'\nexport {addQuotationTemplate as '7fce767cc96f1429da191f8516a9b4784b223bb47e'} from 'ACTIONS_MODULE0'\nexport {getQuotationTemplates as '7fe30da5fb8303e0a863d9120c6dd29a374504a050'} from 'ACTIONS_MODULE0'\nexport {deleteEmployee as '7fe3bac712c1f2e1723b72df2734d1286a00c8a875'} from 'ACTIONS_MODULE0'\nexport {deleteLeadSource as '7fe5d28a16cab74d9ee3acbe0aafa76ffc672cfba6'} from 'ACTIONS_MODULE0'\nexport {updateProduct as '7feddb7de602afea2493484ef7513323da3fdfb015'} from 'ACTIONS_MODULE0'\nexport {getProducts as '7ff71b0c7623881d0aa5c8c677cd09724481a157b2'} from 'ACTIONS_MODULE0'\nexport {deleteEmployeeRole as '7ffd8613a6e078c5fd9d33441e4b0f2ad06720be86'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1617, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/data/index.ts"],"sourcesContent":["// Firestore-based data service - replaces JSON file operations\n// Original JSON-based service backed up as index-json-backup.ts\n\nexport * from '../firestore-data-service';\n"],"names":[],"mappings":"AAAA,+DAA+D;AAC/D,gEAAgE;;AAEhE","debugId":null}},
    {"offset": {"line": 1637, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 1653, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1713, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/quotations/%5Bid%5D/quotation-preview.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const QuotationPreview = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuotationPreview() from the server but QuotationPreview is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/quotations/[id]/quotation-preview.tsx <module evaluation>\",\n    \"QuotationPreview\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+EACA","debugId":null}},
    {"offset": {"line": 1727, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/quotations/%5Bid%5D/quotation-preview.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const QuotationPreview = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuotationPreview() from the server but QuotationPreview is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/quotations/[id]/quotation-preview.tsx\",\n    \"QuotationPreview\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2DACA","debugId":null}},
    {"offset": {"line": 1741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1751, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/quotations/%5Bid%5D/page.tsx"],"sourcesContent":["\nimport { notFound } from 'next/navigation';\nimport Link from 'next/link';\nimport { ArrowLeft } from 'lucide-react';\nimport {\n  getQuotationById,\n  getLeadById,\n  getProducts,\n} from '@/lib/data';\nimport { Button } from '@/components/ui/button';\nimport { QuotationPreview } from './quotation-preview';\n\nexport default async function QuotationDetailPage({\n  params,\n}: {\n  params: Promise<{ id: string }>;\n}) {\n  const { id } = await params;\n  const quotation = await getQuotationById(id);\n  if (!quotation || !quotation.id) {\n    notFound();\n  }\n\n  const [lead, allProducts] = await Promise.all([\n    getLeadById(quotation.leadId),\n    getProducts(),\n  ]);\n\n  if (!lead || !lead.id) {\n    notFound();\n  }\n\n  const populatedProducts = quotation.products.map((p) => {\n    const product = allProducts.find((ap) => ap.id === p.productId);\n    if (!product || !product.id) {\n      throw new Error(`Product details not found for ID: ${p.productId}`);\n    }\n    const amount = p.quantity * p.rate;\n    const gstAmount = amount * (p.gstRate / 100);\n    return { ...p, product, amount, gstAmount };\n  });\n\n  return (\n    <>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Link href=\"/quotations\">\n            <Button variant=\"outline\" size=\"icon\">\n              <ArrowLeft className=\"h-4 w-4\" />\n            </Button>\n          </Link>\n          <h2 className=\"text-3xl font-bold tracking-tight\">\n            Quotation Details\n          </h2>\n        </div>\n      </div>\n      <QuotationPreview\n        quotation={quotation}\n        lead={lead}\n        products={populatedProducts}\n      />\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AACA;AACA;AAAA;AAKA;AACA;;;;;;;;AAEe,eAAe,oBAAoB,EAChD,MAAM,EAGP;IACC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,MAAM,YAAY,MAAM,CAAA,GAAA,0IAAA,CAAA,mBAAgB,AAAD,EAAE;IACzC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE;QAC/B,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,MAAM,CAAC,MAAM,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC5C,CAAA,GAAA,0IAAA,CAAA,cAAW,AAAD,EAAE,UAAU,MAAM;QAC5B,CAAA,GAAA,0IAAA,CAAA,cAAW,AAAD;KACX;IAED,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE;QACrB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,MAAM,oBAAoB,UAAU,QAAQ,CAAC,GAAG,CAAC,CAAC;QAChD,MAAM,UAAU,YAAY,IAAI,CAAC,CAAC,KAAO,GAAG,EAAE,KAAK,EAAE,SAAS;QAC9D,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC3B,MAAM,IAAI,MAAM,CAAC,kCAAkC,EAAE,EAAE,SAAS,EAAE;QACpE;QACA,MAAM,SAAS,EAAE,QAAQ,GAAG,EAAE,IAAI;QAClC,MAAM,YAAY,SAAS,CAAC,EAAE,OAAO,GAAG,GAAG;QAC3C,OAAO;YAAE,GAAG,CAAC;YAAE;YAAS;YAAQ;QAAU;IAC5C;IAEA,qBACE;;0BACE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;0CAC7B,cAAA,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;;;;;;;;;;;sCAGzB,8OAAC;4BAAG,WAAU;sCAAoC;;;;;;;;;;;;;;;;;0BAKtD,8OAAC,2JAAA,CAAA,mBAAgB;gBACf,WAAW;gBACX,MAAM;gBACN,UAAU;;;;;;;;AAIlB","debugId":null}}]
}