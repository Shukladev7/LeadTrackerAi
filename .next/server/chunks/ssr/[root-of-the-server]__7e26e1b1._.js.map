{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/types.ts"],"sourcesContent":["\nexport type LeadStatus = 'New' | 'In Discussion' | 'Negotiation' | 'Closed - Won' | 'Closed - Lost';\n\nexport const ALL_STATUSES: LeadStatus[] = ['New', 'In Discussion', 'Negotiation', 'Closed - Won', 'Closed - Lost'];\n\nexport type ActivityType = 'Meeting' | 'Call' | 'Email' | 'Revision Request' | 'Proposal Sent';\n\nexport type LeadSource = {\n  id: string;\n  name: string;\n};\n\nexport type Activity = {\n  id: string;\n  date: string; // ISO 8601 format\n  type: ActivityType;\n  notes: string;\n  summary?: string;\n};\n\nexport type Product = {\n  id: string;\n  name:string;\n  description: string;\n  price: number;\n  gstRate: number;\n  skus?: string[];\n  catalogueUrl?: string;\n};\n\nexport type NewProduct = Omit<Product, 'id'>;\n\nexport type LeadProduct = {\n  productId: string;\n  quantity: number;\n  rate: number;\n  selectedSku?: string;\n};\n\nexport type PopulatedLeadProduct = LeadProduct & {\n  product: Product;\n  amount: number;\n};\n\nexport type Lead = {\n  id: string;\n  name: string;\n  company: string;\n  email: string;\n  phone: string;\n  whatsappNumber?: string;\n  status: LeadStatus;\n  source: string;\n  createdAt: string; // ISO 8601 format\n  activities: Activity[];\n  products: LeadProduct[];\n};\n\nexport type UpdatableLeadData = Omit<Lead, 'id' | 'createdAt' | 'activities'>;\n\nexport type QuotationStatus = 'Draft' | 'Sent' | 'Accepted' | 'Rejected';\nexport const ALL_QUOTATION_STATUSES: QuotationStatus[] = ['Draft', 'Sent', 'Accepted', 'Rejected'];\n\nexport type QuotationProduct = {\n  productId: string;\n  quantity: number;\n  rate: number;\n  gstRate: number;\n};\n\nexport type PopulatedQuotationProduct = QuotationProduct & {\n    product: Product;\n    amount: number;\n    gstAmount: number;\n};\n\nexport type Quotation = {\n  id: string;\n  quotationNumber: string;\n  leadId: string;\n  date: string;\n  validUntil: string;\n  products: QuotationProduct[];\n  subTotal: number;\n  totalGst: number;\n  grandTotal: number;\n  status: QuotationStatus;\n  templateId: string;\n  createdAt: string;\n  // Template fields that can be overridden\n  logoUrl?: string;\n  companyName: string;\n  companyAddress: string;\n  companyGst: string;\n  termsAndConditions: string;\n};\n\nexport type QuotationTemplate = {\n    id: string;\n    name: string;\n    logoUrl?: string;\n    companyName: string;\n    companyAddress: string;\n    companyGst: string;\n    termsAndConditions: string;\n};\n\nexport type NewQuotationTemplate = Omit<QuotationTemplate, 'id'>;\n\nexport type EmployeeRoleData = {\n    id: string;\n    name: string;\n};\n\nexport type EmployeeRole = EmployeeRoleData['name'];\n\nexport type Department = {\n    id: string;\n    name: string;\n};\n\nexport type Employee = {\n    id: string;\n    name: string;\n    email: string;\n    phone: string;\n    role: EmployeeRole;\n    department: string;\n    address: string;\n    createdAt: string;\n};\n\nexport type NewEmployee = Omit<Employee, 'id' | 'createdAt'>;\n"],"names":[],"mappings":";;;;AAGO,MAAM,eAA6B;IAAC;IAAO;IAAiB;IAAe;IAAgB;CAAgB;AA0D3G,MAAM,yBAA4C;IAAC;IAAS;IAAQ;IAAY;CAAW","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/components/status-badge.tsx"],"sourcesContent":["import { Badge } from '@/components/ui/badge';\nimport type { LeadStatus } from '@/lib/types';\nimport { cn } from '@/lib/utils';\n\ntype StatusBadgeProps = {\n  status: LeadStatus;\n  className?: string;\n};\n\nexport function StatusBadge({ status, className }: StatusBadgeProps) {\n  const statusStyles: Record<LeadStatus, string> = {\n    'New': 'bg-blue-100 text-blue-800 border-blue-200 dark:bg-blue-900/30 dark:text-blue-300 dark:border-blue-800',\n    'In Discussion': 'bg-purple-100 text-purple-800 border-purple-200 dark:bg-purple-900/30 dark:text-purple-300 dark:border-purple-800',\n    'Negotiation': 'bg-yellow-100 text-yellow-800 border-yellow-200 dark:bg-yellow-900/30 dark:text-yellow-300 dark:border-yellow-800',\n    'Closed - Won': 'bg-green-100 text-green-800 border-green-200 dark:bg-green-900/30 dark:text-green-300 dark:border-green-800',\n    'Closed - Lost': 'bg-red-100 text-red-800 border-red-200 dark:bg-red-900/30 dark:text-red-300 dark:border-red-800',\n  };\n\n  return (\n    <Badge\n      variant=\"outline\"\n      className={cn('font-medium', statusStyles[status], className)}\n    >\n      {status}\n    </Badge>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAOO,SAAS,YAAY,EAAE,MAAM,EAAE,SAAS,EAAoB;IACjE,MAAM,eAA2C;QAC/C,OAAO;QACP,iBAAiB;QACjB,eAAe;QACf,gBAAgB;QAChB,iBAAiB;IACnB;IAEA,qBACE,8OAAC,iIAAA,CAAA,QAAK;QACJ,SAAQ;QACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe,YAAY,CAAC,OAAO,EAAE;kBAElD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/data/index.ts"],"sourcesContent":["\n'use server';\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { Lead, Activity, Product, LeadSource, UpdatableLeadData, Quotation, QuotationTemplate, NewProduct, Employee, NewEmployee, EmployeeRoleData, Department } from '../types';\n\nconst dataPath = path.join(process.cwd(), 'src', 'lib', 'data');\n\nasync function readData<T>(filename: string): Promise<T[]> {\n  try {\n    const filePath = path.join(dataPath, filename);\n    const fileContent = await fs.readFile(filePath, 'utf-8');\n    return JSON.parse(fileContent);\n  } catch (error) {\n    if (isNodeError(error) && error.code === 'ENOENT') {\n      // If the file doesn't exist, create it with an empty array\n      await writeData(filename, []);\n      return [];\n    }\n    console.error(`Error reading ${filename}:`, error);\n    throw new Error(`Could not read ${filename}`);\n  }\n}\n\nasync function writeData<T>(filename: string, data: T[]): Promise<void> {\n  try {\n    const filePath = path.join(dataPath, filename);\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');\n  } catch (error)\n{\n    console.error(`Error writing ${filename}:`, error);\n    throw new Error(`Could not write to ${filename}`);\n  }\n}\n\nfunction isNodeError(error: unknown): error is NodeJS.ErrnoException {\n    return error instanceof Error;\n}\n\nexport const getLeads = async (query?: string, status?: string): Promise<Lead[]> => {\n  let leads = await readData<Lead>('leads.json');\n  \n  if (query) {\n    const lowercasedQuery = query.toLowerCase();\n    leads = leads.filter(\n      lead =>\n        lead.name.toLowerCase().includes(lowercasedQuery) ||\n        lead.company.toLowerCase().includes(lowercasedQuery)\n    );\n  }\n\n  if (status) {\n    leads = leads.filter(lead => lead.status === status);\n  }\n  \n  return leads.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getLeadById = async (id: string): Promise<Lead | undefined> => {\n    const leads = await getLeads();\n    const lead = leads.find(lead => lead.id === id);\n    if (!lead) return undefined;\n    \n    return {\n      ...lead,\n      activities: lead.activities.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    };\n};\n\nexport const getRecentActivities = async (limit: number): Promise<{ lead: Lead; activity: Activity }[]> => {\n    const leads = await getLeads();\n    const allActivities = leads.flatMap(lead => \n        lead.activities.map(activity => ({ lead, activity }))\n    );\n    return allActivities\n        .sort((a, b) => new Date(b.activity.date).getTime() - new Date(a.activity.date).getTime())\n        .slice(0, limit);\n}\n\nexport const getProducts = async (): Promise<Product[]> => {\n  return await readData<Product>('products.json');\n}\n\nexport const getLeadSources = async (): Promise<LeadSource[]> => {\n    return await readData<LeadSource>('lead-sources.json');\n}\n\nexport const addProduct = async (productData: NewProduct): Promise<Product> => {\n  const products = await getProducts();\n  const newProduct: Product = {\n    ...productData,\n    id: `prod-${Date.now()}`,\n  };\n  products.unshift(newProduct);\n  await writeData<Product>('products.json', products);\n  return newProduct;\n};\n\nexport const updateProduct = async (id: string, productData: NewProduct): Promise<Product> => {\n    const products = await getProducts();\n    const productIndex = products.findIndex(p => p.id === id);\n    if (productIndex === -1) {\n        throw new Error('Product not found');\n    }\n    const updatedProduct = { ...products[productIndex], ...productData };\n    products[productIndex] = updatedProduct;\n    await writeData<Product>('products.json', products);\n    return updatedProduct;\n};\n\nexport const deleteProduct = async (id: string): Promise<{ success: boolean }> => {\n    let products = await getProducts();\n    const initialLength = products.length;\n    products = products.filter(p => p.id !== id);\n    if (products.length === initialLength) {\n        throw new Error('Product not found for deletion');\n    }\n    await writeData<Product>('products.json', products);\n    return { success: true };\n};\n\n\nexport const addLeadSource = async (name: string): Promise<LeadSource> => {\n    const leadSources = await getLeadSources();\n    const newSource: LeadSource = {\n        id: `source-${Date.now()}`,\n        name,\n    };\n    leadSources.unshift(newSource);\n    await writeData<LeadSource>('lead-sources.json', leadSources);\n    return newSource;\n};\n\nexport const deleteLeadSource = async (id: string): Promise<{ success: boolean }> => {\n    let leadSources = await getLeadSources();\n    const initialLength = leadSources.length;\n    leadSources = leadSources.filter(source => source.id !== id);\n    await writeData<LeadSource>('lead-sources.json', leadSources);\n    return { success: leadSources.length < initialLength };\n};\n\nexport const addLead = async (leadData: Omit<Lead, 'id' | 'createdAt' | 'activities'> & { notes?: string }): Promise<Lead> => {\n  const leads = await getLeads();\n  const newId = `lead-${Date.now()}`;\n  \n  const initialActivity: Activity[] = [];\n  if (leadData.notes) {\n    initialActivity.push({\n      id: `act-${newId}-1`,\n      date: new Date().toISOString(),\n      type: 'Email', \n      notes: `Lead created in the system. Initial notes: ${leadData.notes}`,\n    });\n  }\n\n  const { notes, ...restOfLeadData } = leadData;\n\n  const newLead: Lead = {\n    ...restOfLeadData,\n    id: newId,\n    createdAt: new Date().toISOString(),\n    activities: initialActivity,\n  };\n  leads.unshift(newLead);\n  await writeData<Lead>('leads.json', leads);\n  return newLead;\n};\n\nexport const addActivityToLead = async (leadId: string, activityData: Omit<Activity, 'id' | 'date'>): Promise<Activity> => {\n  const leads = await getLeads();\n  const leadIndex = leads.findIndex(l => l.id === leadId);\n  if (leadIndex === -1) {\n    throw new Error('Lead not found');\n  }\n\n  const lead = leads[leadIndex];\n  const newActivity: Activity = {\n    ...activityData,\n    id: `act-${leadId}-${lead.activities.length + 1}`,\n    date: new Date().toISOString(),\n  };\n  lead.activities.unshift(newActivity);\n  \n  await writeData<Lead>('leads.json', leads);\n  return newActivity;\n};\n\nexport const updateLeadStatus = async (leadId: string, status: Lead['status']): Promise<Lead> => {\n  const leads = await getLeads();\n  const leadIndex = leads.findIndex(l => l.id === leadId);\n  if (leadIndex === -1) {\n    throw new Error('Lead not found');\n  }\n\n  leads[leadIndex].status = status;\n  await writeData<Lead>('leads.json', leads);\n  return leads[leadIndex];\n};\n\nexport const updateLead = async (leadId: string, leadData: UpdatableLeadData): Promise<Lead> => {\n    const leads = await getLeads();\n    const leadIndex = leads.findIndex(l => l.id === leadId);\n    if (leadIndex === -1) {\n      throw new Error('Lead not found');\n    }\n  \n    const originalLead = leads[leadIndex];\n    const updatedLead: Lead = {\n      ...originalLead,\n      ...leadData,\n    };\n  \n    leads[leadIndex] = updatedLead;\n    await writeData<Lead>('leads.json', leads);\n    return updatedLead;\n};\n\n// Quotation specific functions\nexport const getQuotations = async (): Promise<Quotation[]> => {\n    const quotations = await readData<Quotation>('quotations.json');\n    return quotations.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getQuotationById = async (id: string): Promise<Quotation | undefined> => {\n    const quotations = await getQuotations();\n    return quotations.find(q => q.id === id);\n};\n\nexport const addQuotation = async (quotationData: Omit<Quotation, 'id' | 'createdAt' | 'quotationNumber'>): Promise<Quotation> => {\n    const quotations = await getQuotations();\n    const newQuotationNumber = `QUO-${String(quotations.length + 1).padStart(4, '0')}`;\n    const newQuotation: Quotation = {\n        ...quotationData,\n        id: `quo-${Date.now()}`,\n        quotationNumber: newQuotationNumber,\n        createdAt: new Date().toISOString(),\n    };\n    quotations.unshift(newQuotation);\n    await writeData<Quotation>('quotations.json', quotations);\n    return newQuotation;\n};\n\nexport const getQuotationTemplates = async (): Promise<QuotationTemplate[]> => {\n    return await readData<QuotationTemplate>('quotation-templates.json');\n};\n\nexport const getQuotationTemplateById = async (id: string): Promise<QuotationTemplate | undefined> => {\n    const templates = await getQuotationTemplates();\n    return templates.find(t => t.id === id);\n};\n\nexport const addQuotationTemplate = async (templateData: Omit<QuotationTemplate, 'id'>): Promise<QuotationTemplate> => {\n    const templates = await getQuotationTemplates();\n    const newTemplate: QuotationTemplate = {\n        ...templateData,\n        id: `template-${Date.now()}`,\n    };\n    templates.unshift(newTemplate);\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return newTemplate;\n};\n\nexport const updateQuotationTemplate = async (id: string, templateData: QuotationTemplate): Promise<QuotationTemplate> => {\n    const templates = await getQuotationTemplates();\n    const templateIndex = templates.findIndex(t => t.id === id);\n    if (templateIndex === -1) {\n        throw new Error('Template not found');\n    }\n    templates[templateIndex] = { ...templates[templateIndex], ...templateData };\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return templates[templateIndex];\n}\n\nexport const deleteQuotationTemplate = async (id: string): Promise<{ success: boolean }> => {\n    let templates = await getQuotationTemplates();\n    const initialLength = templates.length;\n    templates = templates.filter(t => t.id !== id);\n    if (templates.length === initialLength) {\n        throw new Error('Template not found for deletion');\n    }\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return { success: true };\n}\n\n\n// Employee specific functions\nexport const getEmployees = async (): Promise<Employee[]> => {\n    const employees = await readData<Employee>('employees.json');\n    return employees.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getEmployeeById = async (id: string): Promise<Employee | undefined> => {\n    const employees = await getEmployees();\n    return employees.find(employee => employee.id === id);\n};\n\nexport const addEmployee = async (employeeData: NewEmployee): Promise<Employee> => {\n    const employees = await getEmployees();\n    const newEmployee: Employee = {\n        ...employeeData,\n        id: `emp-${Date.now()}`,\n        createdAt: new Date().toISOString(),\n    };\n    employees.unshift(newEmployee);\n    await writeData<Employee>('employees.json', employees);\n    return newEmployee;\n};\n\nexport const getEmployeeRoles = async (): Promise<EmployeeRoleData[]> => {\n    return await readData<EmployeeRoleData>('employee-roles.json');\n}\n\nexport const addEmployeeRole = async (name: string): Promise<EmployeeRoleData> => {\n    const roles = await getEmployeeRoles();\n    const newRole: EmployeeRoleData = {\n        id: `role-${Date.now()}`,\n        name,\n    };\n    roles.push(newRole);\n    await writeData<EmployeeRoleData>('employee-roles.json', roles);\n    return newRole;\n}\n\nexport const deleteEmployeeRole = async (id: string): Promise<{ success: boolean }> => {\n    let roles = await getEmployeeRoles();\n    const initialLength = roles.length;\n    roles = roles.filter(role => role.id !== id);\n    await writeData<EmployeeRoleData>('employee-roles.json', roles);\n    return { success: roles.length < initialLength };\n}\n\nexport const getDepartments = async (): Promise<Department[]> => {\n    return await readData<Department>('departments.json');\n}\n\nexport const addDepartment = async (name: string): Promise<Department> => {\n    const departments = await getDepartments();\n    const newDepartment: Department = {\n        id: `dept-${Date.now()}`,\n        name,\n    };\n    departments.push(newDepartment);\n    await writeData<Department>('departments.json', departments);\n    return newDepartment;\n}\n\nexport const deleteDepartment = async (id: string): Promise<{ success: boolean }> => {\n    let departments = await getDepartments();\n    const initialLength = departments.length;\n    departments = departments.filter(dept => dept.id !== id);\n    await writeData<Department>('departments.json', departments);\n    return { success: departments.length < initialLength };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/ai/flows/summarize-meeting-notes.ts"],"sourcesContent":["// Summarize Meeting Notes Flow\n'use server';\n/**\n * @fileOverview Summarizes lengthy meeting notes into concise summaries using GenAI.\n *\n * - summarizeMeetingNotes - A function that handles the summarization of meeting notes.\n * - SummarizeMeetingNotesInput - The input type for the summarizeMeetingNotes function.\n * - SummarizeMeetingNotesOutput - The return type for the summarizeMeetingNotes function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SummarizeMeetingNotesInputSchema = z.object({\n  notes: z\n    .string()\n    .describe('The lengthy meeting notes to be summarized.'),\n});\nexport type SummarizeMeetingNotesInput = z.infer<typeof SummarizeMeetingNotesInputSchema>;\n\nconst SummarizeMeetingNotesOutputSchema = z.object({\n  summary: z.string().describe('A concise summary of the meeting notes.'),\n});\nexport type SummarizeMeetingNotesOutput = z.infer<typeof SummarizeMeetingNotesOutputSchema>;\n\nexport async function summarizeMeetingNotes(input: SummarizeMeetingNotesInput): Promise<SummarizeMeetingNotesOutput> {\n  return summarizeMeetingNotesFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'summarizeMeetingNotesPrompt',\n  input: {schema: SummarizeMeetingNotesInputSchema},\n  output: {schema: SummarizeMeetingNotesOutputSchema},\n  prompt: `Summarize the following meeting notes into a concise summary:\n\n  {{{notes}}}`,\n});\n\nconst summarizeMeetingNotesFlow = ai.defineFlow(\n  {\n    name: 'summarizeMeetingNotesFlow',\n    inputSchema: SummarizeMeetingNotesInputSchema,\n    outputSchema: SummarizeMeetingNotesOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;AAE/B;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,OAAO,uIAAA,CAAA,IAAC,CACL,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,sBAAsB,KAAiC;IAC3E,OAAO,0BAA0B;AACnC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAgC;IAChD,QAAQ;QAAC,QAAQ;IAAiC;IAClD,QAAQ,CAAC;;aAEE,CAAC;AACd;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAtBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { summarizeMeetingNotes } from '@/ai/flows/summarize-meeting-notes';\nimport { addLead as dbAddLead, addActivityToLead, updateLeadStatus as updateStatus, addProduct as dbAddProduct, addLeadSource as dbAddLeadSource, deleteLeadSource as dbDeleteLeadSource, updateLead as dbUpdateLead, getLeadById as dbGetLeadById, addQuotation as dbAddQuotation, addQuotationTemplate as dbAddQuotationTemplate, updateProduct as dbUpdateProduct, deleteProduct as dbDeleteProduct, addEmployee as dbAddEmployee, getEmployeeRoles, addEmployeeRole as dbAddEmployeeRole, deleteEmployeeRole as dbDeleteEmployeeRole, getDepartments, addDepartment as dbAddDepartment, deleteDepartment as dbDeleteDepartment, updateQuotationTemplate as dbUpdateQuotationTemplate, deleteQuotationTemplate as dbDeleteQuotationTemplate } from './data';\nimport type { Lead, LeadStatus, LeadProduct, UpdatableLeadData, Product, NewQuotationTemplate, Quotation, NewEmployee, Employee, QuotationTemplate } from './types';\nimport { getProducts } from './data';\n\nconst LeadProductSchema = z.object({\n    productId: z.string().min(1, 'Product must be selected'),\n    quantity: z.coerce.number().min(1),\n    rate: z.coerce.number().min(0),\n    selectedSku: z.string().optional(),\n});\n\nconst CreateLeadSchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n  company: z.string().min(2, 'Company must be at least 2 characters'),\n  email: z.string().email('Invalid email address'),\n  phone: z.string().min(10, 'Phone number seems too short'),\n  whatsappNumber: z.string().optional(),\n  status: z.enum(['New', 'In Discussion', 'Negotiation', 'Closed - Won', 'Closed - Lost']),\n  source: z.string().min(1, 'Please select a lead source'),\n  notes: z.string().optional(),\n  products: z.array(LeadProductSchema).optional(),\n});\n\nexport async function createLead(formData: FormData) {\n  const productsJSON = formData.get('products');\n  const products = productsJSON ? JSON.parse(productsJSON as string) : [];\n\n  const validatedFields = CreateLeadSchema.safeParse({\n    name: formData.get('name'),\n    company: formData.get('company'),\n    email: formData.get('email'),\n    phone: formData.get('phone'),\n    whatsappNumber: formData.get('whatsappNumber'),\n    status: formData.get('status'),\n    source: formData.get('source'),\n    notes: formData.get('notes'),\n    products: products,\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Failed to create lead.',\n    };\n  }\n  \n  let newLeadId: string | undefined;\n  try {\n    const newLead = await dbAddLead(validatedFields.data);\n    newLeadId = newLead.id;\n  } catch (error) {\n    return { message: 'Database Error: Failed to Create Lead.' };\n  }\n\n  revalidatePath('/leads');\n  revalidatePath('/');\n  if (newLeadId) {\n    revalidatePath(`/leads/${newLeadId}`);\n  }\n  return { message: 'Successfully created lead.' };\n}\n\nconst UpdateLeadSchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n  company: z.string().min(2, 'Company must be at least 2 characters'),\n  email: z.string().email('Invalid email address'),\n  phone: z.string().min(10, 'Phone number seems too short'),\n  whatsappNumber: z.string().optional(),\n  status: z.enum(['New', 'In Discussion', 'Negotiation', 'Closed - Won', 'Closed - Lost']),\n  source: z.string().min(1, 'Please select a lead source'),\n  products: z.array(LeadProductSchema).optional(),\n});\n\nfunction generateChangeNotes(oldLead: Lead, newLeadData: UpdatableLeadData, allProducts: Product[]): string {\n    const changes: string[] = [];\n\n    if (oldLead.name !== newLeadData.name) {\n        changes.push(`Name changed from \"${oldLead.name}\" to \"${newLeadData.name}\".`);\n    }\n    if (oldLead.company !== newLeadData.company) {\n        changes.push(`Company changed from \"${oldLead.company}\" to \"${newLeadData.company}\".`);\n    }\n    if (oldLead.email !== newLeadData.email) {\n        changes.push(`Email changed from \"${oldLead.email}\" to \"${newLeadData.email}\".`);\n    }\n    if (oldLead.phone !== newLeadData.phone) {\n        changes.push(`Phone changed from \"${oldLead.phone}\" to \"${newLeadData.phone}\".`);\n    }\n    if (oldLead.whatsappNumber !== newLeadData.whatsappNumber) {\n        changes.push(`WhatsApp Number changed from \"${oldLead.whatsappNumber || 'N/A'}\" to \"${newLeadData.whatsappNumber || 'N/A'}\".`);\n    }\n    if (oldLead.status !== newLeadData.status) {\n        changes.push(`Status changed from \"${oldLead.status}\" to \"${newLeadData.status}\".`);\n    }\n    if (oldLead.source !== newLeadData.source) {\n        changes.push(`Source changed from \"${oldLead.source}\" to \"${newLeadData.source}\".`);\n    }\n\n    const oldProducts = oldLead.products || [];\n    const newProducts = newLeadData.products || [];\n    if (JSON.stringify(oldProducts) !== JSON.stringify(newProducts)) {\n        const getProductName = (productId: string) => allProducts.find(p => p.id === productId)?.name || productId;\n        \n        const formatProduct = (p: LeadProduct) => `${getProductName(p.productId)} (Qty: ${p.quantity}, Rate: ${p.rate}, SKU: ${p.selectedSku || 'N/A'})`;\n\n        const oldProductStr = oldProducts.map(formatProduct).join(', ') || 'None';\n        const newProductStr = newProducts.map(formatProduct).join(', ') || 'None';\n\n        changes.push(`Interested products updated.\\n- Old: ${oldProductStr}\\n- New: ${newProductStr}`);\n    }\n\n    if (changes.length === 0) {\n        return 'No changes were made to the lead details.';\n    }\n\n    return 'Lead details were updated:\\n' + changes.map(c => `- ${c}`).join('\\n');\n}\n\nexport async function updateLead(leadId: string, formData: FormData) {\n    const [oldLead, allProducts] = await Promise.all([\n        dbGetLeadById(leadId),\n        getProducts()\n    ]);\n\n    if (!oldLead) {\n        return { message: 'Error: Lead not found.' };\n    }\n\n    const productsJSON = formData.get('products');\n    const products = productsJSON ? JSON.parse(productsJSON as string) : [];\n  \n    const validatedFields = UpdateLeadSchema.safeParse({\n      name: formData.get('name'),\n      company: formData.get('company'),\n      email: formData.get('email'),\n      phone: formData.get('phone'),\n      whatsappNumber: formData.get('whatsappNumber'),\n      status: formData.get('status'),\n      source: formData.get('source'),\n      products: products,\n    });\n  \n    if (!validatedFields.success) {\n      return {\n        errors: validatedFields.error.flatten().fieldErrors,\n        message: 'Failed to update lead.',\n      };\n    }\n\n    const newLeadData = validatedFields.data as UpdatableLeadData;\n    const changeNotes = generateChangeNotes(oldLead, newLeadData, allProducts);\n  \n    try {\n        await dbUpdateLead(leadId, newLeadData);\n        if (changeNotes !== 'No changes were made to the lead details.') {\n            await addActivityToLead(leadId, {\n                type: 'Revision Request',\n                notes: changeNotes\n            });\n        }\n    } catch (error) {\n      const message = error instanceof Error ? error.message : 'An unknown error occurred';\n      return { message: `Database Error: Failed to Update Lead. ${message}` };\n    }\n  \n    revalidatePath('/leads');\n    revalidatePath('/');\n    revalidatePath(`/leads/${leadId}`);\n    return { message: 'Successfully updated lead.' };\n}\n\nconst ProductSchema = z.object({\n    name: z.string().min(3, { message: 'Product name must be at least 3 characters.' }),\n    description: z.string().min(10, { message: 'Description must be at least 10 characters.' }),\n    price: z.coerce.number().min(0, { message: 'Price must be a positive number.' }),\n    gstRate: z.coerce.number().min(0).max(100),\n    skus: z.array(z.string()).optional(),\n    catalogueUrl: z.string().url('Please enter a valid URL.').optional().or(z.literal('')),\n});\n\nexport async function addProduct(formData: FormData) {\n  const skusJSON = formData.get('skus');\n  const skus = skusJSON ? JSON.parse(skusJSON as string) : [];\n  \n  const validatedFields = ProductSchema.safeParse({\n    name: formData.get('name'),\n    description: formData.get('description'),\n    price: formData.get('price'),\n    gstRate: formData.get('gstRate'),\n    skus: skus,\n    catalogueUrl: formData.get('catalogueUrl'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Failed to add product.',\n    };\n  }\n\n  try {\n    await dbAddProduct(validatedFields.data);\n  } catch (error) {\n    return { message: 'Database Error: Failed to add product.' };\n  }\n\n  revalidatePath('/products');\n  revalidatePath('/leads'); // Revalidate leads in case product info is needed\n  return { message: 'Successfully added product.' };\n}\n\nexport async function updateProduct(id: string, formData: FormData) {\n    const skusJSON = formData.get('skus');\n    const skus = skusJSON ? JSON.parse(skusJSON as string) : [];\n    \n    const validatedFields = ProductSchema.safeParse({\n      name: formData.get('name'),\n      description: formData.get('description'),\n      price: formData.get('price'),\n      gstRate: formData.get('gstRate'),\n      skus: skus,\n      catalogueUrl: formData.get('catalogueUrl'),\n    });\n  \n    if (!validatedFields.success) {\n      return {\n        errors: validatedFields.error.flatten().fieldErrors,\n        message: 'Failed to update product.',\n      };\n    }\n  \n    try {\n      await dbUpdateProduct(id, validatedFields.data);\n    } catch (error) {\n      return { message: 'Database Error: Failed to update product.' };\n    }\n  \n    revalidatePath('/products');\n    revalidatePath('/leads'); \n    return { message: 'Successfully updated product.' };\n  }\n  \n  export async function deleteProduct(id: string) {\n    try {\n      await dbDeleteProduct(id);\n    } catch (error) {\n      return { message: 'Database Error: Failed to delete product.' };\n    }\n  \n    revalidatePath('/products');\n    revalidatePath('/leads');\n    return { message: 'Successfully deleted product.' };\n  }\n\n\nconst LogActivitySchema = z.object({\n    leadId: z.string(),\n    type: z.enum(['Meeting', 'Call', 'Email', 'Revision Request', 'Proposal Sent']),\n    notes: z.string().min(10, 'Notes must be at least 10 characters long.'),\n    summary: z.string().optional(),\n});\n\nexport async function logActivity(formData: FormData) {\n    const validatedFields = LogActivitySchema.safeParse({\n        leadId: formData.get('leadId'),\n        type: formData.get('type'),\n        notes: formData.get('notes'),\n        summary: formData.get('summary') || undefined,\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: 'Failed to log activity.',\n        };\n    }\n\n    try {\n        const { leadId, ...activityData } = validatedFields.data;\n        await addActivityToLead(leadId, activityData);\n    } catch (error) {\n        return { message: 'Database Error: Failed to log activity.' };\n    }\n\n    revalidatePath(`/leads/${validatedFields.data.leadId}`);\n    revalidatePath('/');\n    return { message: 'Successfully logged activity.' };\n}\n\nexport async function getSummaryForNotes(notes: string): Promise<{ summary?: string; error?: string }> {\n  if (!notes || notes.trim().length < 50) {\n    return { error: 'Please provide at least 50 characters of notes to summarize.' };\n  }\n  try {\n    const result = await summarizeMeetingNotes({ notes });\n    return result;\n  } catch (e) {\n    console.error('AI Summarization Error:', e);\n    return { error: 'Failed to generate summary due to an internal error.' };\n  }\n}\n\n\nexport async function updateLeadStatusAction(leadId: string, status: LeadStatus) {\n  try {\n    await updateStatus(leadId, status);\n  } catch (error) {\n    return { message: 'Database Error: Failed to update status.' };\n  }\n  revalidatePath(`/leads/${leadId}`);\n  revalidatePath('/leads');\n  revalidatePath('/');\n  return { message: 'Status updated.' };\n}\n\nconst AddLeadSourceSchema = z.object({\n    name: z.string().min(2, 'Source name must be at least 2 characters'),\n});\n\nexport async function addLeadSourceAction(formData: FormData) {\n    const validatedFields = AddLeadSourceSchema.safeParse({\n        name: formData.get('name'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            message: validatedFields.error.flatten().fieldErrors.name?.[0] ?? 'Invalid name',\n        };\n    }\n\n    try {\n        await dbAddLeadSource(validatedFields.data.name);\n    } catch (error) {\n        return { message: 'Database Error: Failed to add lead source.' };\n    }\n\n    revalidatePath('/setup');\n    revalidatePath('/leads');\n    return { message: `Successfully added '${validatedFields.data.name}'.` };\n}\n\nexport async function deleteLeadSourceAction(id: string) {\n    try {\n        await dbDeleteLeadSource(id);\n    } catch (error) {\n        return { message: 'Database Error: Failed to delete lead source.' };\n    }\n\n    revalidatePath('/setup');\n    revalidatePath('/leads');\n    return { message: 'Successfully deleted lead source.' };\n}\n\nconst CreateQuotationSchema = z.object({\n  leadId: z.string().min(1),\n  templateId: z.string().min(1),\n  date: z.string(),\n  validUntil: z.string(),\n  status: z.enum(['Draft', 'Sent', 'Accepted', 'Rejected']),\n  products: z.string(), // JSON string\n  subTotal: z.coerce.number(),\n  totalGst: z.coerce.number(),\n  grandTotal: z.coerce.number(),\n  // Overridable template fields\n  companyName: z.string().min(1),\n  companyAddress: z.string().min(1),\n  companyGst: z.string().min(1),\n  termsAndConditions: z.string(),\n  logoUrl: z.string().optional(),\n});\n\n\nexport async function addQuotation(formData: FormData) {\n    const validatedFields = CreateQuotationSchema.safeParse({\n        leadId: formData.get('leadId'),\n        templateId: formData.get('templateId'),\n        date: formData.get('date'),\n        validUntil: formData.get('validUntil'),\n        status: formData.get('status'),\n        products: formData.get('products'),\n        subTotal: formData.get('subTotal'),\n        totalGst: formData.get('totalGst'),\n        grandTotal: formData.get('grandTotal'),\n        companyName: formData.get('companyName'),\n        companyAddress: formData.get('companyAddress'),\n        companyGst: formData.get('companyGst'),\n        termsAndConditions: formData.get('termsAndConditions'),\n        logoUrl: formData.get('logoUrl'),\n      });\n    \n      if (!validatedFields.success) {\n        console.error(validatedFields.error.flatten().fieldErrors);\n        return {\n          errors: validatedFields.error.flatten().fieldErrors,\n          message: 'Validation Error: Failed to create quotation.',\n        };\n      }\n      \n      let newQuotation: Quotation | undefined;\n      try {\n        const data = validatedFields.data;\n        const parsedProducts = JSON.parse(data.products);\n        newQuotation = await dbAddQuotation({\n            ...data,\n            logoUrl: data.logoUrl || undefined,\n            products: parsedProducts,\n        });\n\n        // Log activity on the lead\n        await addActivityToLead(data.leadId, {\n            type: 'Proposal Sent',\n            notes: `Quotation ${newQuotation.quotationNumber} was created and sent.`\n        });\n\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'An unknown error occurred';\n        return { message: `Database Error: Failed to Create Quotation. ${message}` };\n      }\n\n    revalidatePath('/quotations');\n    revalidatePath(`/leads/${validatedFields.data.leadId}`);\n    return { message: 'Successfully created quotation.' };\n}\n\n\nconst QuotationTemplateSchema = z.object({\n    name: z.string().min(3, 'Template name must be at least 3 characters.'),\n    companyName: z.string().min(3, 'Company name is required.'),\n    companyAddress: z.string().min(10, 'Full company address is required.'),\n    companyGst: z.string().min(15, 'A valid GSTIN is required.').max(15),\n    termsAndConditions: z.string().min(20, 'Terms and conditions are required.'),\n    logoUrl: z.string().url('Please enter a valid URL for the logo.').optional().or(z.literal('')),\n});\n\nexport async function addQuotationTemplateAction(formData: FormData) {\n    const validatedFields = QuotationTemplateSchema.safeParse({\n        name: formData.get('name'),\n        companyName: formData.get('companyName'),\n        companyAddress: formData.get('companyAddress'),\n        companyGst: formData.get('companyGst'),\n        termsAndConditions: formData.get('termsAndConditions'),\n        logoUrl: formData.get('logoUrl'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: 'Failed to create template. Please check the fields.',\n        };\n    }\n\n    try {\n        await dbAddQuotationTemplate(validatedFields.data as NewQuotationTemplate);\n    } catch (error) {\n        return { message: 'Database Error: Failed to create template.' };\n    }\n\n    revalidatePath('/setup/quotation-templates');\n    return { message: 'Successfully created quotation template.' };\n}\n\nexport async function updateQuotationTemplateAction(id: string, formData: FormData) {\n    const validatedFields = QuotationTemplateSchema.safeParse({\n        name: formData.get('name'),\n        companyName: formData.get('companyName'),\n        companyAddress: formData.get('companyAddress'),\n        companyGst: formData.get('companyGst'),\n        termsAndConditions: formData.get('termsAndConditions'),\n        logoUrl: formData.get('logoUrl'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: 'Failed to update template. Please check the fields.',\n        };\n    }\n\n    try {\n        await dbUpdateQuotationTemplate(id, validatedFields.data as QuotationTemplate);\n    } catch (error) {\n        return { message: 'Database Error: Failed to update template.' };\n    }\n\n    revalidatePath('/setup/quotation-templates');\n    return { message: 'Successfully updated quotation template.' };\n}\n\nexport async function deleteQuotationTemplateAction(id: string) {\n    try {\n        await dbDeleteQuotationTemplate(id);\n    } catch (error) {\n        return { message: 'Database Error: Failed to delete template.' };\n    }\n\n    revalidatePath('/setup/quotation-templates');\n    return { message: 'Successfully deleted quotation template.' };\n}\n\n\nconst AddEmployeeSchema = z.object({\n    name: z.string().min(2, 'Name must be at least 2 characters.'),\n    email: z.string().email('Please enter a valid email.'),\n    phone: z.string().min(10, 'Please enter a valid phone number.'),\n    role: z.string({\n      required_error: \"You need to select a role.\",\n    }),\n    department: z.string({\n        required_error: \"You need to select a department.\",\n    }),\n    address: z.string().min(10, 'Address is required.'),\n});\n\nexport async function addEmployeeAction(formData: FormData) {\n    const validatedFields = AddEmployeeSchema.safeParse({\n        name: formData.get('name'),\n        email: formData.get('email'),\n        phone: formData.get('phone'),\n        role: formData.get('role'),\n        department: formData.get('department'),\n        address: formData.get('address'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: 'Failed to add employee.',\n        };\n    }\n\n    const [employeeRoles, departments] = await Promise.all([\n        getEmployeeRoles(),\n        getDepartments(),\n    ]);\n\n    const roleExists = employeeRoles.some(r => r.name === validatedFields.data.role);\n    if (!roleExists) {\n        return { message: 'Invalid role selected.' };\n    }\n    const departmentExists = departments.some(d => d.name === validatedFields.data.department);\n    if (!departmentExists) {\n        return { message: 'Invalid department selected.' };\n    }\n\n\n    try {\n        await dbAddEmployee(validatedFields.data as NewEmployee);\n    } catch (error) {\n        return { message: 'Database Error: Failed to add employee.' };\n    }\n\n    revalidatePath('/employees');\n    return { message: 'Successfully added employee.' };\n}\n\n\nconst AddEmployeeRoleSchema = z.object({\n    name: z.string().min(2, 'Role name must be at least 2 characters'),\n});\n\nexport async function addEmployeeRoleAction(formData: FormData) {\n    const validatedFields = AddEmployeeRoleSchema.safeParse({\n        name: formData.get('name'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            message: validatedFields.error.flatten().fieldErrors.name?.[0] ?? 'Invalid name',\n        };\n    }\n\n    try {\n        await dbAddEmployeeRole(validatedFields.data.name);\n    } catch (error) {\n        return { message: 'Database Error: Failed to add role.' };\n    }\n\n    revalidatePath('/setup');\n    return { message: `Successfully added role '${validatedFields.data.name}'.` };\n}\n\nexport async function deleteEmployeeRoleAction(id: string) {\n    try {\n        await dbDeleteEmployeeRole(id);\n    } catch (error) {\n        return { message: 'Database Error: Failed to delete role.' };\n    }\n\n    revalidatePath('/setup');\n    return { message: 'Successfully deleted role.' };\n}\n\nconst AddDepartmentSchema = z.object({\n    name: z.string().min(2, 'Department name must be at least 2 characters'),\n});\n\nexport async function addDepartmentAction(formData: FormData) {\n    const validatedFields = AddDepartmentSchema.safeParse({\n        name: formData.get('name'),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            message: validatedFields.error.flatten().fieldErrors.name?.[0] ?? 'Invalid name',\n        };\n    }\n\n    try {\n        await dbAddDepartment(validatedFields.data.name);\n    } catch (error) {\n        return { message: 'Database Error: Failed to add department.' };\n    }\n\n    revalidatePath('/setup');\n    return { message: `Successfully added department '${validatedFields.data.name}'.` };\n}\n\nexport async function deleteDepartmentAction(id: string) {\n    try {\n        await dbDeleteDepartment(id);\n    } catch (error) {\n        return { message: 'Database Error: Failed to delete department.' };\n    }\n\n    revalidatePath('/setup');\n    return { message: 'Successfully deleted department.' };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1730, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/setup/page.tsx"],"sourcesContent":["import {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n    CardFooter,\n  } from \"@/components/ui/card\";\n  import { Button } from \"@/components/ui/button\";\n  import { Input } from \"@/components/ui/input\";\n  import { PlusCircle, Trash2, FileText, Building2 } from \"lucide-react\";\n  import { ALL_STATUSES } from \"@/lib/types\";\n  import { StatusBadge } from \"@/components/status-badge\";\n  import { getLeadSources, getEmployeeRoles, getDepartments } from \"@/lib/data\";\n  import { addLeadSourceAction, deleteLeadSourceAction, addEmployeeRoleAction, deleteEmployeeRoleAction, addDepartmentAction, deleteDepartmentAction } from \"@/lib/actions\";\n  import { revalidatePath } from \"next/cache\";\n  import Link from \"next/link\";\nimport { Badge } from \"@/components/ui/badge\";\n  \n  export default async function SetupPage() {\n    const [leadSources, employeeRoles, departments] = await Promise.all([\n        getLeadSources(),\n        getEmployeeRoles(),\n        getDepartments(),\n    ]);\n  \n    return (\n      <>\n        <div className=\"flex items-center justify-between space-y-2\">\n          <h2 className=\"text-3xl font-bold tracking-tight\">Setup</h2>\n        </div>\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            <Card>\n                <CardHeader>\n                    <CardTitle>Lead Statuses</CardTitle>\n                    <CardDescription>Manage the statuses that can be assigned to a lead.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                        {ALL_STATUSES.map((status) => (\n                            <div key={status} className=\"flex items-center justify-between p-2 rounded-md bg-secondary\">\n                                <StatusBadge status={status} />\n                                <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 text-muted-foreground hover:text-destructive\">\n                                    <Trash2 className=\"h-4 w-4\" />\n                                </Button>\n                            </div>\n                        ))}\n                    </div>\n                </CardContent>\n                <CardFooter className=\"border-t pt-6\">\n                    <form className=\"flex w-full items-center gap-2\">\n                        <Input placeholder=\"Add new status\" />\n                        <Button type=\"submit\">\n                            <PlusCircle className=\"mr-2 h-4 w-4\" />\n                            Add Status\n                        </Button>\n                    </form>\n                </CardFooter>\n            </Card>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Lead Sources</CardTitle>\n                    <CardDescription>Manage the sources where your leads come from.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                        {leadSources.map((source) => (\n                            <div key={source.id} className=\"flex items-center justify-between p-2 rounded-md bg-secondary\">\n                                <span className=\"text-sm font-medium\">{source.name}</span>\n                                <form action={async () => {\n                                    \"use server\";\n                                    await deleteLeadSourceAction(source.id);\n                                    revalidatePath('/setup');\n                                }}>\n                                    <Button type=\"submit\" variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 text-muted-foreground hover:text-destructive\">\n                                        <Trash2 className=\"h-4 w-4\" />\n                                    </Button>\n                                </form>\n                            </div>\n                        ))}\n                    </div>\n                </CardContent>\n                <CardFooter className=\"border-t pt-6\">\n                    <form action={addLeadSourceAction} className=\"flex w-full flex-col sm:flex-row items-center gap-2\">\n                        <Input name=\"name\" placeholder=\"Add new source\" />\n                        <Button type=\"submit\" className=\"w-full sm:w-auto\">\n                            <PlusCircle className=\"mr-2 h-4 w-4\" />\n                            Add Source\n                        </Button>\n                    </form>\n                </CardFooter>\n            </Card>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Quotation Templates</CardTitle>\n                    <CardDescription>Create and manage templates for your quotations.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"flex items-center justify-center h-40\">\n                    <Button asChild>\n                        <Link href=\"/setup/quotation-templates\">\n                            <FileText className=\"mr-2 h-4 w-4\" />\n                            Manage Templates\n                        </Link>\n                    </Button>\n                </CardContent>\n            </Card>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Employee Roles</CardTitle>\n                    <CardDescription>Manage the available roles that can be assigned to an employee.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                     {employeeRoles.map((role) => (\n                        <div key={role.id} className=\"flex items-center justify-between p-2 rounded-md bg-secondary\">\n                            <Badge variant=\"secondary\">{role.name}</Badge>\n                            <form action={async () => {\n                                \"use server\";\n                                await deleteEmployeeRoleAction(role.id);\n                                revalidatePath('/setup');\n                            }}>\n                                <Button type=\"submit\" variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 text-muted-foreground hover:text-destructive\">\n                                    <Trash2 className=\"h-4 w-4\" />\n                                </Button>\n                            </form>\n                        </div>\n                    ))}\n                </CardContent>\n                 <CardFooter className=\"border-t pt-6\">\n                    <form action={addEmployeeRoleAction} className=\"flex w-full flex-col sm:flex-row items-center gap-2\">\n                        <Input name=\"name\" placeholder=\"Add new role\" />\n                        <Button type=\"submit\" className=\"w-full sm:w-auto\">\n                            <PlusCircle className=\"mr-2 h-4 w-4\" />\n                            Add Role\n                        </Button>\n                    </form>\n                </CardFooter>\n            </Card>\n\n            <Card>\n                <CardHeader>\n                    <CardTitle>Departments</CardTitle>\n                    <CardDescription>Manage the departments within your organization.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                     {departments.map((dept) => (\n                        <div key={dept.id} className=\"flex items-center justify-between p-2 rounded-md bg-secondary\">\n                            <span className=\"text-sm font-medium flex items-center gap-2\">\n                                <Building2 className=\"h-4 w-4 text-muted-foreground\" />\n                                {dept.name}\n                            </span>\n                            <form action={async () => {\n                                \"use server\";\n                                await deleteDepartmentAction(dept.id);\n                                revalidatePath('/setup');\n                            }}>\n                                <Button type=\"submit\" variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 text-muted-foreground hover:text-destructive\">\n                                    <Trash2 className=\"h-4 w-4\" />\n                                </Button>\n                            </form>\n                        </div>\n                    ))}\n                </CardContent>\n                 <CardFooter className=\"border-t pt-6\">\n                    <form action={addDepartmentAction} className=\"flex w-full flex-col sm:flex-row items-center gap-2\">\n                        <Input name=\"name\" placeholder=\"Add new department\" />\n                        <Button type=\"submit\" className=\"w-full sm:w-auto\">\n                            <PlusCircle className=\"mr-2 h-4 w-4\" />\n                            Add Department\n                        </Button>\n                    </form>\n                </CardFooter>\n            </Card>\n        </div>\n      </>\n    );\n  }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2379, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/.next-internal/server/app/setup/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_1 as '4022d157c8cd5dd5888c8027d0f74721175e5eb4d9'} from 'ACTIONS_MODULE0'\nexport {$$RSC_SERVER_ACTION_0 as '40e32d40c6b6763ac77c8630c8fa13f146eea4a575'} from 'ACTIONS_MODULE0'\nexport {$$RSC_SERVER_ACTION_2 as '40ef2dfaaa3ec4141c458309dda4d6bbccd08573f4'} from 'ACTIONS_MODULE0'\nexport {deleteLeadSource as '7f19fb9cefc9c18629c4a5201b33b0af5ef011f9b7'} from 'ACTIONS_MODULE1'\nexport {addQuotation as '7f26338635b4242dedba8310c38b00c71440fddb97'} from 'ACTIONS_MODULE1'\nexport {updateProduct as '7f305347673cd2e626b8723eec75ebf896091e1469'} from 'ACTIONS_MODULE1'\nexport {addQuotationTemplate as '7f31b97c152d22d9bc696247993677c1b11fe1e88b'} from 'ACTIONS_MODULE1'\nexport {getProducts as '7f3ebdab4c9e28219b3205095acd1a3d8a0c3dec24'} from 'ACTIONS_MODULE1'\nexport {getLeadById as '7f3f860cd47bbf2fe754ae4f717bdf31a3698e7aac'} from 'ACTIONS_MODULE1'\nexport {getRecentActivities as '7f46213a8091b810e7a14daa64453e5be7820c2a90'} from 'ACTIONS_MODULE1'\nexport {deleteDepartment as '7f56f93c241f7c01286f7c88f26e31d654c2d7c2b1'} from 'ACTIONS_MODULE1'\nexport {updateQuotationTemplate as '7f58fd92949b149001385fd1fdaa662a9a32ab5894'} from 'ACTIONS_MODULE1'\nexport {deleteProduct as '7f5f53c80e97d0c11178012ea42b95721ea78b0a5b'} from 'ACTIONS_MODULE1'\nexport {addEmployee as '7f6cb176d1d5647b4969a77fed3288a5b9e4888c63'} from 'ACTIONS_MODULE1'\nexport {addLead as '7f6d7c10ae47238d9b5d60592d1c2b057bc2c0143a'} from 'ACTIONS_MODULE1'\nexport {getEmployees as '7f736ae484f62a94ed7e8798ec00bbb59fa37002c7'} from 'ACTIONS_MODULE1'\nexport {deleteQuotationTemplate as '7f749321751df8f1f89b8ad18ed82b69924e7ba756'} from 'ACTIONS_MODULE1'\nexport {updateLead as '7f7a56e86d68b773394c70085491d7947f5f648311'} from 'ACTIONS_MODULE1'\nexport {getLeadSources as '7f7bc906ba116d805a4606fe084d083f2b10bea0cc'} from 'ACTIONS_MODULE1'\nexport {getQuotationById as '7f837e056e9d31ea40414af00a831552b723de26c3'} from 'ACTIONS_MODULE1'\nexport {getQuotations as '7f850c28f98ec8187c680d70937ac96fed0c3e5802'} from 'ACTIONS_MODULE1'\nexport {addDepartment as '7f866aea47841d75914cccd8ae569ac6512311de07'} from 'ACTIONS_MODULE1'\nexport {getQuotationTemplateById as '7f943d11209b09258ba74a15f5de093f133b91311c'} from 'ACTIONS_MODULE1'\nexport {addLeadSource as '7f988f4dc519373dbec21cd0ee7e9b4e6dce4aa270'} from 'ACTIONS_MODULE1'\nexport {addProduct as '7f9c708bc7a5f55867469681e784581b16dc74a99c'} from 'ACTIONS_MODULE1'\nexport {getEmployeeRoles as '7fa75ba8b749bc49717bb11a5415faa578d301fd0a'} from 'ACTIONS_MODULE1'\nexport {addEmployeeRole as '7fa7be6131932e219dd8a1891656b874c2d685a503'} from 'ACTIONS_MODULE1'\nexport {addActivityToLead as '7fa9d7e516fc8cb015c7d22af3a110dcabc62e4687'} from 'ACTIONS_MODULE1'\nexport {deleteEmployeeRole as '7fcb260124321b9f802463bbc2f160399cdf903d67'} from 'ACTIONS_MODULE1'\nexport {getLeads as '7fd329d70e4e457343cfcd4e75f8c40e93630e5a03'} from 'ACTIONS_MODULE1'\nexport {getEmployeeById as '7fd6bb217a88bb3d7b604d3f5ff2ced56685aac9a4'} from 'ACTIONS_MODULE1'\nexport {updateLeadStatus as '7ff3fc0e2eec05fe8cc1d0e87a246a6146e675ecb7'} from 'ACTIONS_MODULE1'\nexport {getQuotationTemplates as '7ff62b18f9ee3406389dd03953ea89f9080d52d223'} from 'ACTIONS_MODULE1'\nexport {getDepartments as '7ff7411b226526fc8169ff773867f9419959cc5b8a'} from 'ACTIONS_MODULE1'\nexport {logActivity as '4006cf6281145f3c650eb335184fbff2f8aced40b8'} from 'ACTIONS_MODULE2'\nexport {addQuotation as '4024aa8fb09e7f873f19d06a31fee6a52f4ca37853'} from 'ACTIONS_MODULE2'\nexport {addQuotationTemplateAction as '404bf695a53257ec49d907427838861ea52db6207f'} from 'ACTIONS_MODULE2'\nexport {addEmployeeAction as '4063bfb438e0f11798e34d19cfe02ae7ef620ed1a5'} from 'ACTIONS_MODULE2'\nexport {addDepartmentAction as '40662748300a823d9c5993caf120caa1f6c415117c'} from 'ACTIONS_MODULE2'\nexport {deleteProduct as '4069c275a38f798795866ab4f24f090a167a1de2f5'} from 'ACTIONS_MODULE2'\nexport {addProduct as '406cd11529d520d1744406778c5aa06a9c37fd3a8a'} from 'ACTIONS_MODULE2'\nexport {addEmployeeRoleAction as '406f16cfb672d28f6625d125f333e2ee93224fd249'} from 'ACTIONS_MODULE2'\nexport {deleteQuotationTemplateAction as '409620283cc4f3d22fbd2d6a47e1e26aa5687018e4'} from 'ACTIONS_MODULE2'\nexport {getSummaryForNotes as '40a25ae96195356d754ab8ecfec7515aa98a92b646'} from 'ACTIONS_MODULE2'\nexport {createLead as '40b940ba5a674106b071aeadf97e15cc56e22e57e6'} from 'ACTIONS_MODULE2'\nexport {deleteDepartmentAction as '40d3c0dd0fd36fd664f03a484e6adc6a5bc363d01e'} from 'ACTIONS_MODULE2'\nexport {addLeadSourceAction as '40e08c54bd641d8106e74f28ebe3b74f9149f98380'} from 'ACTIONS_MODULE2'\nexport {deleteEmployeeRoleAction as '40f34389a77f90407e3ff8f9edbc60000e2f8d6dbe'} from 'ACTIONS_MODULE2'\nexport {deleteLeadSourceAction as '40f8cee21b7ff02e3bbc924b136eccb2ab3bbe2047'} from 'ACTIONS_MODULE2'\nexport {updateQuotationTemplateAction as '6060cea1f43c3f8aef18539d71240d06cc2041833c'} from 'ACTIONS_MODULE2'\nexport {updateLead as '60806f1bbf0b1b0119f99174950b7a6743814a299c'} from 'ACTIONS_MODULE2'\nexport {updateProduct as '60b12166306a7f1eaad00be6b906442a18b6f0a865'} from 'ACTIONS_MODULE2'\nexport {updateLeadStatusAction as '60bc6d7633c33965904a4ffe450ab86a8c219d26de'} from 'ACTIONS_MODULE2'\nexport {summarizeMeetingNotes as '40cd92f2124ba08cf5efee15eb62f9ba61c4970533'} from 'ACTIONS_MODULE3'\n"],"names":[],"mappings":";AAAA;AAGA;AA+BA;AAmBA","debugId":null}}]
}