{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/lib/data/index.ts"],"sourcesContent":["\n'use server';\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { Lead, Activity, Product, LeadSource, UpdatableLeadData, Quotation, QuotationTemplate, NewProduct, Employee, NewEmployee, EmployeeRoleData, Department } from '../types';\n\nconst dataPath = path.join(process.cwd(), 'src', 'lib', 'data');\n\nasync function readData<T>(filename: string): Promise<T[]> {\n  try {\n    const filePath = path.join(dataPath, filename);\n    const fileContent = await fs.readFile(filePath, 'utf-8');\n    return JSON.parse(fileContent);\n  } catch (error) {\n    if (isNodeError(error) && error.code === 'ENOENT') {\n      // If the file doesn't exist, create it with an empty array\n      await writeData(filename, []);\n      return [];\n    }\n    console.error(`Error reading ${filename}:`, error);\n    throw new Error(`Could not read ${filename}`);\n  }\n}\n\nasync function writeData<T>(filename: string, data: T[]): Promise<void> {\n  try {\n    const filePath = path.join(dataPath, filename);\n    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');\n  } catch (error)\n{\n    console.error(`Error writing ${filename}:`, error);\n    throw new Error(`Could not write to ${filename}`);\n  }\n}\n\nfunction isNodeError(error: unknown): error is NodeJS.ErrnoException {\n    return error instanceof Error;\n}\n\nexport const getLeads = async (query?: string, status?: string): Promise<Lead[]> => {\n  let leads = await readData<Lead>('leads.json');\n  \n  if (query) {\n    const lowercasedQuery = query.toLowerCase();\n    leads = leads.filter(\n      lead =>\n        lead.name.toLowerCase().includes(lowercasedQuery) ||\n        lead.company.toLowerCase().includes(lowercasedQuery)\n    );\n  }\n\n  if (status) {\n    leads = leads.filter(lead => lead.status === status);\n  }\n  \n  return leads.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getLeadById = async (id: string): Promise<Lead | undefined> => {\n    const leads = await getLeads();\n    const lead = leads.find(lead => lead.id === id);\n    if (!lead) return undefined;\n    \n    return {\n      ...lead,\n      activities: lead.activities.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    };\n};\n\nexport const getRecentActivities = async (limit: number): Promise<{ lead: Lead; activity: Activity }[]> => {\n    const leads = await getLeads();\n    const allActivities = leads.flatMap(lead => \n        lead.activities.map(activity => ({ lead, activity }))\n    );\n    return allActivities\n        .sort((a, b) => new Date(b.activity.date).getTime() - new Date(a.activity.date).getTime())\n        .slice(0, limit);\n}\n\nexport const getProducts = async (): Promise<Product[]> => {\n  return await readData<Product>('products.json');\n}\n\nexport const getLeadSources = async (): Promise<LeadSource[]> => {\n    return await readData<LeadSource>('lead-sources.json');\n}\n\nexport const addProduct = async (productData: NewProduct): Promise<Product> => {\n  const products = await getProducts();\n  const newProduct: Product = {\n    ...productData,\n    id: `prod-${Date.now()}`,\n  };\n  products.unshift(newProduct);\n  await writeData<Product>('products.json', products);\n  return newProduct;\n};\n\nexport const updateProduct = async (id: string, productData: NewProduct): Promise<Product> => {\n    const products = await getProducts();\n    const productIndex = products.findIndex(p => p.id === id);\n    if (productIndex === -1) {\n        throw new Error('Product not found');\n    }\n    const updatedProduct = { ...products[productIndex], ...productData };\n    products[productIndex] = updatedProduct;\n    await writeData<Product>('products.json', products);\n    return updatedProduct;\n};\n\nexport const deleteProduct = async (id: string): Promise<{ success: boolean }> => {\n    let products = await getProducts();\n    const initialLength = products.length;\n    products = products.filter(p => p.id !== id);\n    if (products.length === initialLength) {\n        throw new Error('Product not found for deletion');\n    }\n    await writeData<Product>('products.json', products);\n    return { success: true };\n};\n\n\nexport const addLeadSource = async (name: string): Promise<LeadSource> => {\n    const leadSources = await getLeadSources();\n    const newSource: LeadSource = {\n        id: `source-${Date.now()}`,\n        name,\n    };\n    leadSources.unshift(newSource);\n    await writeData<LeadSource>('lead-sources.json', leadSources);\n    return newSource;\n};\n\nexport const deleteLeadSource = async (id: string): Promise<{ success: boolean }> => {\n    let leadSources = await getLeadSources();\n    const initialLength = leadSources.length;\n    leadSources = leadSources.filter(source => source.id !== id);\n    await writeData<LeadSource>('lead-sources.json', leadSources);\n    return { success: leadSources.length < initialLength };\n};\n\nexport const addLead = async (leadData: Omit<Lead, 'id' | 'createdAt' | 'activities'> & { notes?: string }): Promise<Lead> => {\n  const leads = await getLeads();\n  const newId = `lead-${Date.now()}`;\n  \n  const initialActivity: Activity[] = [];\n  if (leadData.notes) {\n    initialActivity.push({\n      id: `act-${newId}-1`,\n      date: new Date().toISOString(),\n      type: 'Email', \n      notes: `Lead created in the system. Initial notes: ${leadData.notes}`,\n    });\n  }\n\n  const { notes, ...restOfLeadData } = leadData;\n\n  const newLead: Lead = {\n    ...restOfLeadData,\n    id: newId,\n    createdAt: new Date().toISOString(),\n    activities: initialActivity,\n  };\n  leads.unshift(newLead);\n  await writeData<Lead>('leads.json', leads);\n  return newLead;\n};\n\nexport const addActivityToLead = async (leadId: string, activityData: Omit<Activity, 'id' | 'date'>): Promise<Activity> => {\n  const leads = await getLeads();\n  const leadIndex = leads.findIndex(l => l.id === leadId);\n  if (leadIndex === -1) {\n    throw new Error('Lead not found');\n  }\n\n  const lead = leads[leadIndex];\n  const newActivity: Activity = {\n    ...activityData,\n    id: `act-${leadId}-${lead.activities.length + 1}`,\n    date: new Date().toISOString(),\n  };\n  lead.activities.unshift(newActivity);\n  \n  await writeData<Lead>('leads.json', leads);\n  return newActivity;\n};\n\nexport const updateLeadStatus = async (leadId: string, status: Lead['status']): Promise<Lead> => {\n  const leads = await getLeads();\n  const leadIndex = leads.findIndex(l => l.id === leadId);\n  if (leadIndex === -1) {\n    throw new Error('Lead not found');\n  }\n\n  leads[leadIndex].status = status;\n  await writeData<Lead>('leads.json', leads);\n  return leads[leadIndex];\n};\n\nexport const updateLead = async (leadId: string, leadData: UpdatableLeadData): Promise<Lead> => {\n    const leads = await getLeads();\n    const leadIndex = leads.findIndex(l => l.id === leadId);\n    if (leadIndex === -1) {\n      throw new Error('Lead not found');\n    }\n  \n    const originalLead = leads[leadIndex];\n    const updatedLead: Lead = {\n      ...originalLead,\n      ...leadData,\n    };\n  \n    leads[leadIndex] = updatedLead;\n    await writeData<Lead>('leads.json', leads);\n    return updatedLead;\n};\n\n// Quotation specific functions\nexport const getQuotations = async (): Promise<Quotation[]> => {\n    const quotations = await readData<Quotation>('quotations.json');\n    return quotations.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getQuotationById = async (id: string): Promise<Quotation | undefined> => {\n    const quotations = await getQuotations();\n    return quotations.find(q => q.id === id);\n};\n\nexport const addQuotation = async (quotationData: Omit<Quotation, 'id' | 'createdAt' | 'quotationNumber'>): Promise<Quotation> => {\n    const quotations = await getQuotations();\n    const newQuotationNumber = `QUO-${String(quotations.length + 1).padStart(4, '0')}`;\n    const newQuotation: Quotation = {\n        ...quotationData,\n        id: `quo-${Date.now()}`,\n        quotationNumber: newQuotationNumber,\n        createdAt: new Date().toISOString(),\n    };\n    quotations.unshift(newQuotation);\n    await writeData<Quotation>('quotations.json', quotations);\n    return newQuotation;\n};\n\nexport const getQuotationTemplates = async (): Promise<QuotationTemplate[]> => {\n    return await readData<QuotationTemplate>('quotation-templates.json');\n};\n\nexport const getQuotationTemplateById = async (id: string): Promise<QuotationTemplate | undefined> => {\n    const templates = await getQuotationTemplates();\n    return templates.find(t => t.id === id);\n};\n\nexport const addQuotationTemplate = async (templateData: Omit<QuotationTemplate, 'id'>): Promise<QuotationTemplate> => {\n    const templates = await getQuotationTemplates();\n    const newTemplate: QuotationTemplate = {\n        ...templateData,\n        id: `template-${Date.now()}`,\n    };\n    templates.unshift(newTemplate);\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return newTemplate;\n};\n\nexport const updateQuotationTemplate = async (id: string, templateData: QuotationTemplate): Promise<QuotationTemplate> => {\n    const templates = await getQuotationTemplates();\n    const templateIndex = templates.findIndex(t => t.id === id);\n    if (templateIndex === -1) {\n        throw new Error('Template not found');\n    }\n    templates[templateIndex] = { ...templates[templateIndex], ...templateData };\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return templates[templateIndex];\n}\n\nexport const deleteQuotationTemplate = async (id: string): Promise<{ success: boolean }> => {\n    let templates = await getQuotationTemplates();\n    const initialLength = templates.length;\n    templates = templates.filter(t => t.id !== id);\n    if (templates.length === initialLength) {\n        throw new Error('Template not found for deletion');\n    }\n    await writeData<QuotationTemplate>('quotation-templates.json', templates);\n    return { success: true };\n}\n\n\n// Employee specific functions\nexport const getEmployees = async (): Promise<Employee[]> => {\n    const employees = await readData<Employee>('employees.json');\n    return employees.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n};\n\nexport const getEmployeeById = async (id: string): Promise<Employee | undefined> => {\n    const employees = await getEmployees();\n    return employees.find(employee => employee.id === id);\n};\n\nexport const addEmployee = async (employeeData: NewEmployee): Promise<Employee> => {\n    const employees = await getEmployees();\n    const newEmployee: Employee = {\n        ...employeeData,\n        id: `emp-${Date.now()}`,\n        createdAt: new Date().toISOString(),\n    };\n    employees.unshift(newEmployee);\n    await writeData<Employee>('employees.json', employees);\n    return newEmployee;\n};\n\nexport const getEmployeeRoles = async (): Promise<EmployeeRoleData[]> => {\n    return await readData<EmployeeRoleData>('employee-roles.json');\n}\n\nexport const addEmployeeRole = async (name: string): Promise<EmployeeRoleData> => {\n    const roles = await getEmployeeRoles();\n    const newRole: EmployeeRoleData = {\n        id: `role-${Date.now()}`,\n        name,\n    };\n    roles.push(newRole);\n    await writeData<EmployeeRoleData>('employee-roles.json', roles);\n    return newRole;\n}\n\nexport const deleteEmployeeRole = async (id: string): Promise<{ success: boolean }> => {\n    let roles = await getEmployeeRoles();\n    const initialLength = roles.length;\n    roles = roles.filter(role => role.id !== id);\n    await writeData<EmployeeRoleData>('employee-roles.json', roles);\n    return { success: roles.length < initialLength };\n}\n\nexport const getDepartments = async (): Promise<Department[]> => {\n    return await readData<Department>('departments.json');\n}\n\nexport const addDepartment = async (name: string): Promise<Department> => {\n    const departments = await getDepartments();\n    const newDepartment: Department = {\n        id: `dept-${Date.now()}`,\n        name,\n    };\n    departments.push(newDepartment);\n    await writeData<Department>('departments.json', departments);\n    return newDepartment;\n}\n\nexport const deleteDepartment = async (id: string): Promise<{ success: boolean }> => {\n    let departments = await getDepartments();\n    const initialLength = departments.length;\n    departments = departments.filter(dept => dept.id !== id);\n    await writeData<Department>('departments.json', departments);\n    return { success: departments.length < initialLength };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getLeads as '7fd329d70e4e457343cfcd4e75f8c40e93630e5a03'} from 'ACTIONS_MODULE0'\nexport {getRecentActivities as '7f46213a8091b810e7a14daa64453e5be7820c2a90'} from 'ACTIONS_MODULE0'\nexport {getProducts as '7f3ebdab4c9e28219b3205095acd1a3d8a0c3dec24'} from 'ACTIONS_MODULE0'\nexport {getQuotations as '7f850c28f98ec8187c680d70937ac96fed0c3e5802'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///Users/gauravshukla/Downloads/ll/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}