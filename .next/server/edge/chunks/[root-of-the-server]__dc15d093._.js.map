{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\n// Define public routes that don't require authentication\nconst publicRoutes = [\n  '/auth/login',\n  '/auth/signup',\n  '/auth/forgot-password',\n];\n\n// Define protected routes that require authentication\nconst protectedRoutes = [\n  '/',\n  '/leads',\n  '/products',\n  '/quotations',\n  '/employees',\n  '/setup',\n  '/profile',\n];\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  \n  // Check if the current path is a protected route\n  const isProtectedRoute = protectedRoutes.some(route => \n    pathname === route || pathname.startsWith(`${route}/`)\n  );\n  \n  // Check if the current path is a public route\n  const isPublicRoute = publicRoutes.some(route => \n    pathname === route || pathname.startsWith(`${route}/`)\n  );\n  \n  // For now, we'll let the client-side auth handle redirects\n  // In a production app, you'd verify the auth token here\n  \n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     */\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\n  ],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,yDAAyD;AACzD,MAAM,eAAe;IACnB;IACA;IACA;CACD;AAED,sDAAsD;AACtD,MAAM,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,iDAAiD;IACjD,MAAM,mBAAmB,gBAAgB,IAAI,CAAC,CAAA,QAC5C,aAAa,SAAS,SAAS,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;IAGvD,8CAA8C;IAC9C,MAAM,gBAAgB,aAAa,IAAI,CAAC,CAAA,QACtC,aAAa,SAAS,SAAS,UAAU,CAAC,GAAG,MAAM,CAAC,CAAC;IAGvD,2DAA2D;IAC3D,wDAAwD;IAExD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}